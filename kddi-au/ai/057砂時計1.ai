%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 9.0
%%For: (yasuda hisato) (d-kids)
%%Title: (057\215\273\216\236\214v1.ai)
%%CreationDate: 7/11/2003 2:58 PM
%%BoundingBox: 275 439 297 461
%%HiResBoundingBox: 275 439.0039 297 460.9976
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 298.5 420.3887 298.5 420.3887
%AI3_TileBox: 14.5 17.3896 578.5 827.3896
%AI3_DocumentPreview: None
%AI5_ArtSize: 595.2756 841.8898
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 247 478.8887 12 1014 722 18 0 0 10 67 0 1
%AI5_OpenViewLayers: 7
%%PageOrigin:14.5 17.3896
%%AI3_PaperRect:-14 828 581 -14
%%AI3_Margin:14 -15 -15 14
%AI7_GridSettings: 1 2 1 2 0 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 128 128 8
%%BeginData: 12394 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD7A6EFD0620FD7A6EFD0620FD7A6EFD0620FD7A6EFD0620FD7A6E
%FD0620FD1D6E986E986E986E986E986E986E986E986E986E986E986E9874
%9874986E986E986E986E986E986E986E986E98749874986E986E986E986E
%986E986E986E986E986E986E986E98FD186EFD0620FD066EFD1798FD17C0
%FD17C6FD18C0FD17984AFD0520FD066EFD1798FD18C0FD17C6FD17C0FD17
%98FD0620FD066EFD1798FD17C0FD18C6FD17C0FD17984AFD0520FD066EFD
%1798FD18C0FD17C6FD17C0FD1798FD0620FD066EFD1798FD17C0FD18C6FD
%17C0FD17984AFD0520444A444A444A6E986E986E986E986E986E986E986E
%986E986E986E986EC098C09898989E9898989E9898989E9898989E989898
%9E9EC69EC6FD119EC69EC09898989E9898989E9898989E9898989E989898
%9E98C098986E986E986E986E986E986E986E986E986E986E986E98FDFC20
%FDFC20FD8E204B754B754B75444A444A444A444A444A444A20442044204A
%4B754B754B4B204B204B204B4A4B4A4B4A4B4A4B4A4B4A4B4A4B4A4B4A4B
%4A4B4A4B4A4B4A4B4A4B4A4B4A4B4A4B4A4B4A4B4A4B4A4B4A4B4A4B4A4B
%4A4B4A4B4A4B4A4B4A4B204B204B20754B754B754A4A444A444A444A444A
%444A2044204420444A754B754B75FD05FFC9FD0B98FD062075FD05FFFD06
%28FD0CA7FD2E7DFD0628FD05FFC9FD0B984AFD0520A7FD0AFFCAFD0B984A
%FD052075FD05FFFD0628FD0BA7FD2F7DFD0628FD05FFA0FD0B98FD06207C
%FD0AFFCAFD0B9844FD052075FD05FFFD0628FD0CA7FD2E7DFD0628FD05FF
%C9FD0B984AFD0520A7FD0AFFCAFD0B984AFD052075FD05FFFD0628FD0BA7
%FD2F7DFD0628FD05FFA0FD0B98FD06207CFD0AFFCAFD0B9844FD05206FFD
%05FFFD0628FD0CA7FD2E7DFD0628FD05FFC9FD0B984AFD0520A1FD0AFFC9
%98C098C098C0FD05986E444A444A4475FD05FF7DFD0552CFA8CFA8CFA8CF
%A8A8A7A883FD2E84532852285252FD05FF9FC098C098C0FD0698444A444A
%444AA0FD0AFFC9FD06C0FD0598FD066E99FD05FF7DFD0452A8FD0BFFAFFD
%2E8B59FD0452A8FD05FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD05
%98FD066E99FD05FFA8FD04527DFD0BFFAFFD2E8B84FD04527DFD05FF9FFD
%05C0FD0698FD066EA1FD0AFFC9FD06C0FD0598FD066E99FD05FF7DFD0452
%A8FD0BFFAFFD2E8B59FD0452A8FD05FFC1FD06C0FD0698FD056EC9FD0AFF
%C9FD06C0FD0598FD066E99FD05FFA8FD04527DFD0BFFAFFD2E8B84FD0452
%7DFD05FF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E99FD
%05FF7DFD0452A8FD0BFFAFFD2E8B59FD0452A8FD05FFC8FD06C0FD0698FD
%056EC9FD0AFFC9FD06C0FD0598FD066E99FD05FFA8FD04527DFD0BFFAFFD
%2E8B84FD04527DFD05FF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD05
%98FD066E75FD05FF7DFD0452A8FD0BFFAFFD2E8B59FD0452A8FD05FFC8FD
%06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD05FFA8FD0452
%7DFD0BFFAFFD2E8B84FD04527DFD05FF9FFD05C0FD0698FD066EA0FD0AFF
%C9FD06C0FD0598FD066E99FD05FF7DFD0452A8FD0BFFAFFD2E8B59FD0452
%A8FD05FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD
%05FFA8FD04527DFD0BFFAFFD2E8B84FD04527DFD05FF9FFD05C0FD0698FD
%066EA1FD0AFFC9FD06C0FD0598FD066E99FD05FFA8FD04527DFD0BFFAFFD
%2E8B59FD0452A8FD05FFC1FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD05
%98FD066E99FD06FFFD0552FD0BFFAFFD2D8B84FD0552A8FD05FF9FFD05C0
%FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E99FD06FF7DFD04527DFD
%0AFFAFFD2D8B84FD0552FD06FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06
%C0FD0598FD066E99FD06FF7DFD0552A8FD09FFAFFD2D8BFD05527DFD06FF
%9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E75FD07FFFD05
%527DFD0AFFFD2C8B59FD0552A8FD06FFC8FD06C0FD0698FD056EC9FD0AFF
%C9FD06C0FD0598FD066E99FD07FF7DFD05527DFD09FFFD2B8B59FD0652FD
%07FF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E99FD08FF
%7DFD0552A8FD08FFAFFD298B84FD0652FD08FFC8FD06C0FD0698FD056EC9
%FD0AFFC9FD06C0FD0598FD066E99FD08FFA8FD0652A8FD08FFFD288B59FD
%0652A8FD08FF9FFD05C0FD0698FD066EA1FD0AFFC9FD06C0FD0598FD066E
%99FD09FF7DFD0652A8FD07FFAFFD268B84FD06527DFD09FFC1FD06C0FD06
%98FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD0AFFFD0752A8FD07FFAF
%FD248B59FD06527DFD0AFF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD
%0598FD066E99FD0BFF7DFD0652A8FD07FFAFFD228B60FD06527DFD0BFFC8
%FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD0CFFFD0752
%A8FD06FFAFAFFD208B60FD06527DFD0CFF9FFD05C0FD0698FD066EA0FD0A
%FFC9FD06C0FD0598FD066E75FD0DFFFD07525A3137315B31373137375B37
%5B375B375B375B375B375B375B375B375B375B375B375B375B375B30FD06
%527DFD0DFFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD066E99
%FD0EFFFD075230FD080FFD1C0907FD06527DA8FD0DFF9FFD05C0FD0698FD
%066EA0FD0AFFC9FD06C0FD0598FD066E99FD0FFFFD075230FD080FFD1A09
%2AFD06527DFD0FFFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD
%066E99FD10FFFD075230FD080FFD180907FD06527DA8FD0FFF9FFD05C0FD
%0698FD066EA1FD0AFFC9FD06C0FD0598FD066E99FD11FFFD075230FD080F
%FD16092AFD06527DFD11FFC1FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD
%0598FD066E99FD12FFFD075230FD080FFD140907FD06527DA8FD11FF9FFD
%05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E99FD13FF7DFD0652
%30FD080FFD12092AFD06527DFD13FFC8FD06C0FD0698FD056EC9FD0AFFC9
%FD06C0FD0598FD066E99FD14FFFD075230FD080FFD100908FD06527DFD14
%FF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E75FD15FFFD
%075230FD080FFD0E092AFD06527DFD15FFC8FD06C0FD0698FD056EC9FD0A
%FFC9FD06C0FD0598FD066E99FD16FFFD075230FD080FFD0C0907FD06527D
%A8FD15FF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E99FD
%17FFFD075230FD070FFD0B0908FD06527DFD17FFC8FD06C0FD0698FD056E
%C9FD0AFFC9FD06C0FD0598FD066E99FD18FFFD0752FD070FFD0A0908FD06
%527DA8FD17FF9FFD05C0FD0698FD066EA1FD0AFFCAFD05C99F986E986E98
%99C9A1C9A1C9CAFD19FFFD0752FD070FFD090953FD05527DFD19FFCFFD05
%C9C26E986E986EA0A1C9A1C9A1FD11FFA1FD056EA1FD20FFFD06522FFD07
%0FFD070930FD05527DA8FD1FFFA0FD056EA0FD16FFA0FD056EA0FD21FFFD
%055253FD070FFD0709FD05527DFD21FFA1FD056EA1FD16FFA1FD056EA1FD
%22FFFD055230FD060FFD060908FD0552A8FD21FFA0FD056EA0FD16FFA0FD
%056EA0FD22FF7DFD04522FFD060FFD060930FD04527DFD22FFA1FD056EA1
%FD16FFA1FD056EA1FD22FFA8FD045253FD060FFD06092EFD0452A8FD22FF
%A0FD056EA0FD16FFA0FD056EA0FD22FFA8FD04527DFD060FFD06097DFD04
%52A8FD22FFA1FD056EA1FD16FFA1FD056EA1FD22FF7DFD04527DFD060FFD
%060959FD04527DFD22FFA0FD056EA0FD16FFA0FD056EA0FD21FFA8FD0552
%A8FD060FFD060984FD0552FD22FFA1FD056EA1FD16FFA1FD056EA1FD20FF
%A87DFD0552FFFD060FFD06098BFD0652A8FD20FFA0FD056EA0FD16FFA0FD
%056EA0FD20FF7DFD0552A8FFFD060FFD06098B59FD0652FD20FFA1FD056E
%A1FD10FFCFA6C9C9C9A6A0FD056E9AA0C9A1A1A0CAFD19FF7DFD05527DFF
%FFFD060FFD06098B8BFD0752FD19FFCAC9A6C9C9C999FD056E99A1A0C9A1
%A1A8FD0AFFC9FD06C0FD0598FD066E75FD18FF7DFD0652A8FFFFFD060FFD
%06098B8B8BFD0752FD18FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD
%0598FD066E99FD16FFA87DFD06527DFFFFFFFD060FFD0609FD048BFD0752
%FD17FF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E99FD16
%FF7DFD0652A8FD04FFFD060FFD0609FD058BFD0752FD16FFC8FD06C0FD06
%98FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD14FFA87DFD06527DFD05
%FFFD060FFD0609FD068BFD0752FD15FF9FFD05C0FD0698FD066EA1FD0AFF
%C9FD06C0FD0598FD066E99FD14FF7DFD0652A8FD06FFFD060FFD0609FD07
%8BFD0752FD14FFC1FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD06
%6E99FD12FFA87DFD06527DFD07FFFD060FFD0609FD078B84FD0752A8FD12
%FF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E99FD12FF7D
%FD0652A8FD07FFAFFD060FFD0609FD098BFD0752FD12FFC8FD06C0FD0698
%FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD11FF7DFD0652A8FD07FFAF
%8BFD060FFD0609FD0A8BFD0752FD11FF9FFD05C0FD0698FD066EA0FD0AFF
%C9FD06C0FD0598FD066E75FD10FF7DFD0652A8FD07FF8B8B8BFD060FFD06
%09FD0B8BFD0752FD10FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD05
%98FD066E99FD0EFFA87DFD06527DFD07FFFD048BFD060FFD0609FD0C8BFD
%0752FD0FFF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E99
%FD0EFF7DFD0652A8FD07FFFD058BFD060FFD0609FD0D8BFD0752FD0EFFC8
%FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD0CFFA87DFD
%06527DFD07FFFD068BFD060FFD060985FD0D8BFD0752FD0DFF9FFD05C0FD
%0698FD066EA1FD0AFFC9FD06C0FD0598FD066E99FD0CFF7DFD0652A8FD07
%FFFD068B37FD060FFD060985FD0E8BFD0752FD0CFFC1FD06C0FD0698FD05
%6EC9FD0AFFC9FD06C0FD0598FD066E99FD0AFFA87DFD06527DFD07FFFD07
%8B37FD060FFD060937FD0E8B84FD0752FD0BFF9FFD05C0FD0698FD066EA0
%FD0AFFC9FD06C0FD0598FD066E99FD0AFF7DFD0652A8FD07FFFD088BFD07
%0FFD06095BFD108BFD0752FD0AFFC8FD06C0FD0698FD056EC9FD0AFFC9FD
%06C0FD0598FD066E99FD09FF7DFD0652A8FD07FFAFFD088BFD070FFD0709
%FD118BFD06527DFD09FF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD05
%98FD066E75FD08FFA8FD0652A8FD08FFFD088B61FD060FFD08095BFD108B
%84FD06527DFD08FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD
%066E99FD08FFFD06527DFD08FFAFFD088BFD070FFD080931FD118B84FD06
%52A8FD07FF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E99
%FD07FF7DFD05527DFD09FFFD088B5BFD070FFD090985FD118B84FD05527D
%FD07FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD06
%FFA8FD0652FD09FFAFFD078B61FD070FFD0B09FD128B59FD0552A8FD06FF
%9FFD05C0FD0698FD066EA1FD0AFFC9FD06C0FD0598FD066E99FD06FFA8FD
%0552FD0AFFAFFD078B37FD080FFD0A0931FD128BFD05527DFD06FFC1FD06
%C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD06FFFD0552A8FD
%0AFFAFFD068B37FD080FFD0C0937FD118B59FD0552FD06FF9FFD05C0FD06
%98FD066EA0FD0AFFC9FD06C0FD0598FD066E99FD05FFA8FD0552FD0BFFAF
%FD058B37FD080FFD0E095BFD118BFD0552FD06FFC8FD06C0FD0698FD056E
%C9FD0AFFC9FD06C0FD0598FD066E99FD05FFA8FD0552FD0BFFAFFD048B37
%FD080FFD10095BFD108B59FD04527DFD05FF9FFD05C0FD0698FD066EA0FD
%0AFFC9FD06C0FD0598FD066E75FD05FF7DFD04527DFD0BFFAF8B8B8B37FD
%090FFD11095BFD0F8B59FD0452A8FD05FFC8FD06C0FD0698FD056EC9FD0A
%FFC9FD06C0FD0598FD066E99FD05FFA8FD04527DFD0BFFAF8B8B37FD090F
%FD130937FD0E8B84FD04527DFD05FF9FFD05C0FD0698FD066EA0FD0AFFC9
%FD06C0FD0598FD066E99FD05FF7DFD0452A8FD0BFFAF8B5BFD0A0FFD1409
%5BFD0D8B59FD0452A8FD05FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0
%FD0598FD066E99FD05FFA8FD04527DFD0BFFAF37FD090FFD170937FD0C8B
%84FD04527DFD05FF9FFD05C0FD0698FD066EA1FD0AFFC9FD06C0FD0598FD
%066E99FD05FF7DFD0452A8FD0BFF5BFD0A0FFD18095BFD0B8B59FD0452A8
%FD05FFC1FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD05
%FFA8FD04527DFD0AFF5BFD0A0FFD1A0937FD0A8B84FD04527DFD05FF9FFD
%05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD066E99FD05FF7DFD0452
%A8FD09FF5BFD0A0FFD1C095BFD098B59FD0452A8FD05FFC8FD06C0FD0698
%FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD05FFA8FD04527DFD08FF5B
%FD0A0FFD1E095BFD088B84FD04527DFD05FF9FFD05C0FD0698FD066EA0FD
%0AFFC9FD06C0FD0598FD066E75FD05FF7DFD0452A8FD07FF5BFD0A0FFD20
%095BFD078B59FD0452A8FD05FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06
%C0FD0598FD066E99FD05FFA8FD04527DFD06FF5BFD0A0FFD220937FD068B
%84FD04527DFD05FF9FFD05C0FD0698FD066EA0FD0AFFC9FD06C0FD0598FD
%066E99FD05FF7DFD0452A8FD05FF5BFD0A0FFD24095BFD058B59FD0452A8
%FD05FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD05
%FFA8FD04527DFD04FF5BFD0A0FFD260937FD048B84FD04527DFD05FF9FFD
%05C0FD0698FD066EA1FD0AFFC9FD06C0FD0598FD066E99FD05FF7DFD0452
%A8FFFFFF5BFD0A0FFD28095B8B8B8B59FD0452A8FD05FFC1FD06C0FD0698
%FD056EC9FD0AFFC9FD06C0FD0598FD066E99FD05FFA8FD04527DFFFF5BFD
%0A0FFD2A09378B8B84FD04527DFD05FF9FFD05C0FD0698FD066EA0FD0AFF
%C9FD06C0FD0598FD066E99FD05FF7DFD0452A8FF5BFD0B0FFD2B095B8B59
%FD0452A8FD05FFC8FD06C0FD0698FD056EC9FD0AFFC9FD06C0FD0598FD06
%6E99FD05FFA8FD04527D5BFD0A0FFD2E095B84FD04527DFD05FF9FFD05C0
%FD0698FD066EA0FD05FFA1A0A1A0A199FD07986E986E98FD076EA1A0A1A0
%A176754B754B7628532853285328532853284D284D284D284D284D284D28
%4D284D284D284D284D284D284D284D284D284D284D284D284D284D284D28
%4D284D284D52754B754B7CA0A1A0A1A099FD06986E986E98FD076E6F4B76
%4B754BFD7A6EFD0620FD7A6EFD0620FD7A6EFD0620FD7A6EFD0620FD7A6E
%FD0620FD066EFD1798FD04C098C098C098C098C098C098C098C098C098C0
%98C6C0C6C0C69EC69EC69EC69EC69EC69EC69EC69EC6C0C6C0C098C098C0
%98C098C098C098C098C098C098C098C0C0C0FD17984AFD0520FD066EFD17
%98FD18C0FD17C6FD17C0FD1798FD0620FD066EFD1798FD17C0FD17C6FD18
%C0FD17984AFD0520FD066EFD1798FD18C0FD17C6FD17C0FD1798FD0620FD
%066EFD1798FD17C0FD18C6FD17C0FD17984AFD0520FD066EFD1798FD18C0
%FD17C6FD17C0FD1798FD0C204A444A204A444A204A444A204A444A204A44
%4A204A444A4A74FD154A746E74FD114A746E74FD154A6E4A74444A204A44
%4A204A444A204A444A204A444A204A444A204AFDFC20FDFC20FD8C2020
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs
([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc
0.2157 0.1373 0.4549 0.0196 0.8 0.8 0.6 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 28) Pc
0.5412 0.4314 0.4157 0.302 0.4 0.4 0.4 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 33) Pc
0.2471 0.8157 1 0.2235 0.6 0.2 0 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 35) Pc
0.1294 0.698 1 0.0314 0.8 0.4 0 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 36) Pc
0 0.5059 0.949 0 1 0.6 0 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 37) Pc
0 0.2471 0.9373 0 1 0.8 0 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 38) Pc
0.5216 0.6118 0.5255 0.7961 0.2 0 0 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 39) Pc
0.9098 0.7765 0.2157 0.2314 0.2 0.2 0.4 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 40) Pc
0.2157 0.1373 0.4549 0.0196 0.8 0.8 0.6 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 41) Pc
0.4157 0.3098 0.302 0.0902 0.6 0.6 0.6 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 42) Pc
0.2588 0 0.1059 0 0.6 1 1 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 43) Pc
0 0 0 0 1 1 1 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 44) Pc
0.9882 0.7529 0 0 0 0.2 1 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 45) Pc
0.8549 0.5765 0 0 0 0.4 1 Xa
(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 46) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Calligraphic Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\203\214\203C\203\204\201[ 1) Ln
0 A
u0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
290.0005 452.9912 m
291.001 453.9917 291.5 454.4897 291.5 455.4897 c
291.5 455.9912 291.5 458.5132 Y
280.5103 458.5132 L
280.5103 455.9912 280.5103 455.4897 v
280.5103 454.4897 281.0093 453.9917 282.0098 452.9912 c
283.0117 451.9907 283.5098 451.4917 284.0098 450.9912 c
284.5068 450.4951 284.5 450.0132 284.5 450.0015 c
284.5 449.9897 284.5068 449.5078 284.0098 449.0117 c
283.5098 448.5112 283.0117 448.0122 282.0098 447.0117 c
281.0093 446.0112 280.5103 445.5132 280.5103 444.5132 c
280.5103 444.0117 280.5103 441.4897 Y
291.5 441.4897 L
291.5 444.0117 291.5 444.5132 v
291.5 445.5132 291.001 446.0112 290.0005 447.0117 c
288.9985 448.0122 288.5005 448.5112 288.0005 449.0117 c
287.5034 449.5078 287.5103 449.9897 287.5103 450.0015 c
287.5103 450.0132 287.5034 450.4951 288.0005 450.9912 c
288.5005 451.4917 288.9985 451.9907 290.0005 452.9912 c
f0.2588 0 0.1059 0 0.6 1 1 Xa
290.0005 452.9912 m
291.001 453.9917 291.5 454.4897 291.5 455.4897 c
291.5 455.9912 291.5 458.5132 Y
287 458.5132 L
283 458.5132 L
283 457.5352 283 455.3867 283 455.0015 c
283 454.5 283 453.9282 284 453 c
285 452.0718 286 451.5 286 450.0015 c
286 448.5029 285 447.9312 284 447.0029 c
283 446.0747 283 445.5029 283 445.0015 c
283 444.6162 283 442.4678 283 441.4897 C
287 441.4897 L
291.5 441.4897 L
291.5 444.0117 291.5 444.5132 v
291.5 445.5132 291.001 446.0112 290.0005 447.0117 c
288.9985 448.0122 288.5005 448.5112 288.0005 449.0117 c
287.5034 449.5078 287.5103 449.9897 287.5103 450.0015 c
287.5103 450.0132 287.5034 450.4951 288.0005 450.9912 c
288.5005 451.4917 288.9985 451.9907 290.0005 452.9912 c
f0.9882 0.7529 0 0 0 0.2 1 Xa
288 445.0015 m
287.25 445.751 287 446.5 287 447.4766 c
287 448.5 287 450.0015 Y
290.0215 453 L
281.9785 453 L
285 450.0015 L
285 448.5 285 447.4766 v
285 446.5 284.75 445.751 284 445.0015 C
280 441.0317 L
280 440.7192 280 440.0146 Y
292.0303 440.0146 L
292.0303 440.7061 292.0303 441.0015 V
288 445.0015 L
f0.8549 0.5765 0 0 0 0.4 1 Xa
285 450.0015 m
285 448.5 285 447.4766 v
285 446.5 284.75 445.751 284 445.0015 C
280 441.0317 L
280 440.7192 280 440.0146 Y
281.002 440.0146 L
282.2393 441.2524 284.6309 444.1128 285 444.4814 c
285.501 444.9819 286 445.8574 286 446.978 c
286 447.4561 286 449.5 286 450.0015 c
286 450.165 285.915 450.9478 285.5 451.5 c
285 452.166 284 453 Y
281.9785 453 L
285 450.0015 L
f0.2471 0.8157 1 0.2235 0.6 0.2 0 Xa
277.002 448.0029 m
278.002 448.0029 L
278.002 452.0029 L
277.002 452.0029 L
277.002 448.0029 L
f1 Ap
0.1294 0.698 1 0.0314 0.8 0.4 0 Xa
279.002 440.5625 m
276.002 440.5625 L
276.002 449.0015 L
279.002 449.0015 L
279.002 440.5625 L
f0 Ap
0 0.5059 0.949 0 1 0.6 0 Xa
276.002 440.5625 m
277.002 440.5625 L
277.002 449.0015 L
276.002 449.0015 L
276.002 440.5625 L
f0.2471 0.8157 1 0.2235 0.6 0.2 0 Xa
278.002 440.5625 m
279.002 440.5625 L
279.002 449.0015 L
278.002 449.0015 L
278.002 440.5625 L
f1 Ap
0.1294 0.698 1 0.0314 0.8 0.4 0 Xa
279.002 451.0015 m
276.002 451.0015 L
276.002 458.437 L
279.002 458.437 L
279.002 451.0015 L
f0 Ap
0 0.5059 0.949 0 1 0.6 0 Xa
276.002 451.0015 m
277.002 451.0015 L
277.002 456.9995 L
276.002 456.9995 L
276.002 451.0015 L
f0.2471 0.8157 1 0.2235 0.6 0.2 0 Xa
278.002 451.0015 m
279.002 451.0015 L
279.002 456.9995 L
278.002 456.9995 L
278.002 451.0015 L
f0.5216 0.6118 0.5255 0.7961 0.2 0 0 Xa
278.002 456.9995 m
279.002 456.9995 L
279.002 458.501 L
278.002 458.501 L
278.002 456.9995 L
f0.2471 0.8157 1 0.2235 0.6 0.2 0 Xa
294 448.0029 m
295 448.0029 L
295 452.0029 L
294 452.0029 L
294 448.0029 L
f1 Ap
0.1294 0.698 1 0.0314 0.8 0.4 0 Xa
296 440.5625 m
293 440.5625 L
293 449.0015 L
296 449.0015 L
296 440.5625 L
f0 Ap
0 0.5059 0.949 0 1 0.6 0 Xa
293 440.5625 m
294 440.5625 L
294 449.0015 L
293 449.0015 L
293 440.5625 L
f0.2471 0.8157 1 0.2235 0.6 0.2 0 Xa
295 440.5625 m
296 440.5625 L
296 449.0015 L
295 449.0015 L
295 440.5625 L
f1 Ap
0.1294 0.698 1 0.0314 0.8 0.4 0 Xa
296 451.0015 m
293 451.0015 L
293 458.437 L
296 458.437 L
296 451.0015 L
f0 Ap
0 0.5059 0.949 0 1 0.6 0 Xa
293 451.0015 m
294 451.0015 L
294 456.9995 L
293 456.9995 L
293 451.0015 L
f0.2471 0.8157 1 0.2235 0.6 0.2 0 Xa
295 451.0015 m
296 451.0015 L
296 456.9995 L
295 456.9995 L
295 451.0015 L
f0.5216 0.6118 0.5255 0.7961 0.2 0 0 Xa
295 456.9995 m
296 456.9995 L
296 458.501 L
295 458.501 L
295 456.9995 L
f0 R
0.5412 0.4314 0.4157 0.302 0.4 0.4 0.4 XA
290.0005 452.9912 m
291.001 453.9917 291.5 454.4897 291.5 455.4897 c
291.5 455.9912 291.5 458.5132 Y
280.5103 458.5132 L
280.5103 455.9912 280.5103 455.4897 v
280.5103 454.4897 281.0093 453.9917 282.0098 452.9912 c
283.0117 451.9907 283.5098 451.4917 284.0098 450.9912 c
284.5068 450.4951 284.5 450.0132 284.5 450.0015 c
284.5 449.9897 284.5068 449.5078 284.0098 449.0117 c
283.5098 448.5112 283.0117 448.0122 282.0098 447.0117 c
281.0093 446.0112 280.5103 445.5132 280.5103 444.5132 c
280.5103 444.0117 280.5103 441.4897 Y
291.5 441.4897 L
291.5 444.0117 291.5 444.5132 v
291.5 445.5132 291.001 446.0112 290.0005 447.0117 c
288.9985 448.0122 288.5005 448.5112 288.0005 449.0117 c
287.5034 449.5078 287.5103 449.9897 287.5103 450.0015 c
287.5103 450.0132 287.5034 450.4951 288.0005 450.9912 c
288.5005 451.4917 288.9985 451.9907 290.0005 452.9912 c
s0 O
0.4157 0.3098 0.302 0.0902 0.6 0.6 0.6 Xa
291.5303 458.4375 m
282.5 458.4375 L
282.5 456.9985 L
291.5303 456.9985 L
291.5303 457.9336 291.5303 458.4375 Y
f0.2157 0.1373 0.4549 0.0196 0.8 0.8 0.6 Xa
280 458.4375 m
280 457.9336 280 456.9985 V
283 456.9985 L
283 458.4375 L
280 458.4375 L
f0.9098 0.7765 0.2157 0.2314 0.2 0.2 0.4 Xa
291 456.9985 m
292 456.9985 L
292 458.5 L
291 458.5 L
291 456.9985 L
f280 456.9985 m
281 456.9985 L
281 458.5 L
280 458.5 L
280 456.9985 L
f0.2471 0.8157 1 0.2235 0.6 0.2 0 Xa
297 458 m
297 460.9976 L
275 460.9976 L
275 458 L
297 458 L
f0.5216 0.6118 0.5255 0.7961 0.2 0 0 Xa
296 460.9976 m
296 458.999 L
275 458.999 L
275 458 L
297 458 L
297 460.9976 L
296 460.9976 L
f1 Ap
0.1294 0.698 1 0.0314 0.8 0.4 0 Xa
280.5 458.999 m
276 458.999 L
276 460 L
280.5 460 L
280.5 458.999 L
f0 0.5059 0.949 0 1 0.6 0 Xa
284.5 458.999 m
280 458.999 L
280 460 L
284.5 460 L
284.5 458.999 L
f0.1294 0.698 1 0.0314 0.8 0.4 0 Xa
296 458.999 m
291.5 458.999 L
291.5 460 L
296 460 L
296 458.999 L
f0 0.5059 0.949 0 1 0.6 0 Xa
292 458.999 m
287.5 458.999 L
287.5 460 L
292 460 L
292 458.999 L
f0 0.2471 0.9373 0 1 0.8 0 Xa
288 458.999 m
284 458.999 L
284 460 L
288 460 L
288 458.999 L
f0 Ap
0.2471 0.8157 1 0.2235 0.6 0.2 0 Xa
297 439.0039 m
297 442.0015 L
275 442.0015 L
275 439.0039 L
297 439.0039 L
f0.5216 0.6118 0.5255 0.7961 0.2 0 0 Xa
296 442.0015 m
296 440.0029 L
275 440.0029 L
275 439.0039 L
297 439.0039 L
297 442.0015 L
296 442.0015 L
f1 Ap
0.1294 0.698 1 0.0314 0.8 0.4 0 Xa
280.5 440.0029 m
276 440.0029 L
276 441.0039 L
280.5 441.0039 L
280.5 440.0029 L
f0 0.5059 0.949 0 1 0.6 0 Xa
284.5 440.0029 m
280 440.0029 L
280 441.0039 L
284.5 441.0039 L
284.5 440.0029 L
f0.1294 0.698 1 0.0314 0.8 0.4 0 Xa
296 440.0029 m
291.5 440.0029 L
291.5 441.0039 L
296 441.0039 L
296 440.0029 L
f0 0.5059 0.949 0 1 0.6 0 Xa
292 440.0029 m
287.5 440.0029 L
287.5 441.0039 L
292 441.0039 L
292 440.0029 L
f0 0.2471 0.9373 0 1 0.8 0 Xa
288 440.0029 m
284 440.0029 L
284 441.0039 L
288 441.0039 L
288 440.0029 L
fULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
