%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (328_\202\251\202\355\202\242\202\242.ai)%%CreationDate: (7/10/03) (6:36 AM)%%BoundingBox: 264 431 288 456%%HiResBoundingBox: 264 431.8628 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 7%AI8_OpenToView: 235 473.8887 12 1014 722 18 0 0 7 43 0 0%AI5_OpenViewLayers: 6666673%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 8134 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD45FFA87D4B4BFD05204B52A8FD14FFA87D4B4BFD05204B4BA8FD%51FFA87DFD0E2052CAFD0FFF7DFD0E204BA8FD4DFF7D4BFD112076A8FD0B%FFA14BFD11204BA8FD4AFF4BFD142027A8FD09FF76FD152076FD48FF27FD%17207DFD07FF52FD172052FD45FFA8FD0B204468696869FD0A207DFD05FF%4BFD0920446968696844FD0A2052FD43FFCAFD0920698DFD07B08D69FD07%204BA8FFFFFF52FD08208DFD08B08D69FD082052FD42FFFD082068FD0DB0%FD07204BA8FF7DFD072044FD0DB044FD072076FD40FF76FD0620458DFD0F%B044FD062052A84BFD062068FD0FB068FD0720A8FD3EFFA1FD0620448DFD%11B044FD06204BFD062068FD11B08CFD06204BFD3EFF4BFD0520448DFD13%B0FD0C2068FD13B068FD0620A1FD3CFF7DFD06208CFD07B0B5C3C3CAC3C3%FD07B08DFD0A2044FD15B044FD0620FD3CFF4BFD052068FD06B0BCCAFD07%FFCAB6FD05B069FD0920FD17B0FD06207DFD3AFFA8FD0620FD06B0BDFD07%FFCABDBDB5FD05B08CFD082069FD17B08DFD05204BFD3AFF7DFD052069FD%05B0BDFD06FFC3B6FD0AB068FD07208DFD18B044FD0520FD3AFFFD06208C%FD04B0B5CAFD04FFCAFD0EB0FD062044FD19B044FD05207DFD39FFFD0520%44FD05B0C3FD04FFCAFD0FB069FD05208DFD1AB0FD052052FD38FFA8FD05%2069FD05B0FD04FFC4FD10B08C6968696869FD1BB0FD0620FD38FF76FD05%208CFD04B0BCFD04FFFD32B044FD0520FD38FF76FD0520FD05B0B6FFFFFF%B5FD32B068FD0520A8FD37FF4BFD0520FD05B0C3FFFFCAFD33B068FD0520%A8FD16FFA8A1764B274B2020204B4B7D7DFD14FF4BFD0520FD05B0B6FFFF%BCFD33B08DFD0520A8FD13FFA87DFD0F204B7DFD11FF4BFD042045FD05B1%B6FFFFFD34B169FD052076FD11FFA1FD152052A8FD0EFF4BFD0520FD06B1%CAC4FD34B16AFD052076FD0FFF7D4BFD182052FD0DFF4BFD042045FD06B1%B7CBFD34B169FD05207DFD0EFF4BFD1C20A1FD0BFF4BFD0520FD07B1B6FD%33B18E6AFD0520A8FD0CFFA1FD0D2045444444454444FD0B2076FD0AFF76%FD0520FD3BB1B269FD0520A8FD0BFF76FD0A2044698CFD09B06868FD0920%52A8FD08FF7DFD0520FD3BB18E45FD0520FD0BFF76FD092069FD10B06845%FD07204BFD08FFA8FD052069FD3BB1FD05204BFD0AFF52FD082068FD13B0%8C44FD07204BFD08FFFD052045FD3AB169FD052052FD09FF76FD072069FD%17B08DFD072076FD07FF76FD0520FD39B18E69FD0520A8FD08FF76FD0720%69FD19B08DFD07207DFD06FF4BFD052069FD38B18EFD0620FD08FFA8FD07%208DFD1CB0FD0720CAFD04FFA84BFD052045FD37B1B269FD052052FD08FF%FD07208DFD1DB08DFD062027FD04FF4BFD072069FD36B18E45FD0520A8FD%07FF4BFD06208DFD1FB069FD062076FFFFA1FD0920FD36B18EFD05204BFD%07FFA1FD062069FD21B044FD0620A8FFFD0420F8FD052069FD34B18EFD06%207DFD07FF4BFD052045FD23B045FD05207676FD0A2045FD33B1B269FD05%2027FD07FFA1FD06208CFD0DB0B5C3C4FD04FFCAC3B6FD0CB068FD122069%FD32B18EFD0620A1FD07FF4BFD052068FD0CB0BCCAFD0BFFB6FD0BB044FD%0A20448CFD06208EFD30B18E69FD05204BFD07FFA1FD0620FD0CB0CAFD0E%FFC4FD0AB08DFD0A208CB0FD0720B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1%B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1%B28E6AFD06207DFD07FF76FD052069FD0BB0FD0BFFCAC4BCB6FD0DB045FD%082044B0B0B0FD062069FD2EB28FFD06204BFD08FFFD06208CFD0AB0CAFD%09FFC4B5FD11B08CFD08208DB0B0B069FD06208EFD2DB245FD0620FD08FF%7DFD052044FD0AB0CAFD08FFC4B6FD14B0FD072044FD04B08D44FD052045%8FFD2BB26AFD06207DFD08FF52FD05208DFD09B0BDFD08FFB6FD16B069FD%062068FD05B068FD062045FD2AB26AFD06204BFD09FFFD0620FD0AB0CAFD%07FFB6FD18B0FD0620FD07B068FD06208EFD28B28F45FD0620A8FD08FFA8%FD052044FD09B0BCFD06FFCBFD1AB0FD04442069FD08B0FD07208EFD26B2%8F45FD062076FD09FFA8FD052069FD09B0CAFD06FFB5FD29B0FD0720FD25%B28F6AFD06204BFD0AFF52FD05208CFD09B0CAFD05FFB6FD2AB08DFD0720%FD23B28F6AFD0720FD0BFF76FD0520FD0AB0FD05FFC3FD2CB069FD062044%FD21B28F8FFD0720FD0CFF27FD0520FD09B0B6FD04FFCAB5FD2CB08D44FD%062045FD20B28FFD07207DFD0CFF27FD042044FD09B0B6FD04FFC3FD2FB0%FD072045FD1EB28FFD072076FD0DFFFD052044FD09B0B6FD04FFFD30B08C%FD072069FD1CB28FFD07204BFD0EFFFD052068FD0AB0FFFFFFC4FD31B068%FD07206AFD1BB2FD07204BFD0FFFFD052069B0B1B0B1B0B1B0B1B0B1CAFF%FFBDB0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B1%B0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B1B0B168FD072069B7B2B7%B2B7B2B7B2B7B2B7B2B7B2B7B2B7B2B7B2B7B2B7B28FFD0820A8FD0FFFFD%052069FD0AB1C4FFFFFD34B144FD07206AFD16B78F45FD062027A8FD10FF%FD052069FD0BB1FFFFFD35B144FD072069FD13B78F8F45FD0720A8FD11FF%FD052069FD0BB1C4CBFD36B145FD072070FD13B745FD07207DFD12FFFD05%2069FD0BB1B7C4FD37B144FD07206AFD10B78F45FD07207DFD13FFFD0520%69FD0CB1B7FD38B144FD072070FD0FB745FD07207DFD14FF27FD042045FD%46B1FD082069FD0BB78F8FFD08207DFD15FF52FD0520FD47B1FD08206AFD%0AB78FFD0920FD16FF76FD05208DFD47B144FD072045FD07B78F8FFD0920%76FD16FFA8FD05208EFD48B144FD072045FD06B78FFD0A207DFD16FFA8FD%052044FD49B144FD072044B7B7B78F8FFD0B20FD18FF4BFD042045FD4AB1%45FD072044B78F6AFD0B204BFD18FF76FD05208EFD4AB169FD08206AFD0C%204BFD18FFA8FD052069FD4BB169FD0E2045FD0520A8FD19FFFD052044FD%4CB18DFD0C2045F8FD0520FD1AFF7DFD05208EFD4CB18D45FD09204569FD%052052FD1AFFA8FD052044FD4DB18D45FD0720698E45FD0520A8FD1BFF4B%FD05208DFD4EB169FD05206A8E8EFD05204BFD1CFF7DFD052069FD4FB169%2020208E8E8E44FD05207DFD1DFF4BFD0520FD50B18E44B28E8E6AFD0620%FD1EFF76FD052044FD51B18E8E8E45FD05207DFD1FFFFD06208DFD50B18E%8E8EFD052027A8FD1FFF76FD052044FD4EB18D8E8E8EFD062076FD21FF4B%FD05208DFD4DB1B28E8E69FD0620FD22FF7DFD0620FD4DB18E8E8EFD0620%7DFD23FFFD062045FD4BB18E8E8E69FD05204BFD24FFA8FD06208DB2B1B2%B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2%B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2B1B2%B1B2B1B2B1B2B1B2B1B28D8E8E69FD06207DFD25FF76FD052045FD4AB28F%8FFD06204BFD26FFA8FD062069FD47B28F8F8F45FD0620FD28FF7DFD0620%8EFD46B28F8F6AFD06207DFD29FFFD0720FD45B28F8F6AFD06204BFD2BFF%FD062045FD43B28F8F8F45FD0620A8FD2BFF7DFD062069FD41B28F8F8F6A%FD062076FD2DFF52FD06208EFD3FB2FD048FFD06204BFD2EFFA8FD07208E%FD3DB2FD048FFD0720A8FD2FFFA1FD062045FD3DB28F8F8F45FD0620A1FD%31FF52FD062069FD3BB28F8F8F45FD062052FD33FF4BFD06208EFD3AB28F%8F6AFD06204BFD34FFA8FD07208FFD38B28F8F6AFD0720A8FD35FFA8FD07%20FD37B28F8F8F45FD06207DFD37FF7DFD0720FD35B28F8F8F45FD062052%FD39FF52FD062044FD33B28F8F8F45FD06204BFD3AFFA84BFD062045FD31%B28F8F8F45FD0720FD3CFFA84BFD062069FD2FB28F8F8F6AFD0720CAFD3D%FFA8FD072069FD2DB28F8F8F6AFD0720A8FD3FFF7DFD07206AFD2BB28F8F%8F6AFD0720A1FD41FF76FD07206AFD29B2FD048FFD072076FD43FF52FD06%204B8EB7B2B7B2B7B2B7B2B7B2B7B2B7B2B7B2B7B2B7B2B7B2B7B2B7B2B7%B2B7B2B7B2B7B2B7B2B7B2B7FD048FFD072076FD45FF52FD07208EFD25B7%FD048FFD072052FD47FF4BFD06204594FD23B7FD048FFD07204BFD49FF27%FD07208EFD21B78F8F8F6AFD07204BA8FD4AFF27FD072094FD1FB7FD048F%FD07204BFD4DFFFD08208EFD1DB7FD048FFD0820A8FD4EFF27FD072094FD%1BB7FD048FFD072027A8FD50FFFD08208EFD19B7FD048FFD0820A8FD52FF%FD07204B94FD17B7FD048FFD07204BA8FD53FFA8FD08208EFD15B7FD048F%FD0820A8FD56FF4BFD06204594FD13B7FD048FFD07204BA8FD58FF27FD07%2069FD11B78F8F8F6AFD0820A8FD5AFF27FD07206AFD0FB78F8F8F6AFD07%204BA8FD5CFFFD082069FD0DB78F8F8F6AFD07204BA8FD5EFF27FD072045%FD0BB78F8F8F6AFD07204BA8FD60FF4BFD072045FD08B7B28F8F8F45FD07%204BA8FD62FF52FD072045FD07B78F8F8F6AFD072076FD65FF52FD0820FD%04B7FD048F45FD072052FD67FF7DFD082095B78F8F8F6A45FD07207DFD69%FF7DFD08206A8F8F6AFD08207DFD6BFFA84BFD07206A6AFD0820A8FD6DFF%A84BFD0F20A8FD6FFFA84BFD0C204BFD72FFA876FD0A204BFD75FF7DFD08%2052FD77FF7DFD06207DFD79FFA820202027A8FD7CFF204BA8FD48FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0 0 0 0 1 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 5) Pc0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 30) Pc0.0039 0.949 0.0078 0 1 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 36) Pc0 0.9686 0.2157 0 1 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 37) Pc0.0078 0.9647 0.6078 0 1 0 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 38) Pc0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 73) Pc0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 74) Pc0.4431 0.9569 0.8588 0.6431 0.2 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 184) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(a) Ln0 Au0 Ap0 O0 0.9686 0.2157 0 1 0 0.4 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:1 D0 XR278.5 451.5 m275 451.5 274 447.5 Y273 451.5 269.5 451.5 v267 451.5 264.5 449.5 264.5 445.5 c264.5 440 274 432.5 Y283.5 440 283.5 445.5 v283.5 449.5 281 451.5 278.5 451.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D281.9185 441 m266.0815 441 L268.7817 436.6255 274 432.5 Y279.2183 436.6255 281.9185 441 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa269.1943 437 m271.5879 434.4063 274 432.5 Y276.4121 434.4063 278.8057 437 V269.1943 437 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa280.8564 450.8584 m281.8096 449.5 282.5 447.4805 282.5 445.5 c282.5 441.6753 276.835 436.1665 274 433.8003 C273.7266 433.5566 273.4526 433.3594 273.1782 433.1821 C273.6836 432.7505 274 432.5 Y283.5 440 283.5 445.5 v283.5 448.1958 282.3628 449.9795 280.8564 450.8584 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa282.5 445.5 m282.5 444.1406 281.7773 442.5684 280.7275 441 C281.9185 441 L282.8594 442.5244 283.5 444.0786 283.5 445.5 c283.5 445.6738 283.4824 445.8335 283.4731 446 C282.4785 446 L282.4883 445.8335 282.5 445.6665 282.5 445.5 cf282.5 445.5 m282.5 447.4805 281.8096 449.5 280.8564 450.8584 C280.1284 451.2837 279.3149 451.5 278.5 451.5 c275 451.5 274 447.5 Y273 451.5 269.5 451.5 v267 451.5 264.5 449.5 264.5 445.5 c264.5 440.9907 270.8774 435.1445 273.1782 433.1821 C273.4526 433.3594 273.7266 433.5566 274 433.8003 C276.835 436.1665 282.5 441.6753 282.5 445.5 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa274 447.5 m273 451.5 269.5 451.5 v267.1074 451.5 264.7212 449.6631 264.5195 446 C283.4805 446 L283.2788 449.6631 280.8926 451.5 278.5 451.5 c275 451.5 274 447.5 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D278.5 451.5 m275 451.5 274 447.5 Y273 451.5 269.5 451.5 v267 451.5 264.5 449.5 264.5 445.5 c264.5 440 274 432.5 Y283.5 440 283.5 445.5 v283.5 449.5 281 451.5 278.5 451.5 cs0 O0 0 0 0 1 1 1 Xa0 D270.9619 448.4961 m270.5503 448.8027 270.0542 449 269.5 449 c268.1191 449 267 447.8809 267 446.5 c267 445.9458 267.1973 445.4497 267.5039 445.0381 C267.5244 446.9404 269.0596 448.4756 270.9619 448.4961 CfUu0 0.9686 0.2157 0 1 0 0.4 Xa1 D284.1924 455.5 m281.877 455.5 281.2158 452.8535 Y280.5547 455.5 278.2393 455.5 v276.585 455.5 274.9307 454.1777 274.9307 451.5313 c274.9307 447.8926 281.2158 442.9307 Y287.5 447.8926 287.5 451.5313 v287.5 454.1777 285.8467 455.5 284.1924 455.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D286.4531 448.5547 m275.9775 448.5547 L277.7637 445.6602 281.2158 442.9307 Y284.667 445.6602 286.4531 448.5547 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa278.0371 445.9092 m279.6201 444.1934 281.2158 442.9307 Y282.8115 444.1934 284.3936 445.9092 V278.0371 445.9092 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa285.75 455.0762 m286.3818 454.1777 286.8379 452.8418 286.8379 451.5313 c286.8379 449.001 283.0908 445.3574 281.2158 443.791 C281.0342 443.6299 280.8535 443.5 280.6719 443.3828 C281.0068 443.0967 281.2158 442.9307 Y287.5 447.8926 287.5 451.5313 v287.5 453.3145 286.748 454.4941 285.75 455.0762 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa286.8379 451.5313 m286.8379 450.6318 286.3604 449.5918 285.666 448.5547 C286.4531 448.5547 L287.0771 449.5625 287.5 450.5908 287.5 451.5313 c287.5 451.6455 287.4883 451.7529 287.4814 451.8623 C286.8242 451.8623 L286.832 451.7529 286.8379 451.6406 286.8379 451.5313 cf286.8379 451.5313 m286.8379 452.8418 286.3818 454.1777 285.75 455.0762 C285.2705 455.3574 284.7314 455.5 284.1924 455.5 c281.877 455.5 281.2158 452.8535 Y280.5547 455.5 278.2393 455.5 v276.585 455.5 274.9307 454.1777 274.9307 451.5313 c274.9307 448.5479 279.1494 444.6816 280.6719 443.3828 C280.8535 443.5 281.0342 443.6299 281.2158 443.791 C283.0908 445.3574 286.8379 449.001 286.8379 451.5313 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa281.2158 452.8535 m280.5547 455.5 278.2393 455.5 v276.6572 455.5 275.0781 454.2852 274.9443 451.8623 C287.4873 451.8623 L287.3535 454.2852 285.7754 455.5 284.1924 455.5 c281.877 455.5 281.2158 452.8535 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D284.1924 455.5 m281.877 455.5 281.2158 452.8535 Y280.5547 455.5 278.2393 455.5 v276.585 455.5 274.9307 454.1777 274.9307 451.5313 c274.9307 447.8926 281.2158 442.9307 Y287.5 447.8926 287.5 451.5313 v287.5 454.1777 285.8467 455.5 284.1924 455.5 cs0 O0 0 0 0 1 1 1 Xa0 D279.2061 453.5127 m278.9336 453.7158 278.6064 453.8467 278.2393 453.8467 c277.3252 453.8467 276.585 453.1064 276.585 452.1934 c276.585 451.8262 276.7148 451.498 276.918 451.2256 C276.9316 452.4844 277.9463 453.5 279.2061 453.5127 CfULB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 4 255 255 79 0 50 Lb(b) Ln0 Au0 O0 0.9686 0.2157 0 1 0 0.4 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:1 D0 XR282.5 451.5 m279 451.5 278 447.5 Y277 451.5 273.5 451.5 v271 451.5 268.5 449.5 268.5 445.5 c268.5 440 278 432.5 Y287.5 440 287.5 445.5 v287.5 449.5 285 451.5 282.5 451.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D285.9185 441 m270.0815 441 L272.7817 436.6255 278 432.5 Y283.2183 436.6255 285.9185 441 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa273.1943 437 m275.5879 434.4063 278 432.5 Y280.4121 434.4063 282.8057 437 V273.1943 437 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa284.8564 450.8584 m285.8096 449.5 286.5 447.4805 286.5 445.5 c286.5 441.6753 280.835 436.1665 278 433.8003 C277.7266 433.5566 277.4526 433.3594 277.1782 433.1821 C277.6836 432.7505 278 432.5 Y287.5 440 287.5 445.5 v287.5 448.1958 286.3628 449.9795 284.8564 450.8584 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa286.5 445.5 m286.5 444.1406 285.7773 442.5684 284.7275 441 C285.9185 441 L286.8594 442.5244 287.5 444.0786 287.5 445.5 c287.5 445.6738 287.4824 445.8335 287.4731 446 C286.4785 446 L286.4883 445.8335 286.5 445.6665 286.5 445.5 cf286.5 445.5 m286.5 447.4805 285.8096 449.5 284.8564 450.8584 C284.1284 451.2837 283.3149 451.5 282.5 451.5 c279 451.5 278 447.5 Y277 451.5 273.5 451.5 v271 451.5 268.5 449.5 268.5 445.5 c268.5 440.9907 274.8774 435.1445 277.1782 433.1821 C277.4526 433.3594 277.7266 433.5566 278 433.8003 C280.835 436.1665 286.5 441.6753 286.5 445.5 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa278 447.5 m277 451.5 273.5 451.5 v271.1074 451.5 268.7212 449.6631 268.5195 446 C287.4805 446 L287.2788 449.6631 284.8926 451.5 282.5 451.5 c279 451.5 278 447.5 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D282.5 451.5 m279 451.5 278 447.5 Y277 451.5 273.5 451.5 v271 451.5 268.5 449.5 268.5 445.5 c268.5 440 278 432.5 Y287.5 440 287.5 445.5 v287.5 449.5 285 451.5 282.5 451.5 cs0 O0 0 0 0 1 1 1 Xa0 D274.9619 448.4961 m274.5503 448.8027 274.0542 449 273.5 449 c272.1191 449 271 447.8809 271 446.5 c271 445.9458 271.1973 445.4497 271.5039 445.0381 C271.5244 446.9404 273.0596 448.4756 274.9619 448.4961 CfUu0 0.9686 0.2157 0 1 0 0.4 Xa1 D273.7949 455.5 m271.4795 455.5 270.8184 452.8535 Y270.1572 455.5 267.8418 455.5 v266.1875 455.5 264.5332 454.1777 264.5332 451.5313 c264.5332 447.8926 270.8184 442.9307 Y277.1025 447.8926 277.1025 451.5313 v277.1025 454.1777 275.4492 455.5 273.7949 455.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D276.0557 448.5547 m265.5801 448.5547 L267.3662 445.6602 270.8184 442.9307 Y274.2695 445.6602 276.0557 448.5547 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa267.6396 445.9092 m269.2227 444.1934 270.8184 442.9307 Y272.4141 444.1934 273.9961 445.9092 V267.6396 445.9092 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa275.3525 455.0762 m275.9844 454.1777 276.4404 452.8418 276.4404 451.5313 c276.4404 449.001 272.6934 445.3574 270.8184 443.791 C270.6367 443.6299 270.4561 443.5 270.2744 443.3828 C270.6094 443.0967 270.8184 442.9307 Y277.1025 447.8926 277.1025 451.5313 v277.1025 453.3145 276.3506 454.4941 275.3525 455.0762 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa276.4404 451.5313 m276.4404 450.6318 275.9629 449.5918 275.2686 448.5547 C276.0557 448.5547 L276.6797 449.5625 277.1025 450.5908 277.1025 451.5313 c277.1025 451.6455 277.0908 451.7529 277.084 451.8623 C276.4268 451.8623 L276.4346 451.7529 276.4404 451.6406 276.4404 451.5313 cf276.4404 451.5313 m276.4404 452.8418 275.9844 454.1777 275.3525 455.0762 C274.873 455.3574 274.334 455.5 273.7949 455.5 c271.4795 455.5 270.8184 452.8535 Y270.1572 455.5 267.8418 455.5 v266.1875 455.5 264.5332 454.1777 264.5332 451.5313 c264.5332 448.5479 268.752 444.6816 270.2744 443.3828 C270.4561 443.5 270.6367 443.6299 270.8184 443.791 C272.6934 445.3574 276.4404 449.001 276.4404 451.5313 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa270.8184 452.8535 m270.1572 455.5 267.8418 455.5 v266.2598 455.5 264.6807 454.2852 264.5469 451.8623 C277.0898 451.8623 L276.9561 454.2852 275.3779 455.5 273.7949 455.5 c271.4795 455.5 270.8184 452.8535 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D273.7949 455.5 m271.4795 455.5 270.8184 452.8535 Y270.1572 455.5 267.8418 455.5 v266.1875 455.5 264.5332 454.1777 264.5332 451.5313 c264.5332 447.8926 270.8184 442.9307 Y277.1025 447.8926 277.1025 451.5313 v277.1025 454.1777 275.4492 455.5 273.7949 455.5 cs0 O0 0 0 0 1 1 1 Xa0 D268.8086 453.5127 m268.5361 453.7158 268.209 453.8467 267.8418 453.8467 c266.9277 453.8467 266.1875 453.1064 266.1875 452.1934 c266.1875 451.8262 266.3174 451.498 266.5205 451.2256 C266.5342 452.4844 267.5488 453.5 268.8086 453.5127 CfULB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 5 255 79 255 0 50 Lb(c) Ln0 Au0 O0 0.9686 0.2157 0 1 0 0.4 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:1 D0 XR278.5 451.5 m275 451.5 274 447.5 Y273 451.5 269.5 451.5 v267 451.5 264.5 449.5 264.5 445.5 c264.5 440 274 432.5 Y283.5 440 283.5 445.5 v283.5 449.5 281 451.5 278.5 451.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D281.9185 441 m266.0815 441 L268.7817 436.6255 274 432.5 Y279.2183 436.6255 281.9185 441 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa269.1943 437 m271.5879 434.4063 274 432.5 Y276.4121 434.4063 278.8057 437 V269.1943 437 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa280.8564 450.8584 m281.8096 449.5 282.5 447.4805 282.5 445.5 c282.5 441.6753 276.835 436.1665 274 433.8003 C273.7266 433.5566 273.4526 433.3594 273.1782 433.1821 C273.6836 432.7505 274 432.5 Y283.5 440 283.5 445.5 v283.5 448.1958 282.3628 449.9795 280.8564 450.8584 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa282.5 445.5 m282.5 444.1406 281.7773 442.5684 280.7275 441 C281.9185 441 L282.8594 442.5244 283.5 444.0786 283.5 445.5 c283.5 445.6738 283.4824 445.8335 283.4731 446 C282.4785 446 L282.4883 445.8335 282.5 445.6665 282.5 445.5 cf282.5 445.5 m282.5 447.4805 281.8096 449.5 280.8564 450.8584 C280.1284 451.2837 279.3149 451.5 278.5 451.5 c275 451.5 274 447.5 Y273 451.5 269.5 451.5 v267 451.5 264.5 449.5 264.5 445.5 c264.5 440.9907 270.8774 435.1445 273.1782 433.1821 C273.4526 433.3594 273.7266 433.5566 274 433.8003 C276.835 436.1665 282.5 441.6753 282.5 445.5 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa274 447.5 m273 451.5 269.5 451.5 v267.1074 451.5 264.7212 449.6631 264.5195 446 C283.4805 446 L283.2788 449.6631 280.8926 451.5 278.5 451.5 c275 451.5 274 447.5 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D278.5 451.5 m275 451.5 274 447.5 Y273 451.5 269.5 451.5 v267 451.5 264.5 449.5 264.5 445.5 c264.5 440 274 432.5 Y283.5 440 283.5 445.5 v283.5 449.5 281 451.5 278.5 451.5 cs0 O0 0 0 0 1 1 1 Xa0 D270.9619 448.4961 m270.5503 448.8027 270.0542 449 269.5 449 c268.1191 449 267 447.8809 267 446.5 c267 445.9458 267.1973 445.4497 267.5039 445.0381 C267.5244 446.9404 269.0596 448.4756 270.9619 448.4961 CfUu0 0.9686 0.2157 0 1 0 0.4 Xa1 D284.1924 455.5 m281.877 455.5 281.2158 452.8535 Y280.5547 455.5 278.2393 455.5 v276.585 455.5 274.9307 454.1777 274.9307 451.5313 c274.9307 447.8926 281.2158 442.9307 Y287.5 447.8926 287.5 451.5313 v287.5 454.1777 285.8467 455.5 284.1924 455.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D286.4531 448.5547 m275.9775 448.5547 L277.7637 445.6602 281.2158 442.9307 Y284.667 445.6602 286.4531 448.5547 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa278.0371 445.9092 m279.6201 444.1934 281.2158 442.9307 Y282.8115 444.1934 284.3936 445.9092 V278.0371 445.9092 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa285.75 455.0762 m286.3818 454.1777 286.8379 452.8418 286.8379 451.5313 c286.8379 449.001 283.0908 445.3574 281.2158 443.791 C281.0342 443.6299 280.8535 443.5 280.6719 443.3828 C281.0068 443.0967 281.2158 442.9307 Y287.5 447.8926 287.5 451.5313 v287.5 453.3145 286.748 454.4941 285.75 455.0762 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa286.8379 451.5313 m286.8379 450.6318 286.3604 449.5918 285.666 448.5547 C286.4531 448.5547 L287.0771 449.5625 287.5 450.5908 287.5 451.5313 c287.5 451.6455 287.4883 451.7529 287.4814 451.8623 C286.8242 451.8623 L286.832 451.7529 286.8379 451.6406 286.8379 451.5313 cf286.8379 451.5313 m286.8379 452.8418 286.3818 454.1777 285.75 455.0762 C285.2705 455.3574 284.7314 455.5 284.1924 455.5 c281.877 455.5 281.2158 452.8535 Y280.5547 455.5 278.2393 455.5 v276.585 455.5 274.9307 454.1777 274.9307 451.5313 c274.9307 448.5479 279.1494 444.6816 280.6719 443.3828 C280.8535 443.5 281.0342 443.6299 281.2158 443.791 C283.0908 445.3574 286.8379 449.001 286.8379 451.5313 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa281.2158 452.8535 m280.5547 455.5 278.2393 455.5 v276.6572 455.5 275.0781 454.2852 274.9443 451.8623 C287.4873 451.8623 L287.3535 454.2852 285.7754 455.5 284.1924 455.5 c281.877 455.5 281.2158 452.8535 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D284.1924 455.5 m281.877 455.5 281.2158 452.8535 Y280.5547 455.5 278.2393 455.5 v276.585 455.5 274.9307 454.1777 274.9307 451.5313 c274.9307 447.8926 281.2158 442.9307 Y287.5 447.8926 287.5 451.5313 v287.5 454.1777 285.8467 455.5 284.1924 455.5 cs0 O0 0 0 0 1 1 1 Xa0 D279.2061 453.5127 m278.9336 453.7158 278.6064 453.8467 278.2393 453.8467 c277.3252 453.8467 276.585 453.1064 276.585 452.1934 c276.585 451.8262 276.7148 451.498 276.918 451.2256 C276.9316 452.4844 277.9463 453.5 279.2061 453.5127 CfULB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 6 79 255 255 0 50 Lb(d) Ln0 Au0 O0 0.9686 0.2157 0 1 0 0.4 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:1 D0 XR282.5 451.5 m279 451.5 278 447.5 Y277 451.5 273.5 451.5 v271 451.5 268.5 449.5 268.5 445.5 c268.5 440 278 432.5 Y287.5 440 287.5 445.5 v287.5 449.5 285 451.5 282.5 451.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D285.9185 441 m270.0815 441 L272.7817 436.6255 278 432.5 Y283.2183 436.6255 285.9185 441 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa273.1943 437 m275.5879 434.4063 278 432.5 Y280.4121 434.4063 282.8057 437 V273.1943 437 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa284.8564 450.8584 m285.8096 449.5 286.5 447.4805 286.5 445.5 c286.5 441.6753 280.835 436.1665 278 433.8003 C277.7266 433.5566 277.4526 433.3594 277.1782 433.1821 C277.6836 432.7505 278 432.5 Y287.5 440 287.5 445.5 v287.5 448.1958 286.3628 449.9795 284.8564 450.8584 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa286.5 445.5 m286.5 444.1406 285.7773 442.5684 284.7275 441 C285.9185 441 L286.8594 442.5244 287.5 444.0786 287.5 445.5 c287.5 445.6738 287.4824 445.8335 287.4731 446 C286.4785 446 L286.4883 445.8335 286.5 445.6665 286.5 445.5 cf286.5 445.5 m286.5 447.4805 285.8096 449.5 284.8564 450.8584 C284.1284 451.2837 283.3149 451.5 282.5 451.5 c279 451.5 278 447.5 Y277 451.5 273.5 451.5 v271 451.5 268.5 449.5 268.5 445.5 c268.5 440.9907 274.8774 435.1445 277.1782 433.1821 C277.4526 433.3594 277.7266 433.5566 278 433.8003 C280.835 436.1665 286.5 441.6753 286.5 445.5 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa278 447.5 m277 451.5 273.5 451.5 v271.1074 451.5 268.7212 449.6631 268.5195 446 C287.4805 446 L287.2788 449.6631 284.8926 451.5 282.5 451.5 c279 451.5 278 447.5 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D282.5 451.5 m279 451.5 278 447.5 Y277 451.5 273.5 451.5 v271 451.5 268.5 449.5 268.5 445.5 c268.5 440 278 432.5 Y287.5 440 287.5 445.5 v287.5 449.5 285 451.5 282.5 451.5 cs0 O0 0 0 0 1 1 1 Xa0 D274.9619 448.4961 m274.5503 448.8027 274.0542 449 273.5 449 c272.1191 449 271 447.8809 271 446.5 c271 445.9458 271.1973 445.4497 271.5039 445.0381 C271.5244 446.9404 273.0596 448.4756 274.9619 448.4961 CfUu0 0.9686 0.2157 0 1 0 0.4 Xa1 D273.7949 455.5 m271.4795 455.5 270.8184 452.8535 Y270.1572 455.5 267.8418 455.5 v266.1875 455.5 264.5332 454.1777 264.5332 451.5313 c264.5332 447.8926 270.8184 442.9307 Y277.1025 447.8926 277.1025 451.5313 v277.1025 454.1777 275.4492 455.5 273.7949 455.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D276.0557 448.5547 m265.5801 448.5547 L267.3662 445.6602 270.8184 442.9307 Y274.2695 445.6602 276.0557 448.5547 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa267.6396 445.9092 m269.2227 444.1934 270.8184 442.9307 Y272.4141 444.1934 273.9961 445.9092 V267.6396 445.9092 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa275.3525 455.0762 m275.9844 454.1777 276.4404 452.8418 276.4404 451.5313 c276.4404 449.001 272.6934 445.3574 270.8184 443.791 C270.6367 443.6299 270.4561 443.5 270.2744 443.3828 C270.6094 443.0967 270.8184 442.9307 Y277.1025 447.8926 277.1025 451.5313 v277.1025 453.3145 276.3506 454.4941 275.3525 455.0762 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa276.4404 451.5313 m276.4404 450.6318 275.9629 449.5918 275.2686 448.5547 C276.0557 448.5547 L276.6797 449.5625 277.1025 450.5908 277.1025 451.5313 c277.1025 451.6455 277.0908 451.7529 277.084 451.8623 C276.4268 451.8623 L276.4346 451.7529 276.4404 451.6406 276.4404 451.5313 cf276.4404 451.5313 m276.4404 452.8418 275.9844 454.1777 275.3525 455.0762 C274.873 455.3574 274.334 455.5 273.7949 455.5 c271.4795 455.5 270.8184 452.8535 Y270.1572 455.5 267.8418 455.5 v266.1875 455.5 264.5332 454.1777 264.5332 451.5313 c264.5332 448.5479 268.752 444.6816 270.2744 443.3828 C270.4561 443.5 270.6367 443.6299 270.8184 443.791 C272.6934 445.3574 276.4404 449.001 276.4404 451.5313 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa270.8184 452.8535 m270.1572 455.5 267.8418 455.5 v266.2598 455.5 264.6807 454.2852 264.5469 451.8623 C277.0898 451.8623 L276.9561 454.2852 275.3779 455.5 273.7949 455.5 c271.4795 455.5 270.8184 452.8535 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D273.7949 455.5 m271.4795 455.5 270.8184 452.8535 Y270.1572 455.5 267.8418 455.5 v266.1875 455.5 264.5332 454.1777 264.5332 451.5313 c264.5332 447.8926 270.8184 442.9307 Y277.1025 447.8926 277.1025 451.5313 v277.1025 454.1777 275.4492 455.5 273.7949 455.5 cs0 O0 0 0 0 1 1 1 Xa0 D268.8086 453.5127 m268.5361 453.7158 268.209 453.8467 267.8418 453.8467 c266.9277 453.8467 266.1875 453.1064 266.1875 452.1934 c266.1875 451.8262 266.3174 451.498 266.5205 451.2256 C266.5342 452.4844 267.5488 453.5 268.8086 453.5127 CfULB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 7 128 128 128 0 50 Lb(e) Ln0 Au0 O0 0.9686 0.2157 0 1 0 0.4 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:1 D0 XR278.5 451.5 m275 451.5 274 447.5 Y273 451.5 269.5 451.5 v267 451.5 264.5 449.5 264.5 445.5 c264.5 440 274 432.5 Y283.5 440 283.5 445.5 v283.5 449.5 281 451.5 278.5 451.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D281.9185 441 m266.0815 441 L268.7817 436.6255 274 432.5 Y279.2183 436.6255 281.9185 441 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa269.1943 437 m271.5879 434.4063 274 432.5 Y276.4121 434.4063 278.8057 437 V269.1943 437 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa280.8564 450.8584 m281.8096 449.5 282.5 447.4805 282.5 445.5 c282.5 441.6753 276.835 436.1665 274 433.8003 C273.7266 433.5566 273.4526 433.3594 273.1782 433.1821 C273.6836 432.7505 274 432.5 Y283.5 440 283.5 445.5 v283.5 448.1958 282.3628 449.9795 280.8564 450.8584 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa282.5 445.5 m282.5 444.1406 281.7773 442.5684 280.7275 441 C281.9185 441 L282.8594 442.5244 283.5 444.0786 283.5 445.5 c283.5 445.6738 283.4824 445.8335 283.4731 446 C282.4785 446 L282.4883 445.8335 282.5 445.6665 282.5 445.5 cf282.5 445.5 m282.5 447.4805 281.8096 449.5 280.8564 450.8584 C280.1284 451.2837 279.3149 451.5 278.5 451.5 c275 451.5 274 447.5 Y273 451.5 269.5 451.5 v267 451.5 264.5 449.5 264.5 445.5 c264.5 440.9907 270.8774 435.1445 273.1782 433.1821 C273.4526 433.3594 273.7266 433.5566 274 433.8003 C276.835 436.1665 282.5 441.6753 282.5 445.5 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa274 447.5 m273 451.5 269.5 451.5 v267.1074 451.5 264.7212 449.6631 264.5195 446 C283.4805 446 L283.2788 449.6631 280.8926 451.5 278.5 451.5 c275 451.5 274 447.5 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D278.5 451.5 m275 451.5 274 447.5 Y273 451.5 269.5 451.5 v267 451.5 264.5 449.5 264.5 445.5 c264.5 440 274 432.5 Y283.5 440 283.5 445.5 v283.5 449.5 281 451.5 278.5 451.5 cs0 O0 0 0 0 1 1 1 Xa0 D270.9619 448.4961 m270.5503 448.8027 270.0542 449 269.5 449 c268.1191 449 267 447.8809 267 446.5 c267 445.9458 267.1973 445.4497 267.5039 445.0381 C267.5244 446.9404 269.0596 448.4756 270.9619 448.4961 CfUu0 0.9686 0.2157 0 1 0 0.4 Xa1 D284.1924 455.5 m281.877 455.5 281.2158 452.8535 Y280.5547 455.5 278.2393 455.5 v276.585 455.5 274.9307 454.1777 274.9307 451.5313 c274.9307 447.8926 281.2158 442.9307 Y287.5 447.8926 287.5 451.5313 v287.5 454.1777 285.8467 455.5 284.1924 455.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D286.4531 448.5547 m275.9775 448.5547 L277.7637 445.6602 281.2158 442.9307 Y284.667 445.6602 286.4531 448.5547 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa278.0371 445.9092 m279.6201 444.1934 281.2158 442.9307 Y282.8115 444.1934 284.3936 445.9092 V278.0371 445.9092 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa285.75 455.0762 m286.3818 454.1777 286.8379 452.8418 286.8379 451.5313 c286.8379 449.001 283.0908 445.3574 281.2158 443.791 C281.0342 443.6299 280.8535 443.5 280.6719 443.3828 C281.0068 443.0967 281.2158 442.9307 Y287.5 447.8926 287.5 451.5313 v287.5 453.3145 286.748 454.4941 285.75 455.0762 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa286.8379 451.5313 m286.8379 450.6318 286.3604 449.5918 285.666 448.5547 C286.4531 448.5547 L287.0771 449.5625 287.5 450.5908 287.5 451.5313 c287.5 451.6455 287.4883 451.7529 287.4814 451.8623 C286.8242 451.8623 L286.832 451.7529 286.8379 451.6406 286.8379 451.5313 cf286.8379 451.5313 m286.8379 452.8418 286.3818 454.1777 285.75 455.0762 C285.2705 455.3574 284.7314 455.5 284.1924 455.5 c281.877 455.5 281.2158 452.8535 Y280.5547 455.5 278.2393 455.5 v276.585 455.5 274.9307 454.1777 274.9307 451.5313 c274.9307 448.5479 279.1494 444.6816 280.6719 443.3828 C280.8535 443.5 281.0342 443.6299 281.2158 443.791 C283.0908 445.3574 286.8379 449.001 286.8379 451.5313 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa281.2158 452.8535 m280.5547 455.5 278.2393 455.5 v276.6572 455.5 275.0781 454.2852 274.9443 451.8623 C287.4873 451.8623 L287.3535 454.2852 285.7754 455.5 284.1924 455.5 c281.877 455.5 281.2158 452.8535 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D284.1924 455.5 m281.877 455.5 281.2158 452.8535 Y280.5547 455.5 278.2393 455.5 v276.585 455.5 274.9307 454.1777 274.9307 451.5313 c274.9307 447.8926 281.2158 442.9307 Y287.5 447.8926 287.5 451.5313 v287.5 454.1777 285.8467 455.5 284.1924 455.5 cs0 O0 0 0 0 1 1 1 Xa0 D279.2061 453.5127 m278.9336 453.7158 278.6064 453.8467 278.2393 453.8467 c277.3252 453.8467 276.585 453.1064 276.585 452.1934 c276.585 451.8262 276.7148 451.498 276.918 451.2256 C276.9316 452.4844 277.9463 453.5 279.2061 453.5127 CfULB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 8 0 0 0 0 50 Lb(f) Ln0 Au0 O0 0.9686 0.2157 0 1 0 0.4 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:1 D0 XR282.5 451.5 m279 451.5 278 447.5 Y277 451.5 273.5 451.5 v271 451.5 268.5 449.5 268.5 445.5 c268.5 440 278 432.5 Y287.5 440 287.5 445.5 v287.5 449.5 285 451.5 282.5 451.5 cf0.0039 0.949 0.0078 0 1 0 0.6 Xa0 D285.9185 441 m270.0815 441 L272.7817 436.6255 278 432.5 Y283.2183 436.6255 285.9185 441 Vf0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa273.1943 437 m275.5879 434.4063 278 432.5 Y280.4121 434.4063 282.8057 437 V273.1943 437 Lf0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa284.8564 450.8584 m285.8096 449.5 286.5 447.4805 286.5 445.5 c286.5 441.6753 280.835 436.1665 278 433.8003 C277.7266 433.5566 277.4526 433.3594 277.1782 433.1821 C277.6836 432.7505 278 432.5 Y287.5 440 287.5 445.5 v287.5 448.1958 286.3628 449.9795 284.8564 450.8584 Cf0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa286.5 445.5 m286.5 444.1406 285.7773 442.5684 284.7275 441 C285.9185 441 L286.8594 442.5244 287.5 444.0786 287.5 445.5 c287.5 445.6738 287.4824 445.8335 287.4731 446 C286.4785 446 L286.4883 445.8335 286.5 445.6665 286.5 445.5 cf286.5 445.5 m286.5 447.4805 285.8096 449.5 284.8564 450.8584 C284.1284 451.2837 283.3149 451.5 282.5 451.5 c279 451.5 278 447.5 Y277 451.5 273.5 451.5 v271 451.5 268.5 449.5 268.5 445.5 c268.5 440.9907 274.8774 435.1445 277.1782 433.1821 C277.4526 433.3594 277.7266 433.5566 278 433.8003 C280.835 436.1665 286.5 441.6753 286.5 445.5 cn0 O0.0078 0.9647 0.6078 0 1 0 0.2 Xa278 447.5 m277 451.5 273.5 451.5 v271.1074 451.5 268.7212 449.6631 268.5195 446 C287.4805 446 L287.2788 449.6631 284.8926 451.5 282.5 451.5 c279 451.5 278 447.5 Yf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA1 D282.5 451.5 m279 451.5 278 447.5 Y277 451.5 273.5 451.5 v271 451.5 268.5 449.5 268.5 445.5 c268.5 440 278 432.5 Y287.5 440 287.5 445.5 v287.5 449.5 285 451.5 282.5 451.5 cs0 O0 0 0 0 1 1 1 Xa0 D274.9619 448.4961 m274.5503 448.8027 274.0542 449 273.5 449 c272.1191 449 271 447.8809 271 446.5 c271 445.9458 271.1973 445.4497 271.5039 445.0381 C271.5244 446.9404 273.0596 448.4756 274.9619 448.4961 CfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF