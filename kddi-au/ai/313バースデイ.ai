%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (313_\203o\201[\203X\203f\203C.ai)%%CreationDate: (7/9/03) (11:34 AM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 235 465.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 10004 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD22FFBCFD3AFFBCFD44FFB5CAFD38FFCAB5FD43FFCAFCC3FD38FF%C3FCFD43FFCAFCBCFD38FFB5FCC3FD42FFBCFCB5FD38FFB5FCC3FD42FFBC%FCFCFD38FFFCFCB5FD42FFB5FCFCCAFD36FFCAFCFCB5FD42FFFCFCFCC3FD%36FFC3FCFCFCFD42FFFCFCFCC3FD36FFBCFCFCFCCAFD40FFC3FCFCFCB5FD%36FFBCFCFCFCCAFD40FFC3FCB4FCB5FD1AFFCAFD1BFFB5FCFCFCBCFD40FF%BCFCB4B4FCFD1AFFC3C3FD1AFFFCFCBAFCC3FD40FFBCFCBAB4FCFD1AFFBC%BCFD1AFFFCBABAB4B5FD40FFB5B4BABAFCFD1AFFB5B5FD1AFFFCBABAB4B5%FD40FFBCBABABAB4CAFD19FFFCFCFD19FFCAB4BABABAB5FD40FFB4BABABA%B4CAFD18FFC3FCFCCAFD18FFC3B4BABABAB5FD40FFBBFD04BACAFD18FFC3%FCFCC3FD18FFCAFD04BAB4FD40FFB4FD04BAFD19FFBCFCFCBCFD18FFCAFD%05BAFD40FFBBFD04BAFD19FFBCFCFCB5FD19FFFD04BAB4FD40FFBBBABABA%B4FD19FFFCFCFCB5FD19FFFD04BAC2FD41FFBABABAC9FD19FFFD04FCFD19%FFC2BABABBFD41FF3B5F515F3B8AFD17FFCAFCB4FCFCCAFD17FF853D529A%2F3DFD40FFFD051960FD17FFCAFCB4BAFCCAFD17FF85FD0515FD40FFFD05%198AFD17FFC3FCBABAFCC3FD17FF61FD0515FD40FFFD051960FD17FFBCB4%BABAB4C3FD17FF85FD0515FD40FFFD05198AFD17FFC3B4BABABABCFD17FF%61FD0515FD40FFFD051960FD17FFBBFD04BAC3FD17FF85FD0515FD40FFFD%051966FD17FFBBFD04BAB5FD17FF5BFD0515FD40FFFD051960FD17FFBBFD%04BAC2FD17FF85FD0515FD40FFFD05198AFD17FFC9FD04BABCFD17FF61FD%0515FD40FFFD051960FD18FFFD04BAFD18FF85FD0515FD40FFFD05198AFD%18FFBBBABAC2FD18FF61FD0515FD40FFFD051960FD17FFC3FD04BDC4FD17%FF85FD0515FD40FFFD05198AFD17FFC4FD05BDFD17FF61FD0515FD40FFFD%051960FD17FFFD05BDC4FD17FF85FD0515FD40FFFD051966FD17FFC3FD05%BDFD17FF5BFD0515FD40FFFD051960FD17FFC3FD04BDC4FD17FF85FD0515%FD40FFFD05198AFD17FFC4FD05BDFD17FF61FD0515FD40FFFD051960FD17%FFC3FD04BDC4FD17FF85FD0515FD40FFFD05198AFD17FFC4FD05BDFD17FF%61FD0515FD40FFFD051960FD08FFA8A8A8527D5252275227FD05F894FD04%BD9BFD05F8522752277D527D52A8A8FD08FF85FD0515FD40FFFD05198A7D%7D52522727FD11F89BFD04BD94FD12F827277D52A861FD0515FD40FFFD05%190BFD17F894FD04BD9BFD17F80DFD0515FD3CFF5252F8F8FD05190CFD17%F89AFD04BD70FD17F806FD0515F82727A8A8FD33FFA85227FD05F8FD0519%0BFD17F894FD04BD9BFD17F80DFD0515FD06F87D7DFD2CFFA87D27FD09F8%FD05190CFD0DF8FD04277D527D527D52FD05BD9A7D527D527D52FD0427FD%0DF806FD0515FD09F82752FD27FF7DFD0DF8FD05190BFD04F827277D52A8%7DFD0DFFC3FD04BDC4FD0DFFA8A87D525227FD04F80DFD0515FD0CF8277D%FD21FFA827FD0FF8FD05193552A87DFD14FFC4FD05BDFD15FF7D7D0DFD05%15FD0FF8277DFD1CFF7D52FD10F827FD051960FD0CFFA8A8FD09FFC3FD04%BDC4FD0AFFA8FD0CFF85FD051527FD10F8277DFD18FF7DFD0FF82727A8A8%FFFD05198AFD0AFFFD05A8FD08FFC4FD05BDFD08FFFD04A8FD0BFF61FD05%15FFFF5252FD0FF82752FD14FFA852FD0DF85252FD06FFFD051960FD0AFF%FD06A8FD07FFFD05BDC4FD08FFFD05A8FD0AFF85FD0515FD05FFA87D27FD%0DF827A8FD11FF52FD0CF82752FD09FFFD051966FD08FFFD09A8FD06FFC3%FD05BDFD06FFFD08A8FD09FF5BFD0515FD08FFA87D27FD0CF87DFD0FFF27%FD0AF8277DFD0CFFFD051960FD09FFFD09A8FD05FFC3FD04BDC4FD06FFFD%09A8FD08FF85FD0515FD0CFF7D27FD0AF827A8FD0BFFA8FD0AF827A8FD0E%FFFD05198AFD07FFFD0CA8FD04FFC4FD05BDFD05FFFD0BA8FD07FF61FD05%15FD0EFF7D52FD0AF87DFD09FFA8FD09F852A8FD10FFFD051960FD06FFFD%06A8FFFD07A8FFFFFFC3FD04BDC4FD04FFFD05A8FFFFFD06A8FD06FF85FD%0515FD11FF27FD09F852FD07FFA8FD08F827FD13FFFD05198AFD05FFFD06%A8FFFFFFFD06A8FFFFFFC4FD05BDFFFFFFFD06A8FFFFFFFD06A8FD05FF61%FD0515FD12FFA827FD08F87DFD06FFFD07F827A8FD14FFFD051960FD05FF%FD05A8FD05FFFD05A8FFFFFFC3FD04BDC4FFFFFFFD04A8FD07FFA8A8A8FD%06FF85FD0515FD14FFA8FD07F827A8FD04FF27FD06F852A8FD15FFFD0519%8AFD06FFA8A8A8FD07FFA8A8A8FD04FFC4FD05BDFFFFFFA8A8A8FD08FFFD%04A8FD05FF61FD0515FD16FF27FD06F827FFFFFF52FD06F87DFD17FFFD05%1960FD17FFFD05BDC4FD17FF85FD0515FD0DFFA8FD09FF7DFD06F87DFFFF%FD06F87DFD09FFA8A8A8FD29FFC3FD05BDFD29FFA8A8A8FD09FF52FD06F8%FF7DFD05F87DFD0AFFA8A8A8FD29FFC3FD04BDC4FD28FFFD05A8FD09FF52%FD05F87D27FD04F827FD0AFFFD06A8FD27FFC4FD05BDFD27FFFD07A8FD09%FFFD05F85227FD04F852FD09FFFD08A8FD26FFC3FD04BDC4FD26FFFD09A8%FD08FF7DFD0AF852FD08FFFD0BA8FD0FFFA8FD14FFC4FD05BDFD15FFA8FD%0FFFFD0BA8FD07FF27FD0AF827FD07FFFD05A8FFFD05A8FD0FFFA8FD15FF%C3FD04BDC4FD14FFA8FD0FFFFD05A8FFFD07A8FD06FF52FD0AF852FD06FF%FD05A8FFFFFFFD06A8FD0CFFFD04A8FD13FFC4FD05BDFD13FFFD04A8FD0C%FFFD07A8FFFD07A8FD05FF27FD0AF827FD05FFFD05A8FD05FFFD05A8FD0B%FFFD05A8FD13FFFD05BDC4FD12FFFD05A8FD0CFFFD05A8FD04FFFD05A8FD%05FFA852FD0AF8277DFD05FFA8A8A8FD07FFFD04A8FD0AFFFD08A8FD11FF%C3FD05BDFD11FFFD08A8FD0AFFFD05A8FD05FFFD05A8FD04FF7D27FD0AF8%277DA8FD05FFA8FD09FFA8FD0BFFFD09A8FD11FFC3FD04BDC4FD10FFFD09%A8FD0BFFA8FD09FFA8FFA8FD04FFA87D52FD0AF8527D7D7DFD19FFFD0CA8%FD0FFFC4BDC4A1BDBDFD0FFFFD0CA8FD19FFA87D7D27FD0AF8277D7D7DA8%FD17FFFD06A8FFFFFD06A8FD10FFA8A8A8FD0FFFFD06A8FFFFFD06A8FD17%FFA87D7D7D52FD0AF8527D7D7DA8A8FD15FFFD07A8FFFFFFFD05A8FD0FFF%FD05A8FD0DFFFD07A8FFFFFFFD05A8FD15FFFD04A87D7D27FD0AF852FD06%A8FD15FFA8A8A8FD07FFFD05A8FD0DFFFD07A8FD0DFFA8A8A8FD07FFFD05%A8FD13FFFD07A852FD0AF852FD09A8FD12FFFD04A8FD07FFA8A8A8FD0CFF%FD0AA8FD0CFFFD04A8FD07FFA8A8A8FD11FFA8FFFD08A852FD0AF84AFD0A%A8FD2BFFFD0BA8FD29FFFD0BA851FD0AF84A98A7FD0BA8FD26FFFD06A8FF%FD07A8FD25FFFD0CA8A19920FD0AF84A9898A0FD0DA8FD23FFFD05A8FFFF%FFFD06A8FD22FFA8FFFD0CA8A098984AFD0AF84A98989899A1FD0EA8FFA8%FD1DFFFD06A8FD04FFFD05A8FD1FFFA8FFFD0DA8A7FD04984AFD0AF84AFD%059899FD12A8FD1BFFA8A8A8FD07FFFD04A8FD1CFF7DFFFD0EA8A7A0FD05%984AFD0AF84AFD0798A0A1FD0DA8FD057DA87DFD17FFA8FD09FFA8FD19FF%FD077DFD0CA8A799FD07984AFD0AF84AFD099899C9FD0AA8FD097DA8A8FD%35FFFD097DFD0BA8A0C1FD09984AFD0AF84AFD0C9899A7FD07A8FD0A7DFD%08A8FFA8FD21FFA8FFA8FFFD07A8FD0A7DFD07A8A1A0FD0C984AFD0AF84A%FD0E989FA0A7FD05A8FD087DFD0DA87D7D7DA87DA87DA87DFFA8FFA8FFA8%FFA8FFA8FFA8A87DA87DA8FD047DFD0DA8FD087DFD05A8A1A0FD0F984AFD%0AF84AFD129899A0A1A8FD087DFD0CA8FD0A7DFD0CA8FD097DFD0DA8FD08%7DA8A8A09FFD129820FD0AF84AFD1498C1C1C8FD057DFD0FA8FD097DFD0C%A8FD097DFD0EA8FD057DA7C2C2FD15984AFD0AF84AFD1598C1C1C19FA0A0%C2A0FD0EA8FD097DFD0CA8FD097DFD0DA8A1C97CA1A0FD04C1FD15984AFD%0AF84AFD1498BAFD0BC1C8A0C9A7CAA7FD06A8FD067DFD0FA8FD077DFD06%A8CAA7C9A0C8C2FD0BC1FD15984AFD0AF84AFD1598FD13C19FC2A6C9FD07%7DFD0FA8FD057DC9A7C99FC2FD13C1FD15984AFD0AF84AFD1498FD16C1FD%10C8CEFD0FC8FD15C1FD15984AFD0AF84AFD1598FD15C1FD20C8FD15C1FD%15984AFD0AF84AFD1498FD16C1FD20C8FD15C1FD15984AFD0AF84AFD1598%FD15C1FD20C8FD15C1FD159820FD0AF84AFD1498FD16C1FD20C8FD15C1FD%15984AFD0AF84AFD1598FD15C1FD20C8FD15C1FD15984AFD0AF84AFD1498%BAFD15C1FD20C8FD15C1FD15984AFD0AF84AFD1598FD15C1FD20C8FD15C1%FD15984AFD0AF84AFD0A98FFA0FD0898FD04C1C9C9C9C8C2FD0DC1FD20C8%FD0DC1C2CFCACFC9C2C1C1FD09989FA1FD0A984AFD0AF84AFD0A98A8A8A8%A7FD0798C1C1FD06FFC2FD0CC1FD20C8FD0CC1C9FD06FFC2C1FD079899A8%A8A8FD0A984AFD0AF84AFD0A98FD05A8A7C9989898C1C1FD08FFFD0CC1FD%1AC8CEFD05C8FD0BC1C8FD07FFCFC1989898999FA7FD05A8FD0A984AFD0A%F84AFD0A98FD08A8A7A198C9FD08FFC8FD0BC1C8C8C8C9C9CFCACEFD0FC8%C9CAFFFFFFCAC9C8C8FD0BC1CFFD08FFC29999A7FD08A8FD0A9820FD0AF8%4AFD0A98FD0AA8FD0AFFCFFD0BC1C8C8CFFD06FFFD0DC8CEFD07FFCEC8FD%0BC1FD04FFCACAFD04FFA7FD0AA8FD0A984AFD0AF84AFD0A98FD0BA8FFFF%C3FCFCFCB5BCFFCAFD0BC1C8CFFD07FFCFFD0CC8CAFD07FFCAC8FD0BC1FF%CAB5FD04FCBCFFFFA7FD0AA8FD0A984AFD0AF84AFD0B98A0CAFD07A8FFFF%BCFD06FCB5FFC9C9C2C8FD07C1C8FD09FFFD0CC8FD09FFC8FD08C1C8C9CF%C3FD07FCBCFFA7FD07A8A09FFD0B984AFD0AF84AFD0E989FCAFD05A8BCFD%08FCBCFD05FFCACFC9C9C2C8C8FFFFFFCACACAFFFFFFFD0BC8C9FFFFCAC3%BCBCCAFFFFCAC1C9C9C9CACFFD05FFB5FD08FCC3A7FD04A8A09FFD0E984A%FD0AF84AFD1198A0CAA8FFFD09FCB5FD0DFFCAB5FD04FCCAFFFFC9CFC9CF%C9CFC9CFC9CFC9FFB5FD05FCBCFD0CFFCAFD09FCBCA7A8A0C1FD11984AFD%0AF84AFD1598C2B5B5FD07FCCAFD0BFFC3FD07FCC3FD0CFFB5FD07FCB5FD%0BFFBCFD08FCBCBB99FD14984AFD05F852FD05F8FD1498FD04C1C8BBBCB5%B5FCFCCAFD0BFFFD09FCFD0BFFC3FD09FCCAFD0AFFC3FCFCB4BCBBC2FD04%C1FD159826FD04F8277DFD05F820FD1498FD09C1BBC9C9CFCAFD07FFBCFD%09FCB5FD0AFFBCFD09FCBCFD07FFCFCAC9BBC2FD09C1FD14984AFD05F87D%FFFD06F84AFD1298FD10C1C8C2C9C9C9CAC3B5FD08FCBCFD0AFFB5FD08FC%B5BCCFC9C9C8C8FD10C1FD139874FD05F827FFFF7DFD06F84AFD1298FD15%C1FD05C8C9C1C8C1C2C2CFC9CFC9CFC9CFC9CFC9C3C1C8C1C2C1FD05C8FD%15C1FD12986EFD06F87DFFFFFF27FD06F826FD1098BAFD15C1FD20C8FD15%C1FD11984AFD06F827FD04FFA8FD08F86EFD0F98FD15C1FD20C8FD15C1FD%0F986E20FD07F8FD06FFA827FD07F84A74FD0C98FD16C1FD20C8FD15C1FD%0E9820FD08F8FD08FF7DFD09F820FD0C98FD15C1FD20C8FD15C1FD0B986E%4AFD09F87DFD09FFA827FD09F84A6EFD0898FD16C1FD20C8FD15C1FD0998%7426FD0AF8A8FD0BFFA827FD0BF84A6EFD0698FD15C1FD20C8FD15C1FD07%984A20FD0AF827A8FD0EFF7DFD0CF82074989898FD16C1FD20C8FD15C1FD%04984A4AFD0CF852FD11FFA827FD0DF8206E6EFD15C1FD20C8FD15C1984A%26FD0DF827A8FD14FF7D27FD0EF8207575FD12C1FD20C8FD12C1994A27FD%0FF8A8FD18FF7D27FD10F8264A7598FD0DC1FD20C8FD0DC19F6E4AFD11F8%277DFD1CFFA852FD13F84B4A7599FD08C1FD20C8FD08C19F745126FD13F8%52A8FD21FF7D27FD16F8204A4A757499FD20C874994A752626FD17F87DA8%FD26FF7D52FD1CF826272651517551755175517551755175517551755175%264B2627FD1CF8277DA8FD2CFF7D52FD4BF82752A8A8FD32FFA8A85252FD%42F8277D7DFD3CFFA87D5227FD38F8277D7DA8FD46FFA87D7D5227FD29F8%27275252A8A8FD54FF7DA87D7D5252FD0427FD10F8FD0427527D527D7DA8%FD2DFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0 0 0 0 1 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 5) Pc0.0235 0.1961 0.5569 0 1 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 14) Pc0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 21) Pc0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 25) Pc0.0196 0.5961 0.9137 0 1 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 28) Pc0.0118 0.9608 0.9137 0 1 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 39) Pc0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 47) Pc0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 64) Pc0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 91) Pc0.902 0 0.4549 0 0 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 193) Pc0.8941 0.1373 0 0 0 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 197) Pc0 0 0 1 0 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 220) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 O0.0235 0.1961 0.5569 0 1 0.8 0.4 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR287.5 444 m287.5 442 287.5 437.6284 287.5 436.5 c287.5 434.291 282.3511 432.5 276 432.5 c269.6489 432.5 264.5 434.291 264.5 436.5 c264.5 437.6948 264.5 441 264.5 444 CF0 Ap0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa273 444 m264.5 444 L264.5 441 264.5 437.6948 264.5 436.5 c264.5 434.6528 268.1069 433.104 273 432.644 C273 444 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa269 444 m264.5 444 L264.5 441 264.5 437.6948 264.5 436.5 c264.5 435.2095 266.2725 434.0679 269 433.3369 C269 444 Lf0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa279 444 m287.5 444 L287.5 441 287.5 437.6948 287.5 436.5 c287.5 434.6528 283.8931 433.104 279 432.644 C279 444 Lf0 0 0 0 1 1 1 Xa285 437.9502 m283.083 437.0527 279.9121 436.377 276 436.377 c272.0879 436.377 268.917 437.0527 267 437.9502 C267 436.9683 L269.3364 436.0059 272.7202 435.5 276 435.5 c279.2798 435.5 282.6636 436.0059 285 436.9683 C285 437.9502 Lf1 Ap274.9038 436.5 m274.9038 436.0234 274.5176 435.6372 274.0415 435.6372 c273.5649 435.6372 273.1787 436.0234 273.1787 436.5 c273.1787 436.9766 273.5649 437.3628 274.0415 437.3628 c274.5176 437.3628 274.9038 436.9766 274.9038 436.5 cf282.8213 437.083 m282.8213 436.6064 282.4351 436.2202 281.9585 436.2202 c281.4824 436.2202 281.0957 436.6064 281.0957 437.083 c281.0957 437.5591 281.4824 437.9453 281.9585 437.9453 c282.4351 437.9453 282.8213 437.5591 282.8213 437.083 cf278.8213 436.583 m278.8213 436.1064 278.4351 435.7202 277.9585 435.7202 c277.4824 435.7202 277.0962 436.1064 277.0962 436.583 c277.0962 437.0596 277.4824 437.4458 277.9585 437.4458 c278.4351 437.4458 278.8213 437.0596 278.8213 436.583 cf270.8628 437.0415 m270.8628 436.5649 270.4766 436.1787 270 436.1787 c269.5239 436.1787 269.1377 436.5649 269.1377 437.0415 c269.1377 437.5181 269.5239 437.9043 270 437.9043 c270.4766 437.9043 270.8628 437.5181 270.8628 437.0415 cf0 Ap0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa283 444 m287.5 444 L287.5 441 287.5 437.6948 287.5 436.5 c287.5 435.2095 285.7275 434.0679 283 433.3369 C283 444 Lf1 Ap0 0 0 0 1 1 1 Xa287.5 444 m287.5 441.791 282.3511 440 276 440 c269.6489 440 264.5 441.791 264.5 444 c264.5 446.209 269.6489 448 276 448 c282.3511 448 287.5 446.209 287.5 444 cf0 R0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 XA287.5 444 m287.5 441.791 282.3511 440 276 440 c269.6489 440 264.5 441.791 264.5 444 c264.5 446.209 269.6489 448 276 448 c282.3511 448 287.5 446.209 287.5 444 cs0 Ap0 O0.0118 0.9608 0.9137 0 1 0 0 Xa274.0415 436.5137 m273.5396 436.5137 273.1396 436.1235 273.0986 435.6318 C273.7246 435.5752 274.3584 435.542 274.9932 435.522 C274.9937 435.5337 275 435.5435 275 435.5552 c275 436.0845 274.5708 436.5137 274.0415 436.5137 cf281.9663 437.0952 m281.8477 437.0693 281.7183 437.0479 281.5962 437.0234 C281.2471 436.8804 281 436.5391 281 436.1382 c281 436.0576 281.0273 435.9863 281.0459 435.9116 C281.6826 436.0176 282.3032 436.1392 282.8872 436.2861 C282.814 436.7393 282.4395 437.0908 281.9663 437.0952 Cf278.0771 436.5728 m277.9473 436.5645 277.8262 436.5503 277.6948 436.5435 C277.2964 436.4268 277 436.0737 277 435.6382 c277 435.5972 277.0186 435.562 277.0234 435.5225 C277.6577 435.5425 278.291 435.5767 278.916 435.6338 C278.916 435.6353 278.917 435.6367 278.917 435.6382 c278.917 436.1255 278.5479 436.5117 278.0771 436.5728 Cf270 437.0552 m269.541 437.0552 269.1753 436.7256 269.0815 436.2949 C269.6655 436.147 270.2847 436.0239 270.9224 435.917 C270.9341 435.9771 270.9585 436.0327 270.9585 436.0967 c270.9585 436.626 270.5293 437.0552 270 437.0552 cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa267 437.9512 m267 436.9741 L267.606 436.7261 268.2749 436.5049 269 436.3179 C269 437.231 L268.2314 437.4443 267.5674 437.689 267 437.9512 Cf285 437.9512 m284.4326 437.689 283.7686 437.4443 283 437.231 C283 436.3179 L283.7251 436.5049 284.394 436.7261 285 436.9741 C285 437.9512 Lf0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa269.1377 440.8628 m269.1377 440.3862 269.5239 440 270 440 c270.4766 440 270.8628 440.3862 270.8628 440.8628 c270.8628 440.8877 270.8506 440.9082 270.8486 440.9321 C270.2837 441.0332 269.7539 441.1494 269.2593 441.2783 C269.1885 441.1533 269.1377 441.0166 269.1377 440.8628 cf265 444 m265 444.0679 265.0195 444.1362 265.0342 444.2046 C264.6089 444.1519 264.2749 443.8027 264.2749 443.3628 c264.2749 442.8862 264.6611 442.5 265.1372 442.5 c265.3906 442.5 265.6128 442.6133 265.7705 442.7871 C265.272 443.1831 265 443.5972 265 444 cf273.1372 440.3628 m273.1372 439.8862 273.5234 439.5 274 439.5 c274.4761 439.5 274.8623 439.8862 274.8623 440.3628 c274.8623 440.4189 274.8408 440.4678 274.8306 440.5205 C274.2632 440.5405 273.7202 440.5786 273.1904 440.6255 C273.1631 440.5415 273.1372 440.4561 273.1372 440.3628 cf281.1372 440.8628 m281.1372 440.3862 281.5239 440 282 440 c282.4766 440 282.8628 440.3862 282.8628 440.8628 c282.8628 441.0166 282.8115 441.1533 282.7412 441.2783 C282.2461 441.1494 281.7168 441.0332 281.1514 440.9321 C281.1494 440.9082 281.1372 440.8877 281.1372 440.8628 cf277.1377 440.3628 m277.1377 439.8862 277.5239 439.5 278 439.5 c278.4766 439.5 278.8628 439.8862 278.8628 440.3628 c278.8628 440.4561 278.8369 440.5415 278.8096 440.6255 C278.2798 440.5786 277.7368 440.5405 277.1694 440.5205 C277.1592 440.4678 277.1377 440.4189 277.1377 440.3628 cf286.9658 444.2046 m286.9805 444.1362 287 444.0679 287 444 c287 443.5972 286.728 443.1831 286.2295 442.7871 C286.3872 442.6133 286.6094 442.5 286.8623 442.5 c287.3389 442.5 287.7251 442.8862 287.7251 443.3628 c287.7251 443.8027 287.3911 444.1514 286.9658 444.2046 Cf0 R0 0 0 1 0 0 0 XA276 448 m269.6489 448 264.5 446.209 264.5 444 c264.5 441 264.5 437.6948 264.5 436.5 c264.5 434.291 269.6489 432.5 276 432.5 c282.3511 432.5 287.5 434.291 287.5 436.5 c287.5 437.6284 287.5 442 287.5 444 c287.5 446.209 282.3511 448 276 448 cs0 O0.0118 0.9608 0.9137 0 1 0 0 Xa270.5 456 m269.5 452 270.5 452 v271.5 452 270.5 456 yf0 R0.902 0 0.4549 0 0 0.8 0.6 XA270.5 445 m270.5 452 lS0.0157 0.6118 0.1333 0 1 0.4 0.6 XA276 443 m276 450 lS0.8941 0.1373 0 0 0 0.6 1 XA281.5 445 m281.5 452 lS0 O0.0196 0.5961 0.9137 0 1 0.4 0 Xa270.9272 452.7021 m270.8564 453.2788 270.5 454 Y270.1436 453.2788 270.0728 452.7021 V270.1025 452.3892 270.1787 452.1494 270.3291 452.0513 C270.3828 452.0308 270.4258 452 270.5 452 c270.5742 452 270.6172 452.0308 270.6709 452.0513 C270.8213 452.1494 270.8975 452.3892 270.9272 452.7021 Cf0.0118 0.9608 0.9137 0 1 0 0 Xa276 454 m275 450 276 450 v277 450 276 454 yf0.0196 0.5961 0.9137 0 1 0.4 0 Xa276.4272 450.7021 m276.3564 451.2788 276 452 Y275.6436 451.2788 275.5728 450.7021 V275.6025 450.3892 275.6787 450.1494 275.8291 450.0513 C275.8828 450.0308 275.9258 450 276 450 c276.0742 450 276.1172 450.0308 276.1709 450.0513 C276.3213 450.1494 276.3975 450.3892 276.4272 450.7021 Cf0.0118 0.9608 0.9137 0 1 0 0 Xa281.5 456 m280.5 452 281.5 452 v282.5 452 281.5 456 yf0.0196 0.5961 0.9137 0 1 0.4 0 Xa281.9272 452.7021 m281.8564 453.2788 281.5 454 Y281.1436 453.2788 281.0728 452.7021 V281.1025 452.3892 281.1787 452.1494 281.3291 452.0513 C281.3828 452.0308 281.4258 452 281.5 452 c281.5742 452 281.6172 452.0308 281.6709 452.0513 C281.8213 452.1494 281.8975 452.3892 281.9272 452.7021 Cf0 R0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 XA1 J 0.75 w277.5 445.5 m278.5 446.5 l279.5 445.5 lS272.5 445.5 m273.5 446.5 l274.5 445.5 lS275 441.5 m276 442.5 l277 441.5 lS279.5 442.5 m280.5 443.5 l281.5 442.5 lS283.5 443.5 m284.5 444.5 l285.5 443.5 lS272.5 442.5 m271.5 443.5 l270.5 442.5 lS268.5 443.5 m267.5 444.5 l266.5 443.5 lSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF