%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (439\223\347.ai)%%CreationDate: (7/28/03) (11:07 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 4%AI8_OpenToView: 247 473.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 6673%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 9274 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD2AC1FD13FFA8A8A8C9FD68C1CFFD12FFFD05A8C2FD67C1FD14FF%FD04A8A1FD66C1A1FD14FFFD05A89FFD65C1CFFD14FFFD05A8C8FD65C1CF%FD15FFFD04A8A0FD65C1FD15FFFD05A8CAFD65C1A8FD14FFFD05A8A1FD65%C1FD15FFFD05A8CAFD28C1A7FD07FFA7C9FD33C1A8FD13FFFD06A8A1FD27%C1CFFD09FFA8A8A1FD17C1CEC3CFA7CFA7CEFD13C1A8FD14FFFD05A8CAFD%26C1CFFD0BFFA8A8A8C2FD13C1A7FD09FFA7FD11C1A8A8FD12FFFD06A8A0%FD25C1A7FD0CFFFD04A8FD11C1CFFD0CFFCFC2FD0FC1CAA8FD11FFFD07A8%C9FD25C1FD0DFFFD04A8A7FD0FC1C9FD0EFFA8FD0FC1A0FD04A8FD0BFFFD%0AA89FFD25C1FD0EFFA8FFA8A89FFD0DC1CEFD10FFA7FD0EC1C8FD04A8FD%0BFFFD0AA8FD26C1FD11FFA8C9FD0DC1A8FD11FFFD0FC1FD04A8FD0BFFFD%09A8C9FD26C1FD11FFA8A1FD0BC1C8A8FD12FFCEFD0EC1C2A8A8A8FD0BFF%FD08A8CAFD24C1A7FD14FFA8A8CAFD08C1C2A8A8FD12FFA8FD0FC1A1A8A8%A8FD09FFFD09A8A0FD23C1A8FD15FFFD04A8FD06C1C2A8A8A8FD13FFA7CE%FD0EC1C2CAA8A8A8FD05FFA8FFFD06A8A7C9FD24C1A8FD17FFA8A8A8CAFD%05C1A1A8A8A8FD16FFA0FD0EC1A7FD0FA8C2FD24C19FFD17FFFD05A8C8FD%04C1FD04A8FD17FFCFFD0DC1A0FD0FA8FD25C1CFFD18FFFD04A8A7C1C1C1%C9FD04A8FD18FFA0FD0DC1A1FD0DA8A0FD25C1A7FD17FFFD06A8C1C1C1A7%FD04A8FD19FFFD0EC1A1FD0BA8A0FD26C1CFFD18FFFD05A8C1C1C1FD06A8%FD18FFFD0FC19FC9A7FD05A8A1C8FD28C1A7FD17FFFD06A8C1C1C8FD05A8%FD19FFC2FD40C1CFFD18FFFD05A8C1C19FFD06A8FD18FFC9FD40C1A7FD17%FFFD06A8C1C1C8FD07A8FD17FFFD40C1A1FD18FFFD06A8C1C1C1FD08A8FD%15FFCFFD3DC19FCFFD19FFFD06A8A7C1C1C1A7FD07A8FD15FFCFFD3DC1FD%1BFFFD06A8C2C1C1C1C9FD09A8FD13FFCFFFA7C9FD1EC1A0C9A1A7A1C9A0%FD14C1C9FD18FFFD08A8A7FD05C1FD09A8FD18FFC3FD1AC1C9FD09A8C8FD%12C1CFFD17FFFD09A8C2FD05C1A0FD08A8FD19FFA7FD16C19F74A7FD0BA8%C2FD11C1FD17FFFD08A8A1C2FD07C1A7FD08A8FD19FFA7FD15C12C5EFD0D%A8C8FD10C1CFFD17FFFD05A8CAFD0BC1A1FD08A8FD19FFFD15C12DFD0EA8%580A2C5074FD0CC1CFFD15FFFD07A8A0FD0CC1A1FD07A8FD19FFFD15C151%FD04A8FFA8FFA8FFFD06A8FD050A2C507B9FFD08C1FD13FFA8FFFD07A8C8%FD0CC1C8FD09A8FD17FFFD15C1A7A8A8A8FD09FFA8A8A833FD080A2C7B9F%FD05C1A1FD11FFFD09A8C2FD0DC1A7FD09A8FD16FFA8FD15C1A7FD0EFFA8%5832FD0A0A2C9FFD04C1C9FD10FFFD08A8C8FD0EC1C9FD0BA8FD11FFA8A8%A8C9BBC199BB99BB93999393939993686EC1C1C1267C7CA8A8FD0DFFA8A8%58323232FD090A2C50FD04C1C9A8FD0CFFFD06A8A7A0FD10C1A0FD0CA8FD%0FFFFD04A8FD0E93686868C1C158A8A8A8FD0FFFA8A8A85D32320A32FD09%0A7B9FC1C1C9A8FD0AFFFD07A8C2FD12C1FD11A8FD05FFA8FFFD06A89AFD%0D93FD0568C2A8A8A8FD11FFA8A87DFD0532FD0A0A50C1A0A8A8FD07FFFD%09A8FD13C1C9FD1CA89AFD0F93FD04687DA8A8FD13FFA8A858FD0532FD0A%0A2CA6FD11A8C9FD14C1FD1BA89AFD0F93FD0568A8FD16FFA8A8FD0632FD%0B0AFD11A8FD16C1CAFD16A8A1A1FD0993BB93BC93BC99BC99936868689A%FD18FFA85DFD0832FD080A58FD0FA8FD18C1C8A7FD07A8A0A7FD0AA8FD07%93BC99FD0BC299686868A8FD19FF57FD0932FD080A58FD0CA8A79FFD1AC1%C2C9A0C9A0C8C1C1C2FD09A8A19393BCBCFD11C2936868FD1AFFAEFD0A32%FD080A33FD09A8A7C8FD25C19AFD07A8A1BB99FD15C26868FD1AFFA8FD0B%32FD090A2D2DC9A0C9A0C2FD27C1939393A1A1A8A1A19AFD18C29368FD1B%FFFD0C32FD0A0A2CFD2AC192FD0893FD19C29968FD1AFFA8FD0D32FD0A0A%2CFD28C199FD0693BBBCFD1BC26EFD1BFFFD0E32FD0A0A50FD26C199FD06%9399FD1DC299FD1AFFA8FD0F32FD0A0A50FD24C1BBFD069399FD10C2BBC2%BCC2BBBC99BC99BC99BC6EBCBBFD1AFFCFFD1032FD0A0A74FD23C1FD0793%FD08C299BC93BBFD1193686868A8FD19FF58FD1032FD0B0A98FD22C1FD05%93BBFD06C299BCFD1693686868A1FD19FF82FD1132FD0A0A2DFD20C19F6F%FD059399C2C2BCFD1B9368686876A8FD17FFA8FD1232FD0B0A2799FD1DC1%9927FD059399C299FD1D9368686893A8A8A8FD13FFA8A8A7FD1332FD0B0A%2775FD1BC1752727FD04938CBCFD1F93FD0468A1A8A8A8FD11FFA8A8A858%0AFD1332FD0A0A04274BFD19C175272727FD1293BB93BC99BCBCC2BCFD0D%C26E686FFD04A8FD0FFFFD04A804040AFD1332FD090A2D272751FD17C151%FD0427FD0F93BC99FD17C26E686FFD04A8FD0DFFFD04A8FD0504FD1132FD%0B0A2D27274BFD15C19FFD0527FD0B9399FD1DC293686FA1FD05A8FD07FF%FD04A87D7DFD0704FD1132FD0A0A0427272775FD13C19FFD0627FD0993BC%FD20C26E6868A1FD0FA858FD09042CFD1032FD0A0A0427272774FD12C1FD%05274BFD089399FD0FC2BCC2BCFD11C26E686FFD0FA83232FD09042C2CFD%0E32FD0A0A2D2727274BFD11C14BFD05276FFD079399FD09C29999FD0D93%FD0DC268687DFD0DA857323232FD0B04FD06328283FFA8FFA8FF5E52FD08%0A04FD042775FD0FC199FD05274BFD0693BCFD09C2BCFD129399FD0BC268%6F7DFD0BA857FD05320AFD0A042C32327CFD0BFFFD080AFD05279FFD0EC1%4BFD042720FD069399FD08C299FD16939999FD08C29968686FA1A1FD05A8%7D7CFD08320AFD0B0458FD0DFFFD080AFD042726FD09C19FFD092799FD05%93BBFD08C299FD1893BCFD09C293FD056893FD0504FD0B32FD080458FD0F%FFFD070AFD08275175C1C1C175FD09274BFD0693BCFD07C2FD1C93BBFD07%C299FD06684AFD0504FD0B320AFD0604A8FD0FFF5EFD060A04FD09274BC1%99FD0A276FFD059399FD07C2FD1D93BBFD08C299FD0668FD0604FD0C322C%0404277DFD10FFA88333330A0A0A2DFD0A2775FD0B27FD0693FD07C2FD1F%9399FD08C2FD066820FD0604FD0D3258FD15FFA8A8583304FD0527F8FD04%274BFD0A276F939A9ABC9AC3C2C9C2C9C2C2FD2193FD09C2FD05686FFD06%040AFD0A3282A8FD16FFA8A8A8A782FD1627FD0DA8A1A19AA1FD1493686F%444420442044447599FD06C293FD056826F826F820F820F826262C2C3232%57578282FD17FFFD04A88251FD1427A0FD14A89A9AFD0C936844FD0D206F%75FD04C26868684444FD0D2051518282CFFD17FFFD05A851FD142776FD17%A89A9AFD06936844FD13206F99C26E44FD132051A8FD17FFFD05A87CFD14%27A1FD19A8CA9A93939344FD16204B44FD1620FD17FFFD06A852FD142776%FD1BA8A19AFD3020FD17FFFD06A8A7FD1427A0FD1CA8FD0D204A204BFD15%204A204BFD0920FD17FFFD06A852FD0927F8F8FD092726FD1AA87DFD0A20%4A6FFD06756F4BFD0420F8FD09204A6FFD06756F4BFD0620FD16FFFD07A8%7DFD0427F8272727FD04F8FD0927A1A8A1A8A1A8A1A8A1A8A1FD0FA8FD09%20FD0F75FD0920FD0F75202020FD15FFFD08A852FD0927FD06F8FD06277C%FD0D757C76A17DFD07A84BFD07204AFD0475A0A0C9A0C9A0C9A0A07575FD%08204AFD0475A0A0C9A0C9A0C9A0A0FD04754A20A8FD0FFFFD0DA8FD0527%F827FD0AF8FD06277CFD1175A07CA8A8A87DFD06204A7575A0FD0DC9A0FD%06204A7575A0FD0FC975754AFD0FFFFD0EA8FD0527FD0DF8FD05274AFD15%75764BFD06206F75A0FD0EC94BFD06206F75A0FD11C9A0754BFD0DFFFD0E%A8FD0527FD0EF8FD0627FD1675FD062075A0FD10C9FD062075A0FD14C9A0%A0A8FD0BFFFD0EA852FD0527FD0FF8FD052752FD14754AFD0620A0FD10C9%A0FD0620A0FD16C9A075A8FD09FFFD0EA8FD0627FD08F875FD07F8FD0627%7CFD1475FD052075A0FD10C9A0FD052075A0FD17C9A04B76FD05FFFD0DA8%AEA8AEFD0727FD07F84A9926FD07F8FD062776FD1275FD06204AFD11C94B%FD05204AFD19C92020207DFD0FA883828258FD0527FD09F8C1C1C14BFD07%F8FD06277C75A076A0FD0D754BFD0520A1FD11C976FD0520A1FD19C97520%204BFD0FA882827CFD0727FD06F826FD05C19F4A26FD05F8FD06277DA7FD%05A8A1A77CA1FD06754AFD052076FD11C976FD052076FD19C94A2020207D%FD0DA882822DFD0627FD06F87598FD08C126FD06F8FD06277DA7FD0BA87C%A07575FD052075FD11C9A7FD052075FD19C9FD0420277DFD0BA883AD2DFD%0727FD05F826FD0AC126FD07F8FD07277CFD0DA87CFD0620A1FD11C9FD06%20A1FD17C976FD05204B82A7A7FD05A883A7828226FD0727FD06F820FD0A%C126FD08F8FD07277DFD0DA84BFD05204AFD11C94BFD05204AFD16C9A1FD%062057FD0A82A7FD0827FD07F84BFD0AC126FD09F8FD0827A7FD0CA8FD07%20FD11C9FD0720FD14C9A0FD0720FD09827CFD0927FD08F820FD0AC120FD%0AF8FD08277D7DFD0AA852FD0720A1FD0FC975FD0720A1FD11C976FD0720%7CFD0782ADFD0A27FD09F84BFD0AC126FD0BF8FD092726A7FD08A87DFD08%204BA0FD0DC96FFD08204BA0FD0DC975FD08204BFD0782FD0927FD0CF820%FD0AC126FD0CF8FD0A277D7CFD07A87D4BFD08204AA0A0FD07C9A076FD0C%204AA0A0FD07C9A076FD09204BFD0582A7FD0A27FD0DF84BFD0AC126FD0F%F8FD0A27A17DFD05A87DFD0D204A4B26FD15204A4B26FD0C204B7C8282AD%58FD0B27FD0EF820FD0AC126FD10F8FD0C27A77DA8A8A87D4BFD31205182%AD7CFD0D27FD0FF826FD0AC126FD13F8FD0B27267D7CA87D52FD1620F84B%FD17207C58FD0D27FD12F820FD0AC126FD14F8FD0E27A77DA74BFD13204A%7575754AFD12202620FD0F27FD13F84BFD0AC175FD17F8FD0F272052FD0F%204BFD06754A4BFD0F20FD0F27FD16F84AFD0AC199FD18F8FD1327202720%20204B204B207551754B7551754B7551754B514B51204B20202027202720%FD0F27FD19F8FD0CC1FD1BF827F8FD3B27FD1BF826FD0CC199FD1DF827F8%FD3527FD1EF874FD0DC1FD22F8FD2D27F827FD21F8FD0EC14AFD24F827F8%FD2527F827FD23F875FD0FC1FD2DF827F827F8FD0F27F827F827FD2CF898%FD0FC199FD6EF874FD11C126FD6CF820FD12C19926FD6BF89FFD13C14AFD%6AF875FD15C14AFD68F84BFD17C120FD66F8269FFD18C1FD65F8209FFD19%C19FFD64F898FD1BC19FFD61F82799FD1DC19FFD5FF82098FD20C120FD5C%F827FD23C126FD5AF84AFD25C17520FD57F875FD27C19926FD54F820FD2B%C175FD51F82674FD2EC14AFD4EF84A98FD30C19F4BFD4AF84AFD35C19F26%FD46F84A98FD38C19F75FD41F8266EFD3EC1984AFD3CF8269FFD43C19951%FD35F8274A99FD49C198754A20FD2DF84B749FFD51C174752626FD22F820%4B4A9FFD5BC198996E4A4A262026FD10F82026204A4A75749FFD2FC1C1%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0 0 0 0 1 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 5) Pc0.0275 0.1922 0.3333 0.0039 1 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 13) Pc0.0196 0.4 0.498 0.0039 1 0.6 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 20) Pc0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 21) Pc0.2039 0 0.1961 0 0.8 1 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 41) Pc0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 47) Pc0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 69) Pc0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 86) Pc0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 99) Pc0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 112) Pc0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 166) Pc0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 177) Pc0.4431 0.9569 0.8588 0.6431 0.2 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 184) Pc0.9333 0.2078 1 0.0745 0 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 208) Pc0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 214) Pc0 0 0 1 0 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 220) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(a) Ln0 A0 O0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 Lfu0 0 0 1 0 0 0 Xa264 441 m264 440.4502 264.4502 440 265 440 c266 440 l266.5498 440 267 440.4502 267 441 c267 442.5 l267 443.0498 266.5498 443.5 266 443.5 c265 443.5 l264.4502 443.5 264 443.0498 264 442.5 c264 441 lf287 442.5 m287.001 438 l286 432 276 432 v266 432 265.0005 438 y265 442.5 l269.3726 444 276 444 v282.627 444 287 442.5 yf0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa264 442.5 m264 441.9502 264.4502 441.5 265 441.5 c266 441.5 l266.5498 441.5 267 441.9502 267 442.5 c267 443 l267 443.5498 266.5498 444 266 444 c265 444 l264.4502 444 264 443.5498 264 443 c264 442.5 lf0 0 0 1 0 0 0 Xa285 441 m285 440.4502 285.4502 440 286 440 c287 440 l287.5498 440 288 440.4502 288 441 c288 442.5 l288 443.0498 287.5498 443.5 287 443.5 c286 443.5 l285.4502 443.5 285 443.0498 285 442.5 c285 441 lf0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa285 442.5 m285 441.9502 285.4502 441.5 286 441.5 c287 441.5 l287.5498 441.5 288 441.9502 288 442.5 c288 443 l288 443.5498 287.5498 444 287 444 c286 444 l285.4502 444 285 443.5498 285 443 c285 442.5 lf287 442.5 m287 439.1865 282.0742 436.5 276 436.5 c269.9248 436.5 265 439.1865 265 442.5 c265 445.8135 269.9248 448.5 276 448.5 c282.0742 448.5 287 445.8135 287 442.5 cf0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa286 442.5 m286 439.7383 281.5225 437.5 276 437.5 c270.4771 437.5 266 439.7383 266 442.5 c266 445.2617 270.4771 447.5 276 447.5 c281.5225 447.5 286 445.2617 286 442.5 cfu0 Ap0.9333 0.2078 1 0.0745 0 0.4 0 Xa275 449 m282.9331 447.8525 283.6636 441.5703 v283.8462 440 l279.5435 441.4102 l274.854 443.4111 275 449 vf/BBAccumRotation (-0.206042) XT0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa275.002 448.918 m274.9063 443.3936 279.5435 441.4102 Y281.8882 440.4092 L281.7056 441.9795 L281.21 446.2432 277.4019 448.1377 275.002 448.918 Cf/BBAccumRotation (-0.206042) XT0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa275.002 448.918 m274.9063 443.3936 279.9307 440.8184 Y281.0117 441.1035 L276.9141 443.4922 275.002 448.918 Yf/BBAccumRotation (-0.206042) XTUu0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa276 445 m275.002 449 274 449 v273 449 271.5 449 270 448.5 c268.5 448 267 446.5 267 445.5 c267 444 l276 445 lf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa274.1943 444.7993 m276 445 L275.002 449 274 449 V273.7695 447.9922 L274.1943 444.7993 Lf0.0196 0.4 0.498 0.0039 1 0.6 0.4 Xa275.167 444.9072 m274.6929 446.1162 273.96 447.7769 273.7695 447.9922 C272.8438 447.9902 271.5703 447.9692 270.3164 447.5513 c269.0024 447.1133 268 445.8711 268 445.5 C268 444.7017 268 444.1113 V275.167 444.9072 LfUu0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa277.5 442.5 m276 446.5 274 446.5 v273 446.5 270.5 446.5 269 446 c268.8164 445.939 266 445 266 442.5 c266 442.1636 266.0688 441.835 266.1958 441.5171 C277.5 442.5 Lf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa275.751 442.3481 m277.5 442.5 L276 446.5 274 446.5 V274 445.5 L275.751 442.3481 Lf0.0196 0.4 0.498 0.0039 1 0.6 0.4 Xa276.5337 442.416 m276.5269 442.4434 276.5195 442.4707 276.5 442.5 C275.9087 443.5986 274.6147 445.5 274 445.5 c273.0869 445.5 270.6621 445.5 269.3164 445.0513 C269.3154 445.0513 L269.0835 444.9741 267.1104 444.248 267.0273 442.5933 C267.0273 442.1963 267.0088 441.7314 267.0029 441.5874 C276.5337 442.416 Lf0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa275.0371 442.2856 m274.3853 443.3237 274 445 270.2827 444.4639 C270.2817 444.4639 L270.0498 444.3867 268.0767 443.6606 267.9937 442.0059 C267.9937 441.897 267.9922 441.7842 267.9902 441.6729 C275.0371 442.2856 LfU0.9333 0.2078 1 0.0745 0 0.4 0 Xa275.5 450 m283.5 450.5 285.5 444.5 v286 443 l281.5 443.5 l276.5 444.5 275.5 450 vf0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa275.5186 449.9199 m276.5547 444.4937 281.5 443.5 Y284 443 L283.5 444.5 L282.1426 448.5718 278.0273 449.6475 275.5186 449.9199 Cf0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa275.5186 449.9199 m276.5547 444.4937 282 443 Y283 443.5 L278.5 445 275.5186 449.9199 Yf0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa286 442.5 m286 442.7612 285.9478 443.0156 285.8706 443.2656 C285.1963 443.3853 284.2358 443.5 283 443.5 c281 443.5 279 443 279 441 c279 439.9932 279 438.7329 279 437.7295 C283.0566 438.3667 286 440.2612 286 442.5 cf0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa269.916 438.5381 m271.2266 438.0342 272.791 437.6909 274.5 437.5625 C274.5 439 L273.1318 439 271.2134 439.1797 269.916 438.5381 Cfu0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa266.0615 443.0444 m266.0229 442.8652 266 442.6841 266 442.5 c266 440.2612 268.9434 438.3667 273 437.7295 C273 441 L270.7178 443.2822 267.4092 443.1543 266.0615 443.0444 Cf0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa266.1846 441.5537 m266.8799 439.7402 269.5298 438.2744 273 437.7295 C273 439.5 L270.7861 441.7139 267.6035 441.6592 266.1846 441.5537 Cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa267.2373 440.0918 m268.4678 438.9746 270.5259 438.1182 273 437.7295 C273 438 L271.2324 439.7676 268.8501 440.0874 267.2373 440.0918 CfU0.2039 0 0.1961 0 0.8 1 0.8 Xa285.8799 441.7646 m285.2051 441.8843 284.2412 442 283 442 c281 442 279 441.5 279 439.5 c279 438.957 279 438.3403 279 437.7295 C282.6025 438.2954 285.3154 439.8545 285.8799 441.7646 Cf0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa285.0493 440.3828 m284.4795 440.4492 283.8032 440.5 283 440.5 c281 440.5 279 440 279 438 c279 437.9126 279 437.8208 279 437.7295 C281.6836 438.1509 283.8701 439.125 285.0493 440.3828 Cfu1 Ap0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa277 440.25 m277 439.0068 275.6572 438 274 438 c272.3438 438 271 439.0068 271 440.25 c271 441.4922 272.3438 442.5 274 442.5 c275.6572 442.5 277 441.4922 277 440.25 cf0 Ap0.0275 0.1922 0.3333 0.0039 1 0.8 0.6 Xa274 441.5 m272.6963 441.5 271.5 441 271.5 439.5 C271.9136 438.6279 272.6963 438 274 438 c275.3047 438 276.0869 438.6279 276.5 439.5 C276.5 441 275.3047 441.5 274 441.5 cf1 Ap0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA277 440.25 m277 439.0068 275.6572 438 274 438 c272.3438 438 271 439.0068 271 440.25 c271 441.4922 272.3438 442.5 274 442.5 c275.6572 442.5 277 441.4922 277 440.25 cs0 O0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa281.5 440.25 m281.5 439.0068 280.1572 438 278.5 438 c276.8438 438 275.5 439.0068 275.5 440.25 c275.5 441.4922 276.8438 442.5 278.5 442.5 c280.1572 442.5 281.5 441.4922 281.5 440.25 cf0 Ap0.0275 0.1922 0.3333 0.0039 1 0.8 0.6 Xa278.5 441.5 m277.1963 441.5 276 441 276 439.5 C276.4136 438.6279 277.1963 438 278.5 438 c279.8047 438 280.5869 438.6279 281 439.5 C281 441 279.8047 441.5 278.5 441.5 cf1 Ap0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA281.5 440.25 m281.5 439.0068 280.1572 438 278.5 438 c276.8438 438 275.5 439.0068 275.5 440.25 c275.5 441.4922 276.8438 442.5 278.5 442.5 c280.1572 442.5 281.5 441.4922 281.5 440.25 csUU0 Ap0 O0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa265.5 453 m264.5 452.5 264 450.5 265.5 449.5 C265 448.5 266.5 447 268 448 C268 447 270 447 270 448 C271 448 271.5 449 271.5 449.5 c271.5 450 270.75 450.5278 270 450.5 C270.5 451.5 270 452.5 269 452.5 C269 453 268.5 454 267.5 454 c267 454 266 454 265.5 453 Cf0 0 0 0 1 1 1 Xa270 450.5 m270.5 451.5 270 452.5 269 452.5 C269 453 268.5 454 267.5 454 c267 454 266 454 265.5 453 C265.5 452 265.5 451 266.4375 450.5 C266.5 449 269.5 447.5 271.5 449.5 C271.5 450 270.75 450.5278 270 450.5 Cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa271.9678 456 m271.6885 455.541 271.5 455.0225 271.5 454.5 c271.5 453 272 452.5 272.5 452.5 C272.5 452 273 451.5 274 451.5 c275 451.5 275.5 452 275.5 452.5 C276 452.5 276.5 453 276.5 454.5 c276.5 455.0225 276.3115 455.541 276.0322 456 C271.9678 456 Lf0 0 0 0 1 1 1 Xa271.9805 456 m271.749 455.6182 271.5796 455.1953 271.5308 454.7598 C271.6089 453.9126 272.0449 453.5 272.5 453.5 C272.5 453 L272.5 452.7578 272.8506 452.5 273.5 452.5 c274.1494 452.5 274.5 452.7578 274.5 453 C274.5 453.5 L275 453.5 275.5 453.9692 275.5 455 c275.5 455.3423 275.395 455.6826 275.2388 456 C271.9805 456 Lf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa278.5 449 m279.5 449 279.5 447 v279.5 445 278.5 445 y278.5 444 277 444 v275.5 444 275.5 445 y274.5 445 274.5 447 v274.5 449 275.5 449 y275.5 450.5 277 450.5 v278.5 450.5 278.5 449 yf281.5 450 m281.5 449.5 282 449 282.5 449 C282.5 448.5 282.5 447.5 284 447.5 c285.5 447.5 286 448.5 286 449 C286.5 449 287 449.5 287 450 C287.5 450 288 450.5 288 451.5 c288 452.5 287.5 453 287 453 C287 453.5 286.5 454.5 285 454.5 c283.5 454.5 283.5 453.5 283.5 453 C283 453 282.5 452.5 282.5 452 c282.5 451.5 282.5 451 y281.5 451 281.5 450 vf0 0 0 0 1 1 1 Xa286 450.5 m286.5 450.5 287 451 287 452 c287 453 286.5 453.5 286 453.5 C286 453.7524 286 454.5 285 454.5 c283.5 454.5 283.5 453.5 283.5 453 C283 453 282.5 452.5 282.5 452 c282.5 451.5 282.5 451 Y281.5 451 281.5 450 v281.5 449.5 282 449 282.5 449 C282.8125 448.5 283.5 448.5 V284.5 448.5 285 449 285 449.5 C285.5 449.5 286 450 286 450.5 Cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa283 444.5 m282 444.5 281.5 444 281.5 443.5 C281 443.5 280.5 443 280.5 442 c280.5 441 281 440.5 281.5 440.5 C281.5 439.5 283 439.5 v284.5 439.5 284.5 440.5 y286 440.5 286 442 v286 443.5 285 443.5 284.5 443.5 C284.5 444 284 444.5 283 444.5 cf0 0 0 0 1 1 1 Xa283.5 441.5 m285 441.5 285 443 v285 443.5 284.5 443.5 Y284.5 444 284 444.5 283 444.5 c282 444.5 281.5 444 281.5 443.5 C281 443.5 280.5 443 280.5 442 c280.5 441 281 440.5 281.5 440.5 c283 440.5 283.5 441.5 Yf275.5 448.4619 m274.5 448.4619 274.5 447.0771 v274.5 445.6924 275.5 445.6924 y275.5 445 277 445 v278.5 445 278.5 445.6924 y279.5 445.6924 279.5 447.0771 v279.5 448.4619 278.5 448.4619 y278.5 449.5 277 449.5 v275.5 449.5 275.5 448.4619 yfLB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 4 255 255 79 0 50 Lb(b) Ln0 A1 Ap0 O0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 Lf0 Ap0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa282.625 456 m282.5 455.5 282.5 455 Y281 455.5 281.5 454 Y281 454 280.5 454 280.5 453 c280.5 452 281 452 281.5 452 C281.5 451.5 281.5 450.5 283 450.5 c284.5 450.5 285 451 285 451.5 C285.5 451.5 286 452 286 453 C286.5 453 287 453 287 454 c287 454.5356 286.9946 455.3516 286.8413 456 C282.625 456 Lfu1 Ap0 0 0 1 0 0 0 Xa264 441 m264 440.4502 264.4502 440 265 440 c266 440 l266.5498 440 267 440.4502 267 441 c267 442.5 l267 443.0498 266.5498 443.5 266 443.5 c265 443.5 l264.4502 443.5 264 443.0498 264 442.5 c264 441 lf287 442.5 m287.001 438 l286 432 276 432 v266 432 265.0005 438 y265 442.5 l269.3726 444 276 444 v282.627 444 287 442.5 yf0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa264 442.5 m264 441.9502 264.4502 441.5 265 441.5 c266 441.5 l266.5498 441.5 267 441.9502 267 442.5 c267 443 l267 443.5498 266.5498 444 266 444 c265 444 l264.4502 444 264 443.5498 264 443 c264 442.5 lf0 0 0 1 0 0 0 Xa285 441 m285 440.4502 285.4502 440 286 440 c287 440 l287.5498 440 288 440.4502 288 441 c288 442.5 l288 443.0498 287.5498 443.5 287 443.5 c286 443.5 l285.4502 443.5 285 443.0498 285 442.5 c285 441 lf0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa285 442.5 m285 441.9502 285.4502 441.5 286 441.5 c287 441.5 l287.5498 441.5 288 441.9502 288 442.5 c288 443 l288 443.5498 287.5498 444 287 444 c286 444 l285.4502 444 285 443.5498 285 443 c285 442.5 lf287 442.5 m287 439.1865 282.0742 436.5 276 436.5 c269.9248 436.5 265 439.1865 265 442.5 c265 445.8135 269.9248 448.5 276 448.5 c282.0742 448.5 287 445.8135 287 442.5 cf0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa286 442.5 m286 439.7383 281.5225 437.5 276 437.5 c270.4771 437.5 266 439.7383 266 442.5 c266 445.2617 270.4771 447.5 276 447.5 c281.5225 447.5 286 445.2617 286 442.5 cfu0 Ap0.9333 0.2078 1 0.0745 0 0.4 0 Xa275 449 m282.9331 447.8525 283.6636 441.5703 v283.8462 440 l279.5435 441.4102 l274.854 443.4111 275 449 vf/BBAccumRotation (-0.206042) XT0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa275.002 448.918 m274.9063 443.3936 279.5435 441.4102 Y281.8882 440.4092 L281.7056 441.9795 L281.21 446.2432 277.4019 448.1377 275.002 448.918 Cf/BBAccumRotation (-0.206042) XT0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa275.002 448.918 m274.9063 443.3936 279.9307 440.8184 Y281.0117 441.1035 L276.9141 443.4922 275.002 448.918 Yf/BBAccumRotation (-0.206042) XTUu0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa276 445 m275.002 449 274 449 v273 449 271.5 449 270 448.5 c268.5 448 267 446.5 267 445.5 c267 444 l276 445 lf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa274.1943 444.7993 m276 445 L275.002 449 274 449 V273.7695 447.9922 L274.1943 444.7993 Lf0.0196 0.4 0.498 0.0039 1 0.6 0.4 Xa275.167 444.9072 m274.6929 446.1162 273.96 447.7769 273.7695 447.9922 C272.8438 447.9902 271.5703 447.9692 270.3164 447.5513 c269.0024 447.1133 268 445.8711 268 445.5 C268 444.7017 268 444.1113 V275.167 444.9072 LfUu0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa277.5 442.5 m276 446.5 274 446.5 v273 446.5 270.5 446.5 269 446 c268.8164 445.939 266 445 266 442.5 c266 442.1636 266.0688 441.835 266.1958 441.5171 C277.5 442.5 Lf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa275.751 442.3481 m277.5 442.5 L276 446.5 274 446.5 V274 445.5 L275.751 442.3481 Lf0.0196 0.4 0.498 0.0039 1 0.6 0.4 Xa276.5337 442.416 m276.5269 442.4434 276.5195 442.4707 276.5 442.5 C275.9087 443.5986 274.6147 445.5 274 445.5 c273.0869 445.5 270.6621 445.5 269.3164 445.0513 C269.3154 445.0513 L269.0835 444.9741 267.1104 444.248 267.0273 442.5933 C267.0273 442.1963 267.0088 441.7314 267.0029 441.5874 C276.5337 442.416 Lf0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa275.0371 442.2856 m274.3853 443.3237 274 445 270.2827 444.4639 C270.2817 444.4639 L270.0498 444.3867 268.0767 443.6606 267.9937 442.0059 C267.9937 441.897 267.9922 441.7842 267.9902 441.6729 C275.0371 442.2856 LfU0.9333 0.2078 1 0.0745 0 0.4 0 Xa275.5 450 m283.5 450.5 285.5 444.5 v286 443 l281.5 443.5 l276.5 444.5 275.5 450 vf0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa275.5186 449.9199 m276.5547 444.4937 281.5 443.5 Y284 443 L283.5 444.5 L282.1426 448.5718 278.0273 449.6475 275.5186 449.9199 Cf0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa275.5186 449.9199 m276.5547 444.4937 282 443 Y283 443.5 L278.5 445 275.5186 449.9199 Yf0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa286 442.5 m286 442.7612 285.9478 443.0156 285.8706 443.2656 C285.1963 443.3853 284.2358 443.5 283 443.5 c281 443.5 279 443 279 441 c279 439.9932 279 438.7329 279 437.7295 C283.0566 438.3667 286 440.2612 286 442.5 cf0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa269.916 438.5381 m271.2266 438.0342 272.791 437.6909 274.5 437.5625 C274.5 439 L273.1318 439 271.2134 439.1797 269.916 438.5381 Cfu0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa266.0615 443.0444 m266.0229 442.8652 266 442.6841 266 442.5 c266 440.2612 268.9434 438.3667 273 437.7295 C273 441 L270.7178 443.2822 267.4092 443.1543 266.0615 443.0444 Cf0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa266.1846 441.5537 m266.8799 439.7402 269.5298 438.2744 273 437.7295 C273 439.5 L270.7861 441.7139 267.6035 441.6592 266.1846 441.5537 Cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa267.2373 440.0918 m268.4678 438.9746 270.5259 438.1182 273 437.7295 C273 438 L271.2324 439.7676 268.8501 440.0874 267.2373 440.0918 CfU0.2039 0 0.1961 0 0.8 1 0.8 Xa285.8799 441.7646 m285.2051 441.8843 284.2412 442 283 442 c281 442 279 441.5 279 439.5 c279 438.957 279 438.3403 279 437.7295 C282.6025 438.2954 285.3154 439.8545 285.8799 441.7646 Cf0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa285.0493 440.3828 m284.4795 440.4492 283.8032 440.5 283 440.5 c281 440.5 279 440 279 438 c279 437.9126 279 437.8208 279 437.7295 C281.6836 438.1509 283.8701 439.125 285.0493 440.3828 Cfu1 Ap0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa277 440.25 m277 439.0068 275.6572 438 274 438 c272.3438 438 271 439.0068 271 440.25 c271 441.4922 272.3438 442.5 274 442.5 c275.6572 442.5 277 441.4922 277 440.25 cf0 Ap0.0275 0.1922 0.3333 0.0039 1 0.8 0.6 Xa274 441.5 m272.6963 441.5 271.5 441 271.5 439.5 C271.9136 438.6279 272.6963 438 274 438 c275.3047 438 276.0869 438.6279 276.5 439.5 C276.5 441 275.3047 441.5 274 441.5 cf1 Ap0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA277 440.25 m277 439.0068 275.6572 438 274 438 c272.3438 438 271 439.0068 271 440.25 c271 441.4922 272.3438 442.5 274 442.5 c275.6572 442.5 277 441.4922 277 440.25 cs0 O0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa281.5 440.25 m281.5 439.0068 280.1572 438 278.5 438 c276.8438 438 275.5 439.0068 275.5 440.25 c275.5 441.4922 276.8438 442.5 278.5 442.5 c280.1572 442.5 281.5 441.4922 281.5 440.25 cf0 Ap0.0275 0.1922 0.3333 0.0039 1 0.8 0.6 Xa278.5 441.5 m277.1963 441.5 276 441 276 439.5 C276.4136 438.6279 277.1963 438 278.5 438 c279.8047 438 280.5869 438.6279 281 439.5 C281 441 279.8047 441.5 278.5 441.5 cf1 Ap0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA281.5 440.25 m281.5 439.0068 280.1572 438 278.5 438 c276.8438 438 275.5 439.0068 275.5 440.25 c275.5 441.4922 276.8438 442.5 278.5 442.5 c280.1572 442.5 281.5 441.4922 281.5 440.25 csUU0 Ap0 O0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa274 455 m274 455.2676 273.8491 455.6758 273.4854 456 C270.7588 456 L270.5093 455.6597 270.5 455.2329 270.5 455 C270 455 269.5 454.5 269.5 453.5 c269.5 452.5 270 452 270.5 452 C270.5 451.5 270.5 450.5 272 450.5 c273.5 450.5 274 451.5 274 452 C274.5 452 275 452.5 275 453.5 c275 454.5 274.5 455 274 455 Cf0 0 0 0 1 1 1 Xa282.625 456 m282.5 455.5 282.5 455 Y281 455.5 281.5 454 Y281 454 280.5 454 280.5 453 c280.5 452 281 452 281.5 452 C281.5 451.5 282 451.5 282.5 451.5 c284 451.5 284 452 284 452.5 C284.5 452.5 285 453 285 454 C285.5 454 286 454 286 455 c286 455.2783 285.9971 455.6328 285.9746 456 C282.625 456 Lf274 455 m274 455.2676 273.8491 455.6758 273.4854 456 C270.7588 456 L270.5093 455.6597 270.5 455.2329 270.5 455 c270.5 454 271 453 271.5 453 C271.5 452.5 271.5 451.5 273 451.5 c273.3696 451.5 274 452 Y274.5 452 275 452.5 275 453.5 c275 454.5 274.5 455 274 455 Cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa267.5 451.5 m267.5 452 267 452.5 265.5 452.5 c264.9116 452.5 264.4043 452.4951 264 452.3745 C264 448.6255 L264.4043 448.5049 264.9116 448.5 265.5 448.5 c267 448.5 267.5 449 267.5 449.5 C268 449.5 268.5 449.5 268.5 450.5 c268.5 451.5 268 451.5 267.5 451.5 Cf0 0 0 0 1 1 1 Xa267.5 451.5 m267.5 452 267 452.5 265.5 452.5 c264.9087 452.5 264.4033 452.4893 264 452.3633 C264 449.6367 L264.4033 449.5107 264.9087 449.5 265.5 449.5 c267 449.5 267.5 450 267.5 450.5 C267.8945 450.5 268.2852 450.5083 268.4341 451 C268.2852 451.4917 267.8945 451.5 267.5 451.5 Cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa276 448 m275 448 274.5 447.5 274.5 447 C274 447 273.5 446.5 273.5 445.5 c273.5 444.5 274 444 274.5 444 C274.5 443 276 443 v277.5 443 277.5 444 y279 444 279 445.5 v279 447 278 447 277.5 447 C277.5 447.5 277 448 276 448 cf0 0 0 0 1 1 1 Xa276.5 445 m278 445 278 446.5 v278 447 277.5 447 Y277.5 447.5 277 448 276 448 c275 448 274.5 447.5 274.5 447 C274 447 273.5 446.5 273.5 445.5 c273.5 444.5 274 444 274.5 444 c276 444 276.5 445 YfLB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 5 255 79 255 0 50 Lb(c) Ln0 A1 Ap0 O0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 Lf0 Ap0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa283.5 454 m282.5 454 282.5 453 v282.5 452 283.5 452 y283.5 451 285 451 v286 451 286 452 y287 452 287 453 v287 454 286 454 y286 455 285 455 v283.5 455 283.5 454 yfu1 Ap0 0 0 1 0 0 0 Xa264 441 m264 440.4502 264.4502 440 265 440 c266 440 l266.5498 440 267 440.4502 267 441 c267 442.5 l267 443.0498 266.5498 443.5 266 443.5 c265 443.5 l264.4502 443.5 264 443.0498 264 442.5 c264 441 lf287 442.5 m287.001 438 l286 432 276 432 v266 432 265.0005 438 y265 442.5 l269.3726 444 276 444 v282.627 444 287 442.5 yf0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa264 442.5 m264 441.9502 264.4502 441.5 265 441.5 c266 441.5 l266.5498 441.5 267 441.9502 267 442.5 c267 443 l267 443.5498 266.5498 444 266 444 c265 444 l264.4502 444 264 443.5498 264 443 c264 442.5 lf0 0 0 1 0 0 0 Xa285 441 m285 440.4502 285.4502 440 286 440 c287 440 l287.5498 440 288 440.4502 288 441 c288 442.5 l288 443.0498 287.5498 443.5 287 443.5 c286 443.5 l285.4502 443.5 285 443.0498 285 442.5 c285 441 lf0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa285 442.5 m285 441.9502 285.4502 441.5 286 441.5 c287 441.5 l287.5498 441.5 288 441.9502 288 442.5 c288 443 l288 443.5498 287.5498 444 287 444 c286 444 l285.4502 444 285 443.5498 285 443 c285 442.5 lf287 442.5 m287 439.1865 282.0742 436.5 276 436.5 c269.9248 436.5 265 439.1865 265 442.5 c265 445.8135 269.9248 448.5 276 448.5 c282.0742 448.5 287 445.8135 287 442.5 cf0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa286 442.5 m286 439.7383 281.5225 437.5 276 437.5 c270.4771 437.5 266 439.7383 266 442.5 c266 445.2617 270.4771 447.5 276 447.5 c281.5225 447.5 286 445.2617 286 442.5 cfu0 Ap0.9333 0.2078 1 0.0745 0 0.4 0 Xa275 449 m282.9331 447.8525 283.6636 441.5703 v283.8462 440 l279.5435 441.4102 l274.854 443.4111 275 449 vf/BBAccumRotation (-0.206042) XT0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa275.002 448.918 m274.9063 443.3936 279.5435 441.4102 Y281.8882 440.4092 L281.7056 441.9795 L281.21 446.2432 277.4019 448.1377 275.002 448.918 Cf/BBAccumRotation (-0.206042) XT0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa275.002 448.918 m274.9063 443.3936 279.9307 440.8184 Y281.0117 441.1035 L276.9141 443.4922 275.002 448.918 Yf/BBAccumRotation (-0.206042) XTUu0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa276 445 m275.002 449 274 449 v273 449 271.5 449 270 448.5 c268.5 448 267 446.5 267 445.5 c267 444 l276 445 lf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa274.1943 444.7993 m276 445 L275.002 449 274 449 V273.7695 447.9922 L274.1943 444.7993 Lf0.0196 0.4 0.498 0.0039 1 0.6 0.4 Xa275.167 444.9072 m274.6929 446.1162 273.96 447.7769 273.7695 447.9922 C272.8438 447.9902 271.5703 447.9692 270.3164 447.5513 c269.0024 447.1133 268 445.8711 268 445.5 C268 444.7017 268 444.1113 V275.167 444.9072 LfUu0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa277.5 442.5 m276 446.5 274 446.5 v273 446.5 270.5 446.5 269 446 c268.8164 445.939 266 445 266 442.5 c266 442.1636 266.0688 441.835 266.1958 441.5171 C277.5 442.5 Lf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa275.751 442.3481 m277.5 442.5 L276 446.5 274 446.5 V274 445.5 L275.751 442.3481 Lf0.0196 0.4 0.498 0.0039 1 0.6 0.4 Xa276.5337 442.416 m276.5269 442.4434 276.5195 442.4707 276.5 442.5 C275.9087 443.5986 274.6147 445.5 274 445.5 c273.0869 445.5 270.6621 445.5 269.3164 445.0513 C269.3154 445.0513 L269.0835 444.9741 267.1104 444.248 267.0273 442.5933 C267.0273 442.1963 267.0088 441.7314 267.0029 441.5874 C276.5337 442.416 Lf0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa275.0371 442.2856 m274.3853 443.3237 274 445 270.2827 444.4639 C270.2817 444.4639 L270.0498 444.3867 268.0767 443.6606 267.9937 442.0059 C267.9937 441.897 267.9922 441.7842 267.9902 441.6729 C275.0371 442.2856 LfU0.9333 0.2078 1 0.0745 0 0.4 0 Xa275.5 450 m283.5 450.5 285.5 444.5 v286 443 l281.5 443.5 l276.5 444.5 275.5 450 vf0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa275.5186 449.9199 m276.5547 444.4937 281.5 443.5 Y284 443 L283.5 444.5 L282.1426 448.5718 278.0273 449.6475 275.5186 449.9199 Cf0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa275.5186 449.9199 m276.5547 444.4937 282 443 Y283 443.5 L278.5 445 275.5186 449.9199 Yf0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa286 442.5 m286 442.7612 285.9478 443.0156 285.8706 443.2656 C285.1963 443.3853 284.2358 443.5 283 443.5 c281 443.5 279 443 279 441 c279 439.9932 279 438.7329 279 437.7295 C283.0566 438.3667 286 440.2612 286 442.5 cf0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa269.916 438.5381 m271.2266 438.0342 272.791 437.6909 274.5 437.5625 C274.5 439 L273.1318 439 271.2134 439.1797 269.916 438.5381 Cfu0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa266.0615 443.0444 m266.0229 442.8652 266 442.6841 266 442.5 c266 440.2612 268.9434 438.3667 273 437.7295 C273 441 L270.7178 443.2822 267.4092 443.1543 266.0615 443.0444 Cf0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa266.1846 441.5537 m266.8799 439.7402 269.5298 438.2744 273 437.7295 C273 439.5 L270.7861 441.7139 267.6035 441.6592 266.1846 441.5537 Cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa267.2373 440.0918 m268.4678 438.9746 270.5259 438.1182 273 437.7295 C273 438 L271.2324 439.7676 268.8501 440.0874 267.2373 440.0918 CfU0.2039 0 0.1961 0 0.8 1 0.8 Xa285.8799 441.7646 m285.2051 441.8843 284.2412 442 283 442 c281 442 279 441.5 279 439.5 c279 438.957 279 438.3403 279 437.7295 C282.6025 438.2954 285.3154 439.8545 285.8799 441.7646 Cf0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa285.0493 440.3828 m284.4795 440.4492 283.8032 440.5 283 440.5 c281 440.5 279 440 279 438 c279 437.9126 279 437.8208 279 437.7295 C281.6836 438.1509 283.8701 439.125 285.0493 440.3828 Cfu1 Ap0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa277 440.25 m277 439.0068 275.6572 438 274 438 c272.3438 438 271 439.0068 271 440.25 c271 441.4922 272.3438 442.5 274 442.5 c275.6572 442.5 277 441.4922 277 440.25 cf0 Ap0.0275 0.1922 0.3333 0.0039 1 0.8 0.6 Xa274 441.5 m272.6963 441.5 271.5 441 271.5 439.5 C271.9136 438.6279 272.6963 438 274 438 c275.3047 438 276.0869 438.6279 276.5 439.5 C276.5 441 275.3047 441.5 274 441.5 cf1 Ap0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA277 440.25 m277 439.0068 275.6572 438 274 438 c272.3438 438 271 439.0068 271 440.25 c271 441.4922 272.3438 442.5 274 442.5 c275.6572 442.5 277 441.4922 277 440.25 cs0 O0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa281.5 440.25 m281.5 439.0068 280.1572 438 278.5 438 c276.8438 438 275.5 439.0068 275.5 440.25 c275.5 441.4922 276.8438 442.5 278.5 442.5 c280.1572 442.5 281.5 441.4922 281.5 440.25 cf0 Ap0.0275 0.1922 0.3333 0.0039 1 0.8 0.6 Xa278.5 441.5 m277.1963 441.5 276 441 276 439.5 C276.4136 438.6279 277.1963 438 278.5 438 c279.8047 438 280.5869 438.6279 281 439.5 C281 441 279.8047 441.5 278.5 441.5 cf1 Ap0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA281.5 440.25 m281.5 439.0068 280.1572 438 278.5 438 c276.8438 438 275.5 439.0068 275.5 440.25 c275.5 441.4922 276.8438 442.5 278.5 442.5 c280.1572 442.5 281.5 441.4922 281.5 440.25 csUU0 Ap0 O0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa270.5 455 m270.5 455.2676 270.3491 455.6758 269.9854 456 C266.7905 456 L266.2939 455.6758 266 455.2676 266 455 C265.5 455 265 454.5 265 453.5 c265 452.5 265.5 452 266 452 C266 451.5 266.5 450.5 268.5 450.5 c270.5 450.5 270.5 451.5 270.5 452 C271 452 271.5 452.5 271.5 453.5 c271.5 454.5 271.0835 455 270.5 455 Cf0 0 0 0 1 1 1 Xa270.5 455 m270.5 455.2676 270.3491 455.6758 269.9854 456 C266.5981 456 L266.4604 455.8076 266.3311 455.6206 266.2837 455.5654 C266.1157 455.3164 266 454.9683 266 454.5 c266 453.5 266.5 453 267 453 C267 452.5 267.5 451.5 269.5 451.5 c271 451.5 271.5 452.5 271.5 453.5 c271.5 454.5 271.0835 455 270.5 455 Cf283.5 452 m284.5 452 285 453 Y286 453 286 454 v286 454.0767 285.9844 454.1372 285.9736 454.2026 c285.9473 454.333 285.8916 454.5029 285.7744 454.6553 C285.7554 454.6768 285.7378 454.6992 285.7178 454.7178 C285.6992 454.7378 285.6768 454.7554 285.6553 454.7744 C285.5029 454.8916 285.333 454.9473 285.2026 454.9736 c285.1372 454.9844 285.0767 455 285 455 c283.5 455 283.5 454 Y282.5 454 282.5 453 V282.5 452.3105 283 452 283.5 452 cfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF