%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (738\202\324\202\307\202\244.ai)%%CreationDate: (7/21/03) (3:59 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 243 471.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 11404 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3DFF9D9DFD07979D72FD1AFFA7FD1D51FD3AFF96FD0F9772FD17%FF7DFD1D51FD38FFCB73FD12979DFD15FFA7FD1D51FD37FF9DFD1697A2FD%13FF7CFD1D51FD36FF9DFD0A977397FD07739773979797A3FD12FFA7FD1D%51FD34FFCBFD0697BFFD049DFD0C73486C6C976C977297729772CBFD0AFF%7DFD1D51FD34FF9D979797FD07C59D9D9DFD0B7348486CFD099772FD15FF%A8FD0551A7FD3DFFFD0497FD08C5FD049DFD0B7348484873FD0A97A2FD12%FFA8FD0551A8FD3CFFCB979797FD0AC5BF9D9D9DFD0B7348484873FD0A97%9DFD11FF7DFD0551A8FD3CFF7297979DFD0AC5FD049DFD0B73FD044897FD%0573977397979772FD10FF7DFD0551FD3CFF9DFD0497FD0BC5FD049DFD0B%73FD0448FD09736D9797FD0FFF7CFD0551FD3CFFFD04979DFD0AC5FD059D%FD0B73FD04486DFD087348489772FD0EFFFD055152FD3CFFFD04979DFD0B%C5FD049DFD0C73484848FD0A7348487372FD0CFFCFFD0551A7FD3BFF72FD%04979D9DFD09C5FD059DFD0B73FD0548FD0973FD0448A2FD0BFF7CFD0551%A7FD3BFF9DFD04979DFD09C5FD069DFD0C73FD0448FD0A7348484872CBFD%0AFFFD0651FD3CFF6CFD0497FD049DFD05C5FD069DFD0C73FD0548FD0B73%48484879FD09FF7DFD05517CFD3BFF9DFD0597739D9DBF9DC59DC5FD089D%FD0C73FD0448FD0B73FD0448FD09FFFD0651A8FD3AFF72FD0597737397FD%0D9DFD0D73FD0448FD0B73FD04487EFD07FFFD065152FD3AFF72FD079773%97FD0C9DFD0E73FD0548FD0B7348484879FD06FF52FD0651CFFD39FF72FD%0797FD0573FD099DFD0E73FD05486DFD0A73FD0548FD04FFA7FD07517CFD%39FF9D979797C5FD0497FD0673FD079DFD1073FD0548FD0B73FD0448A9FF%A77CFD07517CFD2CFFCB789D72977297729772CBFFFF9D9797979DC5FD04%97FD1C73FD0548FD0C73FD044852FD0A51A8FD2AFF9CFD0D97729D979797%C5C5FD0497FD1C73FD0548FD0C73FD04484CFD0951A8FD29FF9DFD12976C%9DC5C56C979797FD1C73FD0548FD0B73FD05484DFD07517CA8FD28FF9DFD%159773C5C5C5979797FD1B73FD0548FD0D73FD04484C514C7372FD08979D%A3FD22FF72FD0B977397FD0573977397979772C5C5979797FD1A73FD0748%FD0B73FD054873FD0E9772A3FD1FFF72FD04979D9D9D979D9797FD0C736D%9797C572979797FD1873FD0748FD0D7348486CFD12979DA3FD1CFF72FD04%97FD05C59D9D9D97FD0B734848976CC56C976CFD1773FD0748FD0D734848%6CFD159772FD1AFF9D979797FD08C5FD049DFD0B73484873729D979748FD%1673FD0648FD0E73FD0D977397FD05739773FD0497FD18FF9D9797979DFD%09C5FD049DFD0A73FD04489C97976C48FD1373FD0948736C736C976C976C%974873736CFD0597FD059DFD0D73486C976CFD17FF9D979797FD0BC5FD04%9DFD0A73FD04489D97974848FD1173FD07487373FD0D976D9797FD07C5FD%049DFD0B7348489772FD16FF9797979DFD0AC5FD049DFD0C73484848736C%97FD0548FD0B736D73FD0748FD11976C9DFD08C5FD049DFD0A734848486C%72FD14FFFD04979DFD0BC5FD049DFD0B73FD04489D9D97FD0548736DFD05%736D73FD074873FD1697FD08C5FD049DFD0A73FD0448A9FD12FFA3FD0497%BFFD0AC5FD059DFD0B73FD0448729D736CFD14486CFD0B97739773737397%73FD059796FD06C5FD049DFD0B7348484872FD12FF9DFD04979DFD0AC5FD%059DFD0C7348736C976C977397FD1148FD06979D979D9D9DFD0C73489797%979DFD05C5FD049DFD0C73484848CBFD11FF72FD04979D9DFD09C5FD059D%FD097348976DFD09976C73FD0E486C9797979DC5C5C5FD049DFD0C734848%6C9796FD04C5FD059DFD0A73FD04484EFD11FFFD05979D9DFD08C5FD069D%FD07739773FD0F976C73FD0A48979797FD09C59D9D9D97FD0A7348484897%FD04C5FD059DFD0B73FD0448CBFD10FFFD0597FD049DC5C5C5FD089DFD06%7348FD15974873487348736C486C97979DFD09C5FD049DFD0B7348484873%C5C5FD069DFD0B7349484848A3FD10FFFD059773FD0E9DFD0673FD0F9773%FD0797FD057397489797979DFD0AC59D9D9DFD0C73484848C5C5FD059DFD%0C73FD044872FD10FFFD04976D7373FD0C9DFD057348FD099773736DFD09%736C9797974873737348FD0497FD0BC5FD049DFD0A73FD0548FD069DFD0D%734848484EFD10FFFD0597737373FD0B9DFD04736CFD0497C5C5C59DBF9D%9D7397FD0A7348737397737348739797979DFD0BC5FD059DFD0A73FD0448%73FD059DFD0C73FD0548FD10FFFD0497FD0573FD079DFD0673489797979D%FD07C59D9D97FD0B734848487348486CFD0497FD0BC5FD049DFD0C734848%4873FD049DFD0E73FD0448FD10FFFD0497FD067397739D739DFD07739797%979DFD09C59D9D9DFD0B73FD0548FD04979DFD0AC5FD069DFD0B73FD0448%9D9D9DFD0E73FD0548FD10FF72979797FD1173FD0497FD09C5FD049DFD0C%734848486CFD05979DFD09C5FD059DFD0C73FD0448729DFD0F73FD0548FD%10FF9D979797FD1073FD0497FD0BC5FD049DFD0B734F48486CFD04979D9D%FD09C5FD069DFD0C73484848FD1173FD0548FD10FF9C979797FD10736C97%97979DFD0AC5BFFD049DFD0A7348484873FD049773FD049DC5C5C5FD089D%FD0C73FD0548FD0F73FD0648FD11FFFD0497FD0F73FD0497FD0BC5FD049D%97FD0B73484873FD04977373FD0D9DFD0E7348484849FD1073FD04484EFD%11FF9797976DFD0F73FD04979DFD0AC5FD059DFD0B734848FD0597737373%FD0B9DFD0E73FD0548FD0F73FD054879FD11FFCB979797FD0E73FD0597BF%FD0AC5FD059DFD0B73484873FD04977373FD0B9DFD0F73FD0448FD1073FD%0548A9FD12FF72976CFD0E73FD05979DFD09C5FD069DFD0C7348FD0597FD%0573FD079DFD1073FD0548FD0E73FD0648FD14FF979748FD0C73FD06979D%9DFD07C5FD069DFD0C7348486C979797FD077397739DFD1273FD0548FD0F%73FD0548A3FD14FFA397974848FD0A7348FD059773FD0D9DFD0E73487397%9797FD1C73FD0648FD0D73FD0648A8FD15FFA39773484848FD0873FD0597%7373FD0E9DFD0C73484848979797FD1C73FD0548FD0D73FD06487EFD17FF%736CFD04487348FD05736CFD0497737373FD0B9DFD0F734848979797FD1B%73FD0648FD0B736DFD06484EFD18FF97976CFD0848734873FD0497FD0473%97FD099DFD0E73484848979797FD1B73FD0648FD0B73FD0748FD18FF6C97%9797FD0B48979797FD07739D739D739DFD1173FD0448979797FD1973FD06%48FD0973FD0948A9FD13FFA39DFD08976CFD084873FD0497FD1C73FD0448%739797FD1973FD0548FD07734873FD0948CBFD11FFA39DFD0D9773FD0748%979797FD1C73FD05486C979748FD1773FD1748FD12FF96FD139772734873%73979797FD1B73FD064897979748FD1573FD164878FD12FF6CFD159772C5%9D9797976DFD1B73FD05487373976C4848FD1173FD084824FD0E4878A8FD%11FFCBFD0C977397FD057397739797976DBF9D979797FD1A73FD0548FD04%73976C4848FD0F73484FFD074873FD0B4879A3FD13FFCBFD0597FD059DFD%0D73486C976C9D6C9797FD1973FD07487373734897FD05487348FD077348%73FD0948FD057348734873FD0448A8FD14FF979797FD07C5FD049DFD0B73%4848976C9D97976CFD1773FD0748FD05734897FD0748734873FD0D48FD0A%73FD0448A3FD13FF729797BFFD08C5FD049DFD0A734848486C6C97979748%FD1573FD0748FD077324FD1648FD0B73FD044878FD12FF729797BFFD0AC5%FD049DFD0A73FD04487397977348FD1373FD0748736DFD0997FD1148FD0F%7348484879FD11FF9CFD0497FD0AC5FD049DFD0B73FD044873976C4848FD%1173FD07486CFD0C976C73FD0D489D9DFD0D73FD04484EFD11FF9D979797%FD0BC5FD049DFD0C73484848737397FD0548FD0B73FD094873FD10977373%48734873487372FD059DFD0E7348484879FD11FFFD04979DFD0AC5FD059D%FD0A73FD0548734873FD07487348734873FD0B486C6CFD13976CFD079D73%97FD0E73FD04484EFD10FF9DFD0497FD0BC5FD059DFD0B73FD0448737373%97FD154873FD08977397FD07739773979797FD069D7397FD0F73FD044879%FD10FFFD04979D9DFD09C5FD069DFD08736D976C976C976C976C734873FD%1348FD0497BFFD049DFD0C73486C6C976DFD1573FD044878FD10FFFD0597%9D9DFD08C5FD059DFD0773FD0D9773976CFD0E4873739797FD07C59D9D9D%FD0B7348486C97FD1473FD0548A3FD0FFF9CFD05979D9D9DFD05C5FD079D%FD05736CFD11976C73FD0B48FD0497FD08C5FD049DFD0B73484848FD1373%FD0648A8FD0FFFA3FD049773FD049DC59DC5FD089D737373FD15977397FD%0973FD0497FD0AC5BF9D9D9DFD0B73484848FD1373FD04484EFD10FF72FD%04977373FD0D9D73736DFD0D97FD05739773FD0597FD08736C97979DFD0A%C5FD049DFD0B73FD0448FD1173FD054879FD10FF9DFD0497737373FD0B9D%737373FD06979D9D9D979DFD0B73976C979797FD067349FD0497FD0BC5FD%049DFD0B73FD0448FD0F73FD0648A9FD10FF729797976DFD0473FD099D73%7373FD0497FD05C5FD049DFD0C73486C6C97FD0573FD04979DFD0AC5FD05%9DFD0B73FD04486DFD0D73FD064872FD11FFA3FD0497FD0573FD079D7373%73FD0497FD07C5FD049DFD0C7348736CFD0573FD04979DFD0BC5FD049DFD%0C73484848FD0D73FD0748FD12FF9C979797FD1073979797FD09C5FD049D%FD0B73FD04487373736CFD04979D9DFD09C5FD059DFD0B73FD0548FD0B73%FD0748A3FD13FFFD0497FD0E73979797FD0BC5FD049DFD0B73FD04487373%FD05979DFD09C5FD069DFD0C73FD0448FD0A73FD074879FD14FF979797FD%0E736C9797979DFD0AC5FD049DFD0B73FD04486D736CFD0497FD049DFD05%C5FD069DFD0C73FD0548FD0773FD094872A9FD14FF72979797FD0D73FD04%97FD0BC5FD049DFD0C73484848736CFD0597739D9DBF9DC59DC5FD089DFD%0C73FD0448FD04736D73FD094873FD16FFA9979797FD0D73FD04979DFD0A%C5FD059DFD0B73FD0448FD0597737397FD0D9DFD0D73FD124879FD18FF97%9797FD0D73FD0497FD0BC5FD059DFD0B73FD044873FD05977397FD0C9DFD%0E73FD1148A9FD19FF9C979797FD0B73FD05979DFD09C5FD069DFD0C7348%48486DFD0497FD0573FD099DFD0E73FD104878FD1CFF9797FD0B73FD0697%9D9DFD07C5FD069D97FD0B73FD0548FD0497FD0673FD079DFD1073FD0B48%4E72A9FD1EFFCB979748FD097348FD05979D9D9DC59DC59DC5FD079DFD0D%73FD0448FD0497FD1C73FD0548A378A378A3A2CBFD22FF9D977348FD0873%FD059773FD0F9DFD0C73FD0548FD0497FD1C73FD0548FD2AFF9D6CFD0448%FD05736CFD04977373FD0D9DFD0E73FD04486C979797FD1C73FD0548FD2B%FFA373FD044849487373FD0597737373FD0B9DFD0E73FD0548FD0497FD1B%73FD0548A3FD2CFFA3FD08486C979797FD067397FD079DFD0F73FD054873%979797FD1A73FD0648A8FD2EFF72FD064873FD0497FD07739D739DFD1273%FD0548736C979797FD1873FD064872FD30FF486CFD0448249797976DFD1B%73FD064873736C976CFD1773FD0748A9FD2DFFA3BFFD04976C6C4848FD04%97FD1C73FD0548737397979748FD1673FD064879FD2DFF72FD09976C9797%97FD1C73FD0548FD047397976C48FD1373FD0848A8FD2CFFFD0C976C9797%97FD1A73FD0648FD057397974848FD1173FD0848A3FD2BFFCBFD07979D97%976D7373736C9797FD1973FD0748FD05734897FD0548FD0B736D73FD0848%7EFD2CFF979797BF9DC5C5C5FD049D737373979797FD19734FFD0548FD08%7397FD0548736DFD05736D73FD0A48A2FD2CFF9797979DFD06C5FD049D73%736D9797FD1873FD0648FD0A736CFD1648A2FD2CFF979797FD09C5FD049D%737348979748FD1573FD0748FD0C73FD134873A9FD2CFF6C9797979DFD09%C5FD049D73736C97484848FD1173FD0948FD0B73484824FD0F484EA9FD2E%FFFD0497FD0BC5FD049D73739797484848FD0F73FD0848FD0E73FD04484E%FD09484E9DA9FD2FFF9D9797979DFD0AC5FD059D7373736C73FD0548FD09%73FD0B48FD0D73FD0548A9FFA9A2A378A3A2A9A9FD32FFFD04979DFD0BC5%FD049DFD04736C6CFD0748734873FD0C48FD0F73FD0548FD3BFFA2FD0497%9DFD0AC5FD059DFD0573FD1748FD0F73FD0548FD3BFF9DFD04979DFD0AC5%FD059DFD0873FD1148FD1173FD0548A3FD3BFF72FD04979D9DFD08C5FD06%9DFD0973FD0F48FD1173FD0648A8FD3BFFFD0597739D9DFD07C5FD069DFD%0C734873486D4873487348FD1373FD064872FD3CFFFD04977373FD0E9DFD%0D73486C976CFD1773FD0748A9FD3CFFFD059773FD0D9D97FD0D73487397%9748FD1673FD064879FD3DFFFD0497737373FD0B9DFD0E7348484897976C%48FD1373FD0848A8FD3DFFFD0597737373FD099DFD107348484897974848%FD1173FD0848A3FD3EFFFD0497FD07739D739DFD1273FD04482497FD0548%FD0B736D73FD08487EFD3FFFFD0497FD1D73FD0448A397FD0548736DFD05%736D73FD0A48A2FD40FF72979797FD1C73FD0548FFA972FD1648A2FD41FF%9D979797FD1B73FD054873FFFFFFA3FD134873A9FD42FFA3979797FD1A73%FD064878FD04FFCB72FD0F484EA9FD45FFFD0497FD1A73FD0548FD07FFCB%A372FD09484E9DA9FD47FF9D9797FD19736DFD054879FD0BFFA9A2A378A3%A2A9A9FD4BFF979797FD1873FD0648A9FD5EFFA297974848FD1573FD0648%78FD60FF72976D486DFD1373FD06484EFD62FF7297484848FD0F73FD0948%FD64FF7397484848FD0D73FD0948CBFD65FF6C6CFD0748734873FD0D48CB%FD67FF78FD154872FD6AFFA972FD124878FD6DFFA94EFD0E48A3CBFD70FF%A8A3724EFD06484E79A8FD66FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0235 0.4078 0 0 1 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 17) Pc0.1686 0.5882 0 0 0.8 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 59) Pc0.149 0.8157 0 0 0.8 0.2 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 65) Pc0.3843 0.8 0 0 0.6 0.2 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 101) Pc0.4941 0.3569 0.7294 0.2078 0.4 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 135) Pc0.6471 0.9412 0 0 0.4 0 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 144) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 Au0 O0.6471 0.9412 0 0 0.4 0 0.8 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR277.4746 452.4751 m278.8418 451.1079 278.8418 448.8921 277.4746 447.5249 c276.1074 446.1582 273.8916 446.1582 272.5244 447.5254 c271.1582 448.8921 271.1582 451.1079 272.5254 452.4746 c273.8916 453.8418 276.1074 453.8418 277.4746 452.4751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa272.5244 448.2324 m273.6943 447.0625 275.5977 447.062 276.7676 448.2319 c277.9375 449.4019 277.9375 451.3052 276.7676 452.4751 c275.5977 453.6445 273.6943 453.6445 272.5254 452.4746 c271.3555 451.3047 271.3555 449.4019 272.5244 448.2324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa273.2324 451.7676 m274.4775 453.0132 276.4219 453.1108 277.792 452.0859 C277.6924 452.2188 277.5957 452.3535 277.4746 452.4751 c276.1074 453.8418 273.8916 453.8418 272.5254 452.4746 c271.1582 451.1079 271.1582 448.8921 272.5244 447.5254 c272.6465 447.4038 272.7813 447.3066 272.9141 447.207 C271.8887 448.5781 271.9863 450.522 273.2324 451.7676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa275 452.1211 m275.5859 451.5352 275.5859 450.5859 275 450 c274.4141 449.4141 273.4639 449.4141 272.8779 450 c272.292 450.5859 272.293 451.5352 272.8789 452.1211 c273.4648 452.707 274.4141 452.707 275 452.1211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa274.293 452.1211 m274.6836 451.7305 274.6826 451.0977 274.293 450.707 c273.9023 450.3164 273.2686 450.3164 272.8779 450.707 c272.4873 451.0977 272.4883 451.7305 272.8789 452.1211 c273.2686 452.5117 273.9023 452.5117 274.293 452.1211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa273.4746 446.4751 m274.8418 445.1079 274.8418 442.8921 273.4746 441.5249 c272.1074 440.1582 269.8916 440.1582 268.5244 441.5254 c267.1582 442.8921 267.1582 445.1079 268.5254 446.4746 c269.8916 447.8418 272.1074 447.8418 273.4746 446.4751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa268.5244 442.2324 m269.6943 441.0625 271.5977 441.062 272.7676 442.2319 c273.9375 443.4019 273.9375 445.3052 272.7676 446.4751 c271.5977 447.6445 269.6943 447.6445 268.5254 446.4746 c267.3555 445.3047 267.3555 443.4019 268.5244 442.2324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa269.2324 445.7676 m270.4775 447.0132 272.4219 447.1108 273.792 446.0859 C273.6924 446.2188 273.5957 446.3535 273.4746 446.4751 c272.1074 447.8418 269.8916 447.8418 268.5254 446.4746 c267.1582 445.1079 267.1582 442.8921 268.5244 441.5254 c268.6465 441.4038 268.7813 441.3066 268.9141 441.207 C267.8887 442.5781 267.9863 444.522 269.2324 445.7676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa271 446.1211 m271.5859 445.5352 271.5859 444.5859 271 444 c270.4141 443.4141 269.4639 443.4141 268.8779 444 c268.292 444.5859 268.293 445.5352 268.8789 446.1211 c269.4648 446.707 270.4141 446.707 271 446.1211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa270.293 446.1211 m270.6836 445.7305 270.6826 445.0977 270.293 444.707 c269.9023 444.3164 269.2686 444.3164 268.8779 444.707 c268.4873 445.0977 268.4883 445.7305 268.8789 446.1211 c269.2686 446.5117 269.9023 446.5117 270.293 446.1211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa277.9746 445.9751 m279.3418 444.6079 279.3418 442.3921 277.9746 441.0249 c276.6074 439.6582 274.3916 439.6582 273.0244 441.0254 c271.6582 442.3921 271.6582 444.6079 273.0254 445.9746 c274.3916 447.3418 276.6074 447.3418 277.9746 445.9751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa273.0244 441.7324 m274.1943 440.5625 276.0977 440.562 277.2676 441.7319 c278.4375 442.9019 278.4375 444.8052 277.2676 445.9751 c276.0977 447.1445 274.1943 447.1445 273.0254 445.9746 c271.8555 444.8047 271.8555 442.9019 273.0244 441.7324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa273.7324 445.2676 m274.9775 446.5132 276.9219 446.6108 278.292 445.5859 C278.1924 445.7188 278.0957 445.8535 277.9746 445.9751 c276.6074 447.3418 274.3916 447.3418 273.0254 445.9746 c271.6582 444.6079 271.6582 442.3921 273.0244 441.0254 c273.1465 440.9038 273.2813 440.8066 273.4141 440.707 C272.3887 442.0781 272.4863 444.022 273.7324 445.2676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa275.5 445.6211 m276.0859 445.0352 276.0859 444.0859 275.5 443.5 c274.9141 442.9141 273.9639 442.9141 273.3779 443.5 c272.792 444.0859 272.793 445.0352 273.3789 445.6211 c273.9648 446.207 274.9141 446.207 275.5 445.6211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa274.793 445.6211 m275.1836 445.2305 275.1826 444.5977 274.793 444.207 c274.4023 443.8164 273.7686 443.8164 273.3779 444.207 c272.9873 444.5977 272.9883 445.2305 273.3789 445.6211 c273.7686 446.0117 274.4023 446.0117 274.793 445.6211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa284.4746 445.9751 m285.8418 444.6079 285.8418 442.3921 284.4746 441.0249 c283.1074 439.6582 280.8916 439.6582 279.5244 441.0254 c278.1582 442.3921 278.1582 444.6079 279.5254 445.9746 c280.8916 447.3418 283.1074 447.3418 284.4746 445.9751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa279.5244 441.7324 m280.6943 440.5625 282.5977 440.562 283.7676 441.7319 c284.9375 442.9019 284.9375 444.8052 283.7676 445.9751 c282.5977 447.1445 280.6943 447.1445 279.5254 445.9746 c278.3555 444.8047 278.3555 442.9019 279.5244 441.7324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa280.2324 445.2676 m281.4775 446.5132 283.4219 446.6108 284.792 445.5859 C284.6924 445.7188 284.5957 445.8535 284.4746 445.9751 c283.1074 447.3418 280.8916 447.3418 279.5254 445.9746 c278.1582 444.6079 278.1582 442.3921 279.5244 441.0254 c279.6465 440.9038 279.7813 440.8066 279.9141 440.707 C278.8887 442.0781 278.9863 444.022 280.2324 445.2676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa282 445.6211 m282.5859 445.0352 282.5859 444.0859 282 443.5 c281.4141 442.9141 280.4639 442.9141 279.8779 443.5 c279.292 444.0859 279.293 445.0352 279.8789 445.6211 c280.4648 446.207 281.4141 446.207 282 445.6211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa281.293 445.6211 m281.6836 445.2305 281.6826 444.5977 281.293 444.207 c280.9023 443.8164 280.2686 443.8164 279.8779 444.207 c279.4873 444.5977 279.4883 445.2305 279.8789 445.6211 c280.2686 446.0117 280.9023 446.0117 281.293 445.6211 cf/BBAccumRotation (0.785398) XTU0 Ap0 R0.4941 0.3569 0.7294 0.2078 0.4 0.4 0.2 XA282.5 455.5 m288 455.5 lS285.5 455.5 m285.5 454.5 285.5 451.5 282.5 451.5 cSu1 Ap0 O0.6471 0.9412 0 0 0.4 0 0.8 Xa281.9746 453.9751 m283.3418 452.6079 283.3418 450.3921 281.9746 449.0249 c280.6074 447.6582 278.3916 447.6582 277.0244 449.0254 c275.6582 450.3921 275.6582 452.6079 277.0254 453.9746 c278.3916 455.3418 280.6074 455.3418 281.9746 453.9751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa277.0244 449.7324 m278.1943 448.5625 280.0977 448.562 281.2676 449.7319 c282.4375 450.9019 282.4375 452.8052 281.2676 453.9751 c280.0977 455.1445 278.1943 455.1445 277.0254 453.9746 c275.8555 452.8047 275.8555 450.9019 277.0244 449.7324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa277.7324 453.2676 m278.9775 454.5132 280.9219 454.6108 282.292 453.5859 C282.1924 453.7188 282.0957 453.8535 281.9746 453.9751 c280.6074 455.3418 278.3916 455.3418 277.0254 453.9746 c275.6582 452.6079 275.6582 450.3921 277.0244 449.0254 c277.1465 448.9038 277.2813 448.8066 277.4141 448.707 C276.3887 450.0781 276.4863 452.022 277.7324 453.2676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa279.5 453.6211 m280.0859 453.0352 280.0859 452.0859 279.5 451.5 c278.9141 450.9141 277.9639 450.9141 277.3779 451.5 c276.792 452.0859 276.793 453.0352 277.3789 453.6211 c277.9648 454.207 278.9141 454.207 279.5 453.6211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa278.793 453.6211 m279.1836 453.2305 279.1826 452.5977 278.793 452.207 c278.4023 451.8164 277.7686 451.8164 277.3779 452.207 c276.9873 452.5977 276.9883 453.2305 277.3789 453.6211 c277.7686 454.0117 278.4023 454.0117 278.793 453.6211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa286.9746 450.4751 m288.3418 449.1079 288.3418 446.8921 286.9746 445.5249 c285.6074 444.1582 283.3916 444.1582 282.0244 445.5254 c280.6582 446.8921 280.6582 449.1079 282.0254 450.4746 c283.3916 451.8418 285.6074 451.8418 286.9746 450.4751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa282.0244 446.2324 m283.1943 445.0625 285.0977 445.062 286.2676 446.2319 c287.4375 447.4019 287.4375 449.3052 286.2676 450.4751 c285.0977 451.6445 283.1943 451.6445 282.0254 450.4746 c280.8555 449.3047 280.8555 447.4019 282.0244 446.2324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa282.7324 449.7676 m283.9775 451.0132 285.9219 451.1108 287.292 450.0859 C287.1924 450.2188 287.0957 450.3535 286.9746 450.4751 c285.6074 451.8418 283.3916 451.8418 282.0254 450.4746 c280.6582 449.1079 280.6582 446.8921 282.0244 445.5254 c282.1465 445.4038 282.2813 445.3066 282.4141 445.207 C281.3887 446.5781 281.4863 448.522 282.7324 449.7676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa284.5 450.1211 m285.0859 449.5352 285.0859 448.5859 284.5 448 c283.9141 447.4141 282.9639 447.4141 282.3779 448 c281.792 448.5859 281.793 449.5352 282.3789 450.1211 c282.9648 450.707 283.9141 450.707 284.5 450.1211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa283.793 450.1211 m284.1836 449.7305 284.1826 449.0977 283.793 448.707 c283.4023 448.3164 282.7686 448.3164 282.3779 448.707 c281.9873 449.0977 281.9883 449.7305 282.3789 450.1211 c282.7686 450.5117 283.4023 450.5117 283.793 450.1211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa269.9746 437.9751 m271.3418 436.6079 271.3418 434.3921 269.9746 433.0249 c268.6074 431.6582 266.3916 431.6582 265.0244 433.0254 c263.6582 434.3921 263.6582 436.6079 265.0254 437.9746 c266.3916 439.3418 268.6074 439.3418 269.9746 437.9751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa265.0244 433.7324 m266.1943 432.5625 268.0977 432.562 269.2676 433.7319 c270.4375 434.9019 270.4375 436.8052 269.2676 437.9751 c268.0977 439.1445 266.1943 439.1445 265.0254 437.9746 c263.8555 436.8047 263.8555 434.9019 265.0244 433.7324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa265.7324 437.2676 m266.9775 438.5132 268.9219 438.6108 270.292 437.5859 C270.1924 437.7188 270.0957 437.8535 269.9746 437.9751 c268.6074 439.3418 266.3916 439.3418 265.0254 437.9746 c263.6582 436.6079 263.6582 434.3921 265.0244 433.0254 c265.1465 432.9038 265.2813 432.8066 265.4141 432.707 C264.3887 434.0781 264.4863 436.022 265.7324 437.2676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa267.5 437.6211 m268.0859 437.0352 268.0859 436.0859 267.5 435.5 c266.9141 434.9141 265.9639 434.9141 265.3779 435.5 c264.792 436.0859 264.793 437.0352 265.3789 437.6211 c265.9648 438.207 266.9141 438.207 267.5 437.6211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa266.793 437.6211 m267.1836 437.2305 267.1826 436.5977 266.793 436.207 c266.4023 435.8164 265.7686 435.8164 265.3779 436.207 c264.9873 436.5977 264.9883 437.2305 265.3789 437.6211 c265.7686 438.0117 266.4023 438.0117 266.793 437.6211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa278.9746 454.9751 m280.3418 453.6079 280.3418 451.3921 278.9746 450.0249 c277.6074 448.6582 275.3916 448.6582 274.0244 450.0254 c272.6582 451.3921 272.6582 453.6079 274.0254 454.9746 c275.3916 456.3418 277.6074 456.3418 278.9746 454.9751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa274.0244 450.7324 m275.1943 449.5625 277.0977 449.562 278.2676 450.7319 c279.4375 451.9019 279.4375 453.8052 278.2676 454.9751 c277.0977 456.1445 275.1943 456.1445 274.0254 454.9746 c272.8555 453.8047 272.8555 451.9019 274.0244 450.7324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa274.7324 454.2676 m275.9775 455.5132 277.9219 455.6108 279.292 454.5859 C279.1924 454.7188 279.0957 454.8535 278.9746 454.9751 c277.6074 456.3418 275.3916 456.3418 274.0254 454.9746 c272.6582 453.6079 272.6582 451.3921 274.0244 450.0254 c274.1465 449.9038 274.2813 449.8066 274.4141 449.707 C273.3887 451.0781 273.4863 453.022 274.7324 454.2676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa276.5 454.6211 m277.0859 454.0352 277.0859 453.0859 276.5 452.5 c275.9141 451.9141 274.9639 451.9141 274.3779 452.5 c273.792 453.0859 273.793 454.0352 274.3789 454.6211 c274.9648 455.207 275.9141 455.207 276.5 454.6211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa275.793 454.6211 m276.1836 454.2305 276.1826 453.5977 275.793 453.207 c275.4023 452.8164 274.7686 452.8164 274.3779 453.207 c273.9873 453.5977 273.9883 454.2305 274.3789 454.6211 c274.7686 455.0117 275.4023 455.0117 275.793 454.6211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa270.4746 444.4751 m271.8418 443.1079 271.8418 440.8921 270.4746 439.5249 c269.1074 438.1582 266.8916 438.1582 265.5244 439.5254 c264.1582 440.8921 264.1582 443.1079 265.5254 444.4746 c266.8916 445.8418 269.1074 445.8418 270.4746 444.4751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa265.5244 440.2324 m266.6943 439.0625 268.5977 439.062 269.7676 440.2319 c270.9375 441.4019 270.9375 443.3052 269.7676 444.4751 c268.5977 445.6445 266.6943 445.6445 265.5254 444.4746 c264.3555 443.3047 264.3555 441.4019 265.5244 440.2324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa266.2324 443.7676 m267.4775 445.0132 269.4219 445.1108 270.792 444.0859 C270.6924 444.2188 270.5957 444.3535 270.4746 444.4751 c269.1074 445.8418 266.8916 445.8418 265.5254 444.4746 c264.1582 443.1079 264.1582 440.8921 265.5244 439.5254 c265.6465 439.4038 265.7813 439.3066 265.9141 439.207 C264.8887 440.5781 264.9863 442.522 266.2324 443.7676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa268 444.1211 m268.5859 443.5352 268.5859 442.5859 268 442 c267.4141 441.4141 266.4639 441.4141 265.8779 442 c265.292 442.5859 265.293 443.5352 265.8789 444.1211 c266.4648 444.707 267.4141 444.707 268 444.1211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa267.293 444.1211 m267.6836 443.7305 267.6826 443.0977 267.293 442.707 c266.9023 442.3164 266.2686 442.3164 265.8779 442.707 c265.4873 443.0977 265.4883 443.7305 265.8789 444.1211 c266.2686 444.5117 266.9023 444.5117 267.293 444.1211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa275.9746 439.9751 m277.3418 438.6079 277.3418 436.3921 275.9746 435.0249 c274.6074 433.6582 272.3916 433.6582 271.0244 435.0254 c269.6582 436.3921 269.6582 438.6079 271.0254 439.9746 c272.3916 441.3418 274.6074 441.3418 275.9746 439.9751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa271.0244 435.7324 m272.1943 434.5625 274.0977 434.562 275.2676 435.7319 c276.4375 436.9019 276.4375 438.8052 275.2676 439.9751 c274.0977 441.1445 272.1943 441.1445 271.0254 439.9746 c269.8555 438.8047 269.8555 436.9019 271.0244 435.7324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa271.7324 439.2676 m272.9775 440.5132 274.9219 440.6108 276.292 439.5859 C276.1924 439.7188 276.0957 439.8535 275.9746 439.9751 c274.6074 441.3418 272.3916 441.3418 271.0254 439.9746 c269.6582 438.6079 269.6582 436.3921 271.0244 435.0254 c271.1465 434.9038 271.2813 434.8066 271.4141 434.707 C270.3887 436.0781 270.4863 438.022 271.7324 439.2676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa273.5 439.6211 m274.0859 439.0352 274.0859 438.0859 273.5 437.5 c272.9141 436.9141 271.9639 436.9141 271.3779 437.5 c270.792 438.0859 270.793 439.0352 271.3789 439.6211 c271.9648 440.207 272.9141 440.207 273.5 439.6211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa272.793 439.6211 m273.1836 439.2305 273.1826 438.5977 272.793 438.207 c272.4023 437.8164 271.7686 437.8164 271.3779 438.207 c270.9873 438.5977 270.9883 439.2305 271.3789 439.6211 c271.7686 440.0117 272.4023 440.0117 272.793 439.6211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa280.4746 442.9751 m281.8418 441.6079 281.8418 439.3921 280.4746 438.0249 c279.1074 436.6582 276.8916 436.6582 275.5244 438.0254 c274.1582 439.3921 274.1582 441.6079 275.5254 442.9746 c276.8916 444.3418 279.1074 444.3418 280.4746 442.9751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa275.5244 438.7324 m276.6943 437.5625 278.5977 437.562 279.7676 438.7319 c280.9375 439.9019 280.9375 441.8052 279.7676 442.9751 c278.5977 444.1445 276.6943 444.1445 275.5254 442.9746 c274.3555 441.8047 274.3555 439.9019 275.5244 438.7324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa276.2324 442.2676 m277.4775 443.5132 279.4219 443.6108 280.792 442.5859 C280.6924 442.7188 280.5957 442.8535 280.4746 442.9751 c279.1074 444.3418 276.8916 444.3418 275.5254 442.9746 c274.1582 441.6079 274.1582 439.3921 275.5244 438.0254 c275.6465 437.9038 275.7813 437.8066 275.9141 437.707 C274.8887 439.0781 274.9863 441.022 276.2324 442.2676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa278 442.6211 m278.5859 442.0352 278.5859 441.0859 278 440.5 c277.4141 439.9141 276.4639 439.9141 275.8779 440.5 c275.292 441.0859 275.293 442.0352 275.8789 442.6211 c276.4648 443.207 277.4141 443.207 278 442.6211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa277.293 442.6211 m277.6836 442.2305 277.6826 441.5977 277.293 441.207 c276.9023 440.8164 276.2686 440.8164 275.8779 441.207 c275.4873 441.5977 275.4883 442.2305 275.8789 442.6211 c276.2686 443.0117 276.9023 443.0117 277.293 442.6211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa273.4746 441.9751 m274.8418 440.6079 274.8418 438.3921 273.4746 437.0249 c272.1074 435.6582 269.8916 435.6582 268.5244 437.0254 c267.1582 438.3921 267.1582 440.6079 268.5254 441.9746 c269.8916 443.3418 272.1074 443.3418 273.4746 441.9751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa268.5244 437.7324 m269.6943 436.5625 271.5977 436.562 272.7676 437.7319 c273.9375 438.9019 273.9375 440.8052 272.7676 441.9751 c271.5977 443.1445 269.6943 443.1445 268.5254 441.9746 c267.3555 440.8047 267.3555 438.9019 268.5244 437.7324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa269.2324 441.2676 m270.4775 442.5132 272.4219 442.6108 273.792 441.5859 C273.6924 441.7188 273.5957 441.8535 273.4746 441.9751 c272.1074 443.3418 269.8916 443.3418 268.5254 441.9746 c267.1582 440.6079 267.1582 438.3921 268.5244 437.0254 c268.6465 436.9038 268.7813 436.8066 268.9141 436.707 C267.8887 438.0781 267.9863 440.022 269.2324 441.2676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa271 441.6211 m271.5859 441.0352 271.5859 440.0859 271 439.5 c270.4141 438.9141 269.4639 438.9141 268.8779 439.5 c268.292 440.0859 268.293 441.0352 268.8789 441.6211 c269.4648 442.207 270.4141 442.207 271 441.6211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa270.293 441.6211 m270.6836 441.2305 270.6826 440.5977 270.293 440.207 c269.9023 439.8164 269.2686 439.8164 268.8779 440.207 c268.4873 440.5977 268.4883 441.2305 268.8789 441.6211 c269.2686 442.0117 269.9023 442.0117 270.293 441.6211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa272.9746 450.9751 m274.3418 449.6079 274.3418 447.3921 272.9746 446.0249 c271.6074 444.6582 269.3916 444.6582 268.0244 446.0254 c266.6582 447.3921 266.6582 449.6079 268.0254 450.9746 c269.3916 452.3418 271.6074 452.3418 272.9746 450.9751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa268.0244 446.7324 m269.1943 445.5625 271.0977 445.562 272.2676 446.7319 c273.4375 447.9019 273.4375 449.8052 272.2676 450.9751 c271.0977 452.1445 269.1943 452.1445 268.0254 450.9746 c266.8555 449.8047 266.8555 447.9019 268.0244 446.7324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa268.7324 450.2676 m269.9775 451.5132 271.9219 451.6108 273.292 450.5859 C273.1924 450.7188 273.0957 450.8535 272.9746 450.9751 c271.6074 452.3418 269.3916 452.3418 268.0254 450.9746 c266.6582 449.6079 266.6582 447.3921 268.0244 446.0254 c268.1465 445.9038 268.2813 445.8066 268.4141 445.707 C267.3887 447.0781 267.4863 449.022 268.7324 450.2676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa270.5 450.6211 m271.0859 450.0352 271.0859 449.0859 270.5 448.5 c269.9141 447.9141 268.9639 447.9141 268.3779 448.5 c267.792 449.0859 267.793 450.0352 268.3789 450.6211 c268.9648 451.207 269.9141 451.207 270.5 450.6211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa269.793 450.6211 m270.1836 450.2305 270.1826 449.5977 269.793 449.207 c269.4023 448.8164 268.7686 448.8164 268.3779 449.207 c267.9873 449.5977 267.9883 450.2305 268.3789 450.6211 c268.7686 451.0117 269.4023 451.0117 269.793 450.6211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa276.4746 448.4751 m277.8418 447.1079 277.8418 444.8921 276.4746 443.5249 c275.1074 442.1582 272.8916 442.1582 271.5244 443.5254 c270.1582 444.8921 270.1582 447.1079 271.5254 448.4746 c272.8916 449.8418 275.1074 449.8418 276.4746 448.4751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa271.5244 444.2324 m272.6943 443.0625 274.5977 443.062 275.7676 444.2319 c276.9375 445.4019 276.9375 447.3052 275.7676 448.4751 c274.5977 449.6445 272.6943 449.6445 271.5254 448.4746 c270.3555 447.3047 270.3555 445.4019 271.5244 444.2324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa272.2324 447.7676 m273.4775 449.0132 275.4219 449.1108 276.792 448.0859 C276.6924 448.2188 276.5957 448.3535 276.4746 448.4751 c275.1074 449.8418 272.8916 449.8418 271.5254 448.4746 c270.1582 447.1079 270.1582 444.8921 271.5244 443.5254 c271.6465 443.4038 271.7813 443.3066 271.9141 443.207 C270.8887 444.5781 270.9863 446.522 272.2324 447.7676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa274 448.1211 m274.5859 447.5352 274.5859 446.5859 274 446 c273.4141 445.4141 272.4639 445.4141 271.8779 446 c271.292 446.5859 271.293 447.5352 271.8789 448.1211 c272.4648 448.707 273.4141 448.707 274 448.1211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa273.293 448.1211 m273.6836 447.7305 273.6826 447.0977 273.293 446.707 c272.9023 446.3164 272.2686 446.3164 271.8779 446.707 c271.4873 447.0977 271.4883 447.7305 271.8789 448.1211 c272.2686 448.5117 272.9023 448.5117 273.293 448.1211 cf/BBAccumRotation (0.785398) XTUu0.6471 0.9412 0 0 0.4 0 0.8 Xa282.9746 449.4751 m284.3418 448.1079 284.3418 445.8921 282.9746 444.5249 c281.6074 443.1582 279.3916 443.1582 278.0244 444.5254 c276.6582 445.8921 276.6582 448.1079 278.0254 449.4746 c279.3916 450.8418 281.6074 450.8418 282.9746 449.4751 cf/BBAccumRotation (0.785398) XT0 Ap0.3843 0.8 0 0 0.6 0.2 1 Xa278.0244 445.2324 m279.1943 444.0625 281.0977 444.062 282.2676 445.2319 c283.4375 446.4019 283.4375 448.3052 282.2676 449.4751 c281.0977 450.6445 279.1943 450.6445 278.0254 449.4746 c276.8555 448.3047 276.8555 446.4019 278.0244 445.2324 cf/BBAccumRotation (0.785398) XT0.149 0.8157 0 0 0.8 0.2 1 Xa278.7324 448.7676 m279.9775 450.0132 281.9219 450.1108 283.292 449.0859 C283.1924 449.2188 283.0957 449.3535 282.9746 449.4751 c281.6074 450.8418 279.3916 450.8418 278.0254 449.4746 c276.6582 448.1079 276.6582 445.8921 278.0244 444.5254 c278.1465 444.4038 278.2813 444.3066 278.4141 444.207 C277.3887 445.5781 277.4863 447.522 278.7324 448.7676 cf/BBAccumRotation (0.785398) XT1 Ap0.1686 0.5882 0 0 0.8 0.4 1 Xa280.5 449.1211 m281.0859 448.5352 281.0859 447.5859 280.5 447 c279.9141 446.4141 278.9639 446.4141 278.3779 447 c277.792 447.5859 277.793 448.5352 278.3789 449.1211 c278.9648 449.707 279.9141 449.707 280.5 449.1211 cf/BBAccumRotation (0.785398) XT0.0235 0.4078 0 0 1 0.6 1 Xa279.793 449.1211 m280.1836 448.7305 280.1826 448.0977 279.793 447.707 c279.4023 447.3164 278.7686 447.3164 278.3779 447.707 c277.9873 448.0977 277.9883 448.7305 278.3789 449.1211 c278.7686 449.5117 279.4023 449.5117 279.793 449.1211 cf/BBAccumRotation (0.785398) XTULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF