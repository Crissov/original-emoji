%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (339_\203o\203\211.ai)%%CreationDate: (7/10/03) (6:32 AM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 239 465.8887 12 1100 767 18 0 0 7 43 0 0%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 13494 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C452D58FD6FFFA8A87D7D58522D2DFD0A0452A8FD66FFA87D7D2D27FD%15042DA8FD5FFFA87D5827FD15042DFD07042D83FD59FF7D5827FD1A0458%FD09042DFD54FFA8582DFD1E0458FD0B0458A8FD4DFFA87D27FD2204A852%FD0C0458FD49FF7D58FD2604A827FD0E047DFD44FF7D58FD13040A040A04%0A040A040AFD0C0427FF58FD0F0452A8FD3FFF8358FD09040A040A04FD14%0A330AFD080458FF58FD110458FD3BFF8352FD09040A04FD160A3333330A%0AFD08047DFF7DFD1304A8FD20FFA1C4A19A6F9A6F9A9AC4A1FD0BFFA87D%FD0504FD1C0AFD05330A0A0AFD0804FFFF83FD0A042DFD090458A8FD1AFF%A1696FFD0F446F9AFD04FF7D2D04040A04FD1C0A3310333333FD060AFD07%042DFFFFAEFD09043333330AFD08042DA8FD17FF6FFD16446F4A51FD1F0A%FD0733FD080AFD060458FFFFFFFD09040A3333330AFD090458FD13FFA16F%FD1C44F8FD1C0AFD0733FD080AFD0704A8FFFFFF2DFD08040A0AFD04332D%FD080452FD11FFFD0D446868684469FD0F442DFD170AFD0933FD090AFD06%042DFD04FF52FD08040A0A0AFD04332DFD080427A8FD0DFFA1FD09446868%8D8DFD08B0BD94946969FD09444BFD130AFD0933FD0C0AFD060452FD04FF%58FD0804FD040AFD0533FD0904FD0CFF9AFD07448D8DFD0DB0FD06BD946F%FD07446FFD0D0A2D0AFD0B3310FD0D0AFD0504FD05FFA8FD0804FD040A2D%FD04332DFD090483FD08FFC46FFD064468FD10B0FD08BD9AFD074469F8FD%0A0AFD0D33FD0E0AFD05042DFD05FFA8FD0804FD040AFD0733FD090483FD%07FF6FFD05446993B6FD10B0B6FD09BD8D6FFD054469FD070AFD0F33FD0F%0AFD05047DFD06FFFD0804FD050AFD06332DFD09047DFD05FF6FFD05446F%B6B6FD11B0FD0ABDB6B66FFD0644FD050AFD0E33FD110AFD0504FD07FF58%FD0704FD060AFD06332DFD09047DFFFFFFA1FD054494FD04B6FD10B0B6FD%09BDB6B6B694FD05447CFD1133FD120AFD040458FD07FF58FD0704FD070A%FD06332DFD09047DFFC4FD054493FD05B6FD10B0FD0ABDFD04B693FD0544%6F4469446F4469446F4469446F4A4BF8FD130AFD0404A8FD07FFA8FD0704%FD070AFD05336F4A6F4469446F446F20040483FD054493FD06B6FD10B0B6%FD09BDFD05B693FD154451FD100AFD040452FD09FF27FD0604FD070A3333%33FD0D4468FD054469FD08B6FD0FB0B7FD08BDFD07B6FD1844FD0E0AFD04%04FD0AFF52FD0604FD080A6FFD144494FD09B6FD0EB0FD0ABDFD06B68DFD%184451FD0C0A04040458FD0AFF83FD0704FD050A2069FD1544FD09B6FD0F%B0FD09BDFD08B6FD04446F946F946F946F946F946F6FFD09444BFD0A0AFD%0404A8FD0BFF27FD0504FD050A26FD08446F699369936869FD084469FD09%B6FD0EB0FD0ABDFD07B6FD0444FD0DBD9494FD07446FFD0A0A040458FD0C%FF2DFD06040A0A0AF8FD0644698DFD09B668FD074469FD09B6FD0DB0FD09%BDFD08B6FD0444FD10BD6FFD074404FD070A040404FD0DFFA8FD0504FD04%0A6FFD054494FD0BB6BDBD94FD064493FD09B6FD0BB0B6FD09BDFD07B6B0%FD0444FD11BD9A6FFD05446FFD060A040404A8FD0EFF27FD05040A0A6FFD%0544FD0CB6FD05BD69FD05448DFD07B6FD0CB0B6FD09BDFD06B6B0B0FD04%44FD13BD93FD0644F8FD040A04047DFD0FFF7DFD05040A2DFD0544FD0CB6%FD07BD6FFD044469FD08B6FD0BB0FD09BDFD07B6B0B0FD0444FD13BDB694%FD05446FFD040A042DFD11FFFD05040A20FD044493FD0BB6FD09BDFD0544%69FD08B6FD0AB0B6FD08BDFD06B6B0B0B0FD0444FD12BDB6B6B693FD0544%680A0A0404A8FD11FF7DFD05046F4444446FFD0BB6FD0BBDFD054493FD08%B6FD09B0FD09BDFD06B6B0B08DFD0444FD13BDB6B6B694FD0544510427A8%FD12FFA8FD04042CFD044469FD0BB6FD0CBDFD054494FD08B68D8D8C8D68%8D8CB6FD08BDFD05B6FD04B068FD0444FD12BDFD05B693FD054426A8FD14%FF7D04040426FD0444FD0BB6FD0EBDFD0544FD06B693FD0B6894FD06BDB6%B6B6B5FD04B0FD0544FD11BDFD07B66FFD0544FD16FF2D04046FFD0444FD%0BB6FD0EBD9AFD0544B6B6B68D8DFD0E6869BDBDBDB6B6FD06B0FD0644FD%10BDFD08B693FD05449BFD15FFAE0404FD044468FD0AB6FD10BD6FFD0444%69B68D93FD0968936893689368686894BDB6FD06B0FD064469FD10BDB7FD%08B693FD04446FFD16FF7D046F44444469FD0AB6FD10BD6FFD0544FD0868%69948DFD09B68DB5FD06B068FD064494FD0FBDFD0BB6FD0544A1FD16FF58%FD0544FD0AB6FD10BD94FD0544FD066894FD04BDFD0CB6FD04B068FD0744%94FD04BDB6FD05B0B6B7BDBDFD0DB6FD0544FD17FF69FD0444FD0AB6FD10%BD69FD0444FD0668FD06BDB7FD0BB6B0B0B0FD0944BDBDBDB6FD0AB0FD0E%B669FD0444A1FD16FFA1FD0444FD0AB6FD10BD6F444444FD0668FD09BDFD%0AB6B0B068FD084494BDBDFD0DB0FD0DB694FD04449AFD17FFFD04448DFD%0AB6FD0DBD946FFD0444FD0568FD09BDFD0CB668FD084469BDB6FD0FB0FD%0DB6FD0544FD17FF694444446FFD0AB6FD0ABD949A6FFD0544FD0568FD0B%BDFD0BB6FD09449394688C688D688D8DFD0AB0FD09B68D8D6868FD0444A1%FD16FF69FD04446944694469446944694469446F446F446FFD0B44FD0468%93FD0BBDFD0AB693FD0744FD0C68FD0AB0FD05B6FD0768FD0444A1FD16FF%CAFD1F44FD0568BCFD0BBDFD0AB6FD0744FD08689368936893688DFD08B0%B6B68D8DFD0868FD04446FFD16FF6FFD1E44FD056869FD0DBDFD08B68DFD%0644FD0668FD09B68DFD08B08D688CFD0968FD04449AFD14FFA1FD1D4469%68B0B0FD0468BCFD0DBDFD08B694FD0444FD056893FD0CB6FD0EB08DB08D%8D8C8DFD04446FFD12FFA16FFD0944FD066893696F69946F6F69946F6F8D%948CFD05B0FD046894FD0DBDFD08B669FD0444FD0468B5FD0DB6FD14B068%4444449AFD11FFA16FFD074468FD068C93FD0BBDB6B6FD06B08CFD0468FD%0EBDFD08B6934444FD0568FD0FB68DFD13B0684444446FFD10FF9AFD0744%68FD068CB5B6FD0BBDFD09B08C68686893FD0EBDFD08B6684444FD0468FD%10B68DFD13B0684444449AFD0FFF9AFD064468FD078CBCFD0BBDB6FD0AB0%FD046893FD08BD9B94BD94938CB5FD07B06FFD0568FD11B644FD13B0FD04%446FFD0EFF6FFD0644FD088CFD0BBDB6FD0CB08C68686893696F4469FD07%448C8CFD09B044FD0468FD11B68D68FD13B0684444446FFD0DFFA1FD0644%FD078C93FD0BBDB6FD0DB0FD0468FD07446868FD058CFD08B08DFD0468FD%13B644FD13B0684444446FFD0CFFA169FD0544FD078C94FD0BBDFD0EB08C%FD0568FD0544FD088CFD08B0FD046869FD12B66944FD13B0684444449AFD%0CFF9AFD0544FD078C94FD0BBDFD0EB06844FD046844444468FD098CFD08%B08DFD046869FD12B69344FD13B0684444446FFD0CFFFD0544FD078C93FD%0ABDB6FD0DB08D444444FD0668FD0C8CFD06B08DFD04684494FD12B66844%8CFD12B0FD0444A1FD0BFF6FFD0444FD078CB6FD0ABDB6FD0EB0FD0444FD%0568FD0C8CFD07B0FD0468444494BDBDBDFD0FB693448DFD12B0FD0444A1%FD0AFFA1FD044468FD068C8DFD0ABDFD0FB0FD0544FD0468FD0E8CFD05B0%FD056844449AFD06BDFD0CB6694468FD11B08CFD0444FD0BFFA1FD044468%FD068CFD0ABDB6FD0EB0FD0644FD0568FD0C8CFD05B0FD0568B0444494FD%09BDB7BDFD07B6934469FD11B08D4444446FFD0BFF69FD0444FD068CBCFD%09BDFD0FB0FD0744FD0468FD0D8CFD04B08CFD0468B0B0684494FD0EBDB6%BDB6BD694444FD11B0FD044469FD0BFF6F44444468FD058CB6FD09BDB6FD%0EB068FD0644FD0668FD0C8CB0B0B08DFD0468B0B0B0684494FD12BD9444%44FD10B08DFD0444CAFD0BFFFD044468FD058C94FD09BDFD0EB08CFD0744%FD0668FD0C8CB0B08CFD04688DB0B0B08D449AFD12BD6F44449AB6B6B0B6%B0B5B0B6B0B5B0FD04B66F4444446FFD0CFFFD0444FD058C93FD09BDFD0D%B0B6B669FD0644FD0768FD0C8CB0B08CFD0468FD04B08D4494FD12BD9444%446FFD0EBD9BFD04449AFD0CFFFD044468FD048CBCFD08BDB6FD0CB0B6B6%B6FD0744FD0768FD0E8CFD04688CFD05B04494FD12BD69444469FD0EBDFD%0544FD0DFFFD0444FD048CB5FD09BDFD0CB0B6B6B669FD0644FD0868FD0C%8CB0FD04688CFD06B0696FFD12BD9A444444FD0DBD6FFD0444C4FD0DFFFD%0444688C8C8C93FD08BDB6FD0BB0FD04B668FD0544FD0A68FD0B8CFD0568%FD07B0686FFD12BD944444446FFD0BBD94FD04446FFD0EFFFD0444688C8C%8CFD09BDFD0BB0FD05B6FD0644FD0968FD0B8CFD0568FD09B044FD13BD44%44446FFD0BBD6944444469CAFD0EFFFD05448C8C8DFD08BDB6FD0AB0FD05%B68DFD0644FD046894FD0568FD098CFD0568FD048CFD06B068FD13BDFD04%44FD09BD9469FD0444A1FD0FFF9AFD04448C8C93FD08BDB6FD09B0FD06B6%93FD0544FD046893BD93686868FD098CFD0568FD068CFD05B068FD13BD69%4444446FFD08BD6FFD04449AFD10FFA1FD0444688CBCFD08BDFD09B0B5FD%06B669FD0444FD056894BD93FD0468FD078CFD0768FD068CFCFD04B0B6FD%12BD94FD044494FD06BD69FD04446FFD12FF69FD04448CFD08BDB6FD08B0%B5FD07B66F444444FD056894BDBDBDFD0468FD068CFD0668FD0A8CFD05B0%BDB7FD10BDFD04446FFD05BD6FFD04449AFD13FFA1FD0544FD08BDB6FD09%B0FD07B6444444FD056869FD04BDFD0568FD048CFD0768FD0C8CFD06B0B5%B0B6B7FD0BBDFD064494BD94FD05446FFD15FF6FFD04446FFD07BDFD09B0%FD08B66F44FD056893FD05BD94FD04688C688CFD0768FD0C8CFD0BB0B6FD%09BD8D68FD0C44A1FD16FFA1FD054469FD05BDB6FD08B0FD09B644FD0668%FD07BDFD0D68FD0E8CFD0CB0BDBDBD94B58C8CFD0468FD09446FA1FD18FF%9AFD054469FD04BDB6FD07B0FD09B6B5FD0668FD09BDFD0B68FD108CFD0B%B08CB5FD068CFD0468FD07446FCAFD1AFF69FD054469BDBDBDFD09B0FD07%B68DFD05684493FD09BD94FD0D68FD0E8CFD05B08CFCFD0A8CFD05688CFD%08446FFD1AFF6FFD0644BDBDB6FD07B0FD07B69393FD05684468B6B6FD09%BD93936893FD0868FD0D8CB0B0B08CB0FD0C8CFD0568FD048C9AFD0744C4%FD19FF69FD06449BFD08B0FD06B68DFD056844444468B0B0B0FD0DBD9493%FD0768FD0B8C68FD0F8CFD0568FD068CBD946FFD05446FA1FD18FF6FFD06%448DFD07B0FD05B693FD0668FD0444FD04B0FD0EBDBCFD0668FD0B8C68FD%0F8CFD0468FD078CBDBDBD94FD0644A1FD18FF6FFD0644688CFD04B0FD05%B693FD0668FD05448DFD04B0B6B6FD0DBDFD0768FD088C6844FD0D8CFD05%68FD088CB6FD04BDFD064469FD18FFA16FFD0544698DB0B0B0FD05B693FD%05688CFD05448DFD05B0B6FD0EBDFD0568FD088CFC44FD0E8CFD0468FD09%8CB0FD05BD69FD05446FFD18FFC46FFD064468B0B0B6B6B68D8DFD05688C%8C68FD044468FD06B0B6FD0EBDFD0568FD078C4444FD0D8CFD0568FD098C%B0B6FD05BD6FFD054469FD19FF9AFD0744B0B6B6B68DFD0568FD048CFD04%4468FD07B0B6FD0EBDFD0568FD058C684444FD0C8CFD0468FD0C8CB6FD06%BD94FD05449AFD19FFA1FD0744698DFD0668FD058CFD05448DFD07B0B6FD%0DBD93FD0468FD048C68444468FD0A8CFD0568FD0C8CFCB0FD07BD6FFD05%44A1FD1AFFFD07446FFD0568FD078CFD044468FD07B0B6FD0DBD94FD0468%FD048C684468FD0A8C686868FD108CB0B6FD07BD94FD04446FFD19FFA858%FD0844686868FD078C68FD05448CFD06B0B6FD0DBDBCFD04688C8C8C6844%4468FD098C688C68FD108CB0B0B6FD08BDFD0544FD18FF83270404FD0744%6868FD098C68FD044469FD07B0FD0DBD94FD04688C8C8C444444FD1D8CB0%B0B0FD09BDFD0444A1FD16FF52FD0504FD064468FD0B8CFD05448DFD06B0%FD0DBD93FD04688C8C44444468FD1D8CB0B0B0B6FD05BDB6BDB6FD04449A%FD15FF52FD06046FFD0544BCFD0C8CFD044468FD06B0FD0DBDFD05688C44%444468FD1E8CB0B0B0BDB6BDFD06B6684444446FFD14FF52FD0704FD0544%6F94FD0C8C68FD044468FD05B0B6FD0BBD69FD04688CFD044468FD1E8CFD%04B0FD08B6FD0444A1FD13FF7DFD08046FFD04446FBDFD0C8C68FD044468%8DFD04B0FD0BBD93FD066844444468FD1E8CFD05B0FD08B6FD0444A1FD12%FFA8FD08040A20FD044494BDB6FD0C8C68FD0444688DB0B0B0B6FD09BDFD%0668FD0544FD208CFD04B0FD07B669FD0444FD13FF52FD07040A0A6FFD04%4494BDBDB5FD0C8C68FD044469B0B0B0FD08BDBCFD0668FD0544FD208CFD%05B0FD07B6694444446FFD12FF7DFD08040A0AFD0544BDBDBD93FD0D8CFD%0544688CB0B6FD05BD9493FD0668FD054468FD1F8CFD06B0FD06B693FD04%449AFD12FFFD09040A0A6FFD0444FD04BDFD0E8CFD0544688DBDBDBD9494%FD0868FD054468FD208CFD07B0FD05B6FD0544FD12FF58FD08040A0A0AFD%0544FD04BDB6FD0E8CFD06446894FD0968FD064468FD218CFD06B0FD05B6%69FD04446FFD12FF27FD0704FD040A6F4444446FFD05BDB5FD0E8CFD0744%FD0768FD0744FD228CFD08B0B6B6B693FD054404FD11FF7DFD0804FD040A%FD0544FD05BDB6FD0F8CFD13449493FD208CFD09B0B6B68DFD06440404FD%10FFFD0904FD040A51FD0444FD06BDB68DFD0E8CFD1144FD04BDB6FD1D8C%FD0AB0B693FD06440A040458FD0EFF83FD0804FD050A20FD0444FD07BD94%FD0F8C68FD074420FD05446FFD07BD93FD1A8CFD0BB08DFD06440A0A0A04%047DFD0DFF58FD0804FD060AFD044494FD07BDBCFD118CFD0844699AFD0C%BD93FD168CFD0BB068FD06442D0A0A0A04042DFD0DFFFD0904FD060A6F44%44446FFD08BDB68DFD118C684444446FFD10BDB6B5FD138CFD09B08C8DFD%07442DFD040A0404047DFD0BFF7DFD0804FD060A334AFD0444FD0ABDB6FD%108CFD0544FD0FBDFD04B6B5B5FD0A8CFD05688D688D688D688D6869FD09%442DFD060A040404FD0BFF52FD0804FD070A51FD04446FFD0ABDB6FD0D8C%B5FD06446FFD0EBDFD07B6B5B58C8D8C68FD1944FD070AFD04042DFD0AFF%FD0904FD060A33336F4444446FFD0CBDB6B5FD088C93BD94FD06446FFD0E%BDFD0BB66FFD17446926FD090AFD0404A8FD08FFA8FD0804FD060A333333%4AFD044494FD0EBD94B693B693FD04BD6FFD074494FD0CBDFD0AB68D69FD%17444BFD0C0A04040458FD08FF83FD0804FD050AFD0533FD0544FD16BD94%FD0944FD0CBDFD09B693FD08446F446F446F446F446F446F44694451FD0E%0AFD0504FD08FF2DFD0804FD050AFD05336FFD0544FD14BD9AFD05446FFD%0544FD0ABDB7FD08B68DFD06444B26FD0D33FD120AFD04042DFD07FF2DFD%0704FD050AFD06330A6FFD04446FFD13BDFD0544A1FF6FFD0544FD09BDFD%09B66FFD0544510AFD0F33FD110AFD04042DFD06FFAEFD0904FD040AFD05%330A0420FD054469FD10BD9BFD05446FFFFFA1FD0644FD07BDFD09B668FD%05442DFD050AFD0D33FD100AFD05047DFD05FF83FD0804FD040AFD05330A%040404FD06446FFD0EBD9AFD05446FCAFFFFFFA1FD0644FD05BDFD08B693%6FFD05442DFD070A330AFD0D33FD0D0AFD050427FD05FF7DFD09040A0AFD%05330AFD050420FD064494FD0ABD946FFD0644A1FD05FF6FFD06446FBDBD%FD08B68DFD06442DFD0B0A330AFD0B33FD0C0AFD0604A8FD04FF2DFD0804%0A0AFD05330AFD0704FD07446F94FD07BD6FFD06446FA1FD07FF9AFD0644%6F6FFD06B69468FD064451FD0F0AFD0B33FD0C0AFD05047DFD04FF2DFD08%040A0A0A333333FD09045876FD0A446FFD094469A1FD09FF9AFD0A4469FD%09442CFD130AFD0933FD0A0AFD0704FD04FFFD09040A0A333333FD09047D%FFFFA169FD11449AFD0CFFA16FFD114451FD170AFD0733102DFD080AFD06%04A8FFFFA8FD09040A330A0AFD0904A8FD05FF6FFD0F44A1FD0FFF9BFD0F%44FD1C0AFD0533FD080AFD070458FFFFA8FD0904330AFD090458FD09FF9A%6FFD09449AA1FD13FF9A6FFD09446F260A04FD1C0A3310FD0533FD050AFD%070427FFFF58FD12042D83FD0DFFA1A16F9A6FA1A1FD19FFA1A16F9A6FA1%A1FFFFFF5827FD0504FD1C0A333333FD040AFD0804A8FF7DFD11047DA8FD%3AFFA8522DFD0704FD180A3333330A0A0AFD0804A8FF2DFD0F0427A8FD3F%FFA82DFD0E04FD120A330A0AFD080452FF52FD0D04277DFD44FFA85227FD%0D040A040A040A040A04FD050A040A040AFD09042DFF27FD0C047DA8FD48%FF832D2DFD2504FF27FD0A0452FD4EFFAE582DFD2204A8FD09042DA8FD53%FF7D5827FD1E047DFD07042DA8FD59FFA8582DFD1A0452FD05042D83FD5F%FF837D522DFD15042D04040452AEFD66FF8383582DFD120458A8FD6FFF83%7D52582D2DFD070404%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 25) Pc0.0078 0.8196 0.3137 0 1 0.2 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 31) Pc0.0078 0.9647 0.6078 0 1 0 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 38) Pc0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 76) Pc0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 112) Pc0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 148) Pc0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 165) Pc0.9333 0.2078 1 0.0745 0 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 208) Pc0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 214) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR276 453 m282 456 288 456 v287.5 451 284.5 449 vF0.9333 0.2078 1 0.0745 0 0.4 0 Xa277 453.5 m283.3984 455 286 454.5 v286.6875 451.9238 285 449.5 v283.5 447.5 279.5 448 v275.5 448.5 277 453.5 yf0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa286 454.5 m276.5 451 l277.5 448.5 l286 454.5 lf0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa276 435 m282 432 288 432 v287.5 437 284.5 439 vF0.9333 0.2078 1 0.0745 0 0.4 0 Xa277 434.5 m283.3984 433 286 433.5 v286.6875 436.0762 285 438.5 v283.5 440.5 279.5 440 v275.5 439.5 277 434.5 yf0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa286 433.5 m276.5 437 l277.5 439.5 l286 433.5 lf0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa267 448 m264 449.5 264 456 y269 454 271 451 vFu0.9333 0.2078 1 0.0745 0 0.4 0 Xa265.9375 453.8887 m265.625 451.1387 266.5 448.5137 Y268.1714 450.063 L268.0361 450.2412 267.8945 450.4609 267.75 450.7637 c267.0625 452.2012 265.9375 453.8887 Yf0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa265.9375 453.8887 m267.0625 452.2012 267.75 450.7637 v267.8945 450.4609 268.0361 450.2412 268.1714 450.063 C269.0625 450.8887 L267.625 453.3262 265.9375 453.8887 YfU0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa267 440 m264 438.5 264 432 y269 434 271 437 vFu0.9333 0.2078 1 0.0745 0 0.4 0 Xa265.9375 434.1113 m265.625 436.8613 267.9165 439.8472 Y268.1714 437.937 L268.0361 437.7588 267.8945 437.5391 267.75 437.2363 c267.0625 435.7988 265.9375 434.1113 Yf0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa265.9375 434.1113 m267.0625 435.7988 267.75 437.2363 v267.8945 437.5391 268.0361 437.7588 268.1714 437.937 C269.0625 437.1113 L267.625 434.6738 265.9375 434.1113 YfU0.0078 0.8196 0.3137 0 1 0.2 0.4 Xa264 444 m264 446.5 266.5 447.5 y265.5 449.5 267 451 v268.5 452.5 270.5 451.5 y271.5 454 275 454 v278.5 454 279.5 452 y281.5 452 l284 452 286 449 286 447.5 c286 446 l286 443.5 283.5 442 y286 441 286 439.5 v286 438 284.5 436 282.5 436 c280.5 436 l279.3999 436 279 434 277 434 c275 434 273.9995 436 y273 434 271 434 v269 434 267.5 436 267.5 438 c267.5 439.5 l267 440.5 264 441.5 264 444 cf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa274.625 449.2637 m275.9375 447.9238 275.5 446.5 v272.5625 446.0137 l272.5625 448.7012 274.625 449.2637 vf0.0078 0.9647 0.6078 0 1 0 0.2 Xa275.25 446.3887 m276.1875 446.9512 277.5 446.3262 V276.875 445.0762 275.125 442.9512 y274.4375 444.4512 l275.25 446.3887 lf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa277.5 445.7012 m279.208 444.8467 281.6665 444.8052 V281.4375 443.8262 281.9614 442.2583 y278.3125 441.2637 l277.875 443 l277.5 445.7012 lf0.0078 0.9647 0.6078 0 1 0 0.2 Xa277.3125 446.0137 m275.5625 443.4512 l276.875 441.3262 l277.875 441.3262 l280.1768 439.5518 280.25 441.3887 v280.3125 442.9512 278 442.4512 277.875 443 c277.6489 443.9922 277.3125 446.0137 yf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa275.5 446.5 m274.8125 444.0137 275.625 443.6387 v276.4375 443.2637 278.125 442.7012 277.875 441.3262 c277.625 439.9512 276.5 438.0762 275.5625 437.8887 c276.8125 440.9512 275 441.5762 v273.1875 442.2012 272.375 442.4512 272.375 444.3887 c272.375 446.3262 272.875 446 y275.5 446.5 lf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa274.1875 437.2637 m276.3125 438.3262 l277.5625 437.2012 l276.5005 433.7773 275.25 434.8887 v273.9995 436 274.1875 437.2637 yf283.0625 439.2637 m284.8125 439.7637 285.625 439.5137 V284.625 441.2637 283.4375 441.7637 v282.25 442.2637 282.3125 441.2637 y283.0625 439.2637 lf0.0078 0.9647 0.6078 0 1 0 0.2 Xa282.5625 441.9512 m284.0625 439.3887 283.75 436.7637 v281.375 436.2012 280.6875 436.3262 v280 436.4512 280.875 437.9512 y282.5625 441.9512 lf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa275.75 437.9512 m279.125 436.0137 280.8125 436.6387 v282.5 437.2637 283.6875 439.9512 282.5625 442.2012 c282.2773 442.7715 280.8125 442.1387 278 441.5 C276.75 439.2012 277 439.3262 275.75 437.9512 cf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa270.8125 442.0137 m272.375 444.3887 l272.6875 442.5137 273.25 442.2637 v273.8125 442.0137 274.5 442.0137 y276.125 440.7012 276 439.9512 v275.875 439.2012 274.625 437.3262 273.375 437.7637 c272.125 438.2012 270.625 439.5137 270.8125 442.0137 cf0.0078 0.9647 0.6078 0 1 0 0.2 Xa270.5625 442.0137 m272.6875 441.0137 272.875 440.2637 v273.0625 439.5137 273 438 y271.375 438.6387 270.9375 440.0762 v270.5 441.5137 270.5625 442.0137 yf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa268.5 440.1387 m267.75 438.5137 267.8125 437.3262 v267.875 436.1387 268.9375 434.3262 270.75 434.3887 c272.5625 434.4512 273.875 436.7637 y268.5 440.1387 lf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa268.5 440.1387 m268.6416 437.6548 271 436.5 v272.6875 435.6738 273.9375 437.1387 y270.5625 438.6387 270.5 441.7012 v268.5 440.1387 lf0.0078 0.9647 0.6078 0 1 0 0.2 Xa272.5625 447.8887 m272.4375 445.7637 l270.9375 444.7012 l268 443.8262 267.8125 440.0137 v265.375 442.0137 l270.125 447.3887 l272.5625 447.8887 lf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa272.1875 447.8262 m269.3442 446.2954 268.125 445.0762 v266.9058 443.8569 266.5 441.0137 y264.5 442.7012 l264.5 444.6387 l268.6875 447.5762 l272.1875 447.8262 lf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa266.5 445.4512 m265.4375 444.2637 265.125 442.0137 y263.375 444.2012 265.25 446.1387 v266.146 447.0645 267.6875 447.7012 y268.9375 447.2012 l267.5625 446.6387 266.5 445.4512 vf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa281.625 444.9512 m281.625 442.2012 283 441.9512 v285.1875 443.2637 285.25 444.5762 v283.75 445.7012 l281.625 444.9512 lf281.75 448.3262 m283.5625 449.3262 283.3125 451.0137 v281.458 452.2012 279.4165 451.6387 V279.5625 449.5762 279.0625 449.1387 v278.5625 448.7012 277.5 447.6387 277.625 446.7012 c278.6875 447.9512 279.5625 447.8262 v280.4375 447.7012 281.75 448.3262 yf0.0078 0.9647 0.6078 0 1 0 0.2 Xa281.5 447.5 m281.5 447 l281.4585 445.5132 281.6665 444.8052 v281.8745 444.0972 285.4165 444.5972 y285.5 447.5 l283 447.5 l282.5415 448.6807 281.375 448.8472 v280.2085 449.0137 279.1665 447.5972 y279.7915 448.3052 281.5 447.5 vf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa275.4375 453.5762 m276.9795 453.6597 277.521 452.9512 v278.0625 452.2427 277 449 y275.5 449.5137 l275.4375 453.5762 lf0.0078 0.9647 0.6078 0 1 0 0.2 Xa277 449 m277.5835 448.7222 277.75 447.2637 V277.75 447.9722 278.0835 448.1387 y279.876 448.4766 279.4165 451.6387 V278.75 449.5972 277 449 yf274.25 449.4512 m272.1875 452.2012 272.875 453.2012 V273.625 453.5972 274.4375 453.7637 275.4375 453.5762 C276.3335 453.0762 275.5 449.5137 y274.25 449.4512 lf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa270.9165 450.8052 m270.5 451.0552 269.5005 450.3057 269.0835 449.4722 c268.6665 448.6387 268.8335 447.3892 270.5835 447.4722 c272.3335 447.5552 272.9165 448.6387 272.5 449.1387 c272.0835 449.6387 270.9165 450.8052 yf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa274 441.625 m274.3252 441.625 275.625 440.7583 275.625 440 c275.625 438.5 273 438 Y275 437 276.375 438.5 276.375 440 c276.375 441.2456 274.665 442.375 274 442.375 C274 441.625 Lf279.5 440 m281.2339 440 282.3037 442.249 282.3481 442.3608 C281.6519 442.6396 L281 441 279.5 440 Yf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa281.5 447 m280.9434 443.3359 281.9614 442.2583 v282.3584 441.8379 282.876 441.625 283.5 441.625 C283.5 442.375 L283.0845 442.375 282.7598 442.5054 282.5068 442.7729 c281.7119 443.6157 281.5 447 Yf272 449 m272.0254 448.3813 272 447.875 270 447.875 C266.5 447.875 L266.5 447.125 L270 447.125 L272.5005 447.0557 273.498 448.0571 273 449 C272.8926 449.2036 271 451.5 y270.8867 450.4873 L271.1582 450.0508 271.98 449.4902 272 449 Cf279 451.5 m279 450 L279 449.5576 278.2852 448.9102 277.875 448.5 c276.375 447 277.875 443 y277.2432 446.5688 278.4375 447.3262 v279.5 448 279.75 449.0264 279.75 450 C279.75 451.5 L279 451.5 Lf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa283 447.5 m283 447.3618 285.25 447.25 Y285.3882 447.25 285.5 447.3618 285.5 447.5 c285.5 447.6382 285.2632 448.2012 285.125 448.2012 C283 447.6382 283 447.5 vf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa272.5 438.5 m271.231 439.769 270.9497 441.6187 270.8896 442.499 C270.8687 442.8101 272.1875 443.9512 Y272.1875 444.5293 272.0859 445.0459 272.4341 445.269 C273.7773 446.1274 275.5 446.5 Y273.5 446.375 L271.8916 446.375 270.125 444.6084 270.125 443 C269.5674 440.4321 272 438 v275.0679 434.9326 278 439.9199 278 441.5 C277.125 439.7324 274.75 436.25 272.5 438.5 cf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa273.4004 449.1748 m272.5649 448.4829 272.125 447.4277 272.125 446 c272.125 443.022 272.5576 442.2402 272.9346 441.8916 c273.2817 441.5708 273.6631 441.6006 273.8911 441.6187 C274 441.625 L274.4917 441.625 274.9805 442.1836 275.7275 443.104 C276.2715 443.9072 277 445 v278.4785 447.2178 279.5 448 281.5 447.5 C279.5 449.5 277 446 v276.1924 444.8696 275.145 443.5767 Y274.8428 443.2041 274.2134 442.4287 273.9834 442.3735 C273.9741 442.3735 273.832 442.3662 Y273.6318 442.3506 273.5391 442.3525 273.4434 442.4424 c273.2314 442.6387 272.875 443.3618 272.875 446 c272.875 447.1875 273.2085 448.0581 273.8667 448.5874 c275.0396 449.5313 276.981 449.0039 277 449 C275 450.5 273.4004 449.1748 vf272.125 445.5 m272.125 444.1553 270.7021 442.7324 270.2349 442.2651 C267.9165 439.8472 L268 439 L270.7651 441.7349 L271.2871 442.2568 272.875 443.8447 272.875 445.5 C272.125 445.5 Lf1 A*u0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa1 D286 446 m286 447.5 L286 449 284 452 281.5 452 C279.5 452 L278.5 454 275 454 v271.5 454 270.5 451.5 Y268.5 452.5 267 451 v265.5 449.5 266.5 447.5 Y264 446.5 264 444 v264 441.5 267 440.5 267.5 439.5 C267.5 438 L267.5 436 269 434 271 434 c273 434 273.9995 436 Y275 434 277 434 v279 434 279.3999 436 280.5 436 C282.5 436 L284.5 436 286 438 286 439.5 c286 441 283.5 442 Y286 443.5 286 446 Vf0 D282.5 442 m285.25 440.5 285.25 439.5 v285.25 438.4185 284.0693 436.75 282.5 436.75 C280.5 436.75 L279.7075 436.75 279.1997 436.2109 278.752 435.7349 c278.2544 435.2065 277.8242 434.75 277 434.75 c275.5 434.75 274.6768 436.3228 274.6685 436.3389 C273.9976 437.6421 L273.3301 436.3384 L273.3223 436.3228 272.5 434.75 271 434.75 c269.3794 434.75 268.25 436.4629 268.25 438 C268.5 440 L267.4131 440.7109 266.8203 441.1558 v265.8501 441.8833 264.75 442.7085 264.75 444 c264.75 445.9478 266.6987 446.771 266.7817 446.8047 C267.5195 447.1152 L267.1719 447.833 L267.1416 447.8955 266.4409 449.3804 267.5303 450.4697 c268.6196 451.5591 270.106 450.8574 270.1685 450.8271 C270.8867 450.4873 L271.1938 451.2153 L271.229 451.2983 272.0854 453.25 275 453.25 c277.9409 453.25 278.7993 451.7197 278.834 451.6548 C279.0522 451.25 L281.5 451.25 L283.5869 451.25 285.25 448.5571 285.25 447.5 C285.25 446 L285.25 443.5 282.5 442 Yf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF