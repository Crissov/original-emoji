%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (309_\203A\201[\203g.ai)%%CreationDate: (7/8/03) (2:29 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 245 469.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 8344 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD5BFFA8A87DA8527D527D52%7D527D527D7DA8A8FD66FFA8A852522727FD17F82727527DFD5BFFA85252%FD23F827277DA8FD52FF7D52FD2DF8527DFD4CFF7D52FD33F852A8FD46FF%7D52FD38F8277DFD41FFA852FD14F8204A4A744A98989E989E989E989E98%9E989E98744A742626FD11F8277DFD3DFFA827FD10F8264A7474FD1BC098%984A26FD0EF827A8FD39FF7D52FD0EF8207492BAB4BAB4BAB4BAB4BAB4BA%B4BAB4BAB4BAB4BABAFD11C0987426FD0CF852A8FD35FFA827FD0CF82044%92FD1BFCB4BAFD0FC0987420FD0AF8277DFD32FFA852FD0BF8264A9EB4FD%1FFCB4FD11C09E50FD0AF87DFD30FF52FD0BF82074C0BAFD23FCFD13C04A%FD09F852FD2DFFA8FD0BF84A98C0C0C0FD25FCFD13C09E74FD08F827FD2A%FFA827FD0AF84AFD05C0B4FD25FCFD15C09E20FD07F827FD28FF7D27FD09%F874FD07C0BAFD25FCFD17C04AFD07F827FD26FF52FD09F826FD09C0BAFD%25FCFD18C06EFD07F827FD23FFA8FD09F82698FD0BC0FD24FCB4FD19C098%26FD06F87DFD21FF7DFD09F84AFD0DC0BAFD23FCFD1BC098FD07F8A8FD1F%FF7DFD08F820FD10C0B4FD20FCB4FD1DC098FD06F827FD1DFFA827FD08F8%4AFD08C0C6C6FEC6C6FD05C0BAB4B4FD19FCB4B4BABAFD1FC074FD06F87D%FD1BFFA827FD07F82698FD08C0C6FD06FEFD08C0FD16FCBAFD25C04AFD06%F8FD1AFFA8FD08F84A98FD08C0C6FD08FEFD08C0FD14FCBAFD27C0FD06F8%27FD18FFA827FD07F874FD0AC0FD09FEC6FD07C0BAFD12FCB4FD28C09EFD%06F8A8FD16FF7DFD08F874FD0BC0FD09FEC6FD07C0B4FD12FCBAFD29C026%FD05F852FD15FF7DFD08F89EFD0BC0FD0BFEFD08C0FD12FCBAFD29C09EFD%06F8FD14FF7DFD08F89EFD0CC0C6FD09FEC6FD09C0FD10FCBAFD2BC020FD%05F852FD12FFA8FD07F820FD0EC0FD0BFEC6FD09C0BAB4FD0AFCB4BAFD2D%C098FD05F827FD11FFA8FD07F820FD0FC0FD0CFEFD0CC0BABAB4BAB4BABA%FD32C0FD06F8FD10FFA827FD06F820FD10C0FD0DFEC6C6FD42C04AFD05F8%7DFD0EFFA827FD06F820FD11C0FD10FEC6C6C0C6FD3DC098FD05F852FD0E%FF27FD06F820FD12C0FD17FEC6C6FD39C0FD05F827FD0DFF52FD07F8FD13%C0C6FD17FEC6C6FD38C0FD06F8FD0CFF7DFD07F8FD14C0C6FD1AFEFD16C0%FD0F98FD12C04AFD05F8FD0BFFA8FD07F89EFD15C0FD1AFEC6FD13C098FD%116E9898FD0FC04AFD05F8FD0BFFFD07F89EFD17C0FD1AFEC6FD11C098FD%146E98FD0EC074FD05F8FD0AFF27FD06F874FD19C0FD19FEC6FD11C0FD17%6EFD0DC04AFD05F8FD09FF7DFD06F84AFD1BC0FD19FEFD10C098FD186EFD%0CC050FD05F8FD08FFA8FD06F82698FD1CC0C6C6FD16FEC6FD0FC098FD18%6E98FD0BC020FD05F8FD08FF52FD05F82098FD22C0C6C0C6C6FD0FFEC6FD%0FC0FD1A6EFD0AC098FD05F827FD07FF7DFD06F84AFD28C0C6FD0DFEC6FD%0FC098FD196E98FD08C09826FD05F852FD07FFFD06F820FD0AC09E7A7A56%7A569E9EFD18C0C6FD0CFEC6FD0FC098FD1A6EFD08C026FD06F8A8FD06FF%52FD06F89EFD07C07A32FD0A10567AFD17C0FD0BFEC6FD10C0FD1A6EFD06%C07420FD06F827FD06FFA827FD05F874FD06C09E32FD0E10329EFD15C0FD%0BFEFD12C098FD186EFD05C04AFD08F8FD07FF52FD05F826FD06C09EFD12%109EFD14C0C6FD0AFEFD14C0744A4A444A444A444A4A744AFD0B6EC0C0C0%9E20FD08F8A8FD07FFFD06F874FD06C07AFD121056FD14C0C6FD0AFEFD12%C04A26FD0CF84AFD0A6EC0C074FD09F8A8FD07FF52FD05F820FD07C056FD%121056FD15C0FD09FEFD11C098FD0FF84AFD0A6EC074FD08F827A8FD08FF%27FD05F89EFD07C032FD13109EFD14C0C6FD07FEC6FD10C098FD10F84AFD%0A6E98FD08F852FD09FF7DFD05F826FD06C09E32FD15107AFD14C0C6FD05%FEC6FD10C074FD11F8FD0B6EFD07F8277DFD0AFFFD06F874C0C0C07A7A56%32FD171032567A7A9EFD11C0FEC6FEC6FD10C09EFD09F82727522727FD04%F844FD0A6EFD06F852FD0BFFA8FD06F8C0C0C032FD2010329EFD23C020FD%06F8277DFD09FF7D6FFD0A6EFD05F852FD0CFF52FD05F874C0C056FD2210%32FD22C074FD06F852FD0CFF75FD0A6EFD04F852FD0DFFFD06F89EC09EFD%24107AFD21C026FD05F852FD0DFF99FD0A6EFD04F8A8FD0CFFA8FD05F826%C0C09EFD2510FD21C0FD05F827A8FD0DFF75FD0A6EF8F8F852FD0DFF52FD%05F874C0C056FD2510FD20C04AFD05F852FD0EFF99FD0A6EF8F8F8A8FD0D%FF27FD05F8C0C0C07AFD2510FD20C04AFD05F8A8FD0EFF75FD0A6EF8F8F8%FD0DFFA8FD05F820C0C0C09EFD241032FD20C0FD06F8FD0FFF99FD0A6EF8%F827FD0DFFA8FD05F874FD04C07AFD221032FD21C0FD05F827FD0FFF75FD%0A6EF8F852FD0DFF52FD05F874FD05C09E32FD1F10569EFD21C0FD05F852%FD0FFF75FD0A6EF8F8F8FD0DFF52FD05F8FD08C09E5632FD19103256FD23%C09EFD05F852FD0FFF75FD0A6EF8F8F8FD0DFF27FD05F8FD0BC09E7A7A56%7A567A567A567A567A567A567A567A567A569E7AFD26C098FD05F87DFD0F%FF99FD0A6EF8F8F8A8FD0CFF27FD04F826FD49C098FD05F852FD0FFF75FD%0A6EF8F8F852FD0CFFFD05F84AFD4AC0FD05F852FD0FFF99FD0A6EFD04F8%A8FD0BFFFD05F84AFD4AC0FD05F827FD0FFF75FD0A6EFD04F852FD0BFFFD%05F874FD4AC0FD06F8FD0FFF99FD0A6EFD05F852FD0AFFFD05F84AFD4AC0%4AFD05F8A8FD0EFF75FD0A6EFD06F852FD09FFFD05F84AFD4AC06EFD05F8%27FD0EFF75FD0A6EFD07F852FD08FFFD05F84AFD4BC0FD06F8A8FD0DFF75%FD0A6E74FD07F827A8FD06FFFD05F874FD4BC04AFD05F827A8FD0CFF99FD%0A6EC074FD08F87DFD05FFFD05F84AFD4BC09EFD06F827A8FD0BFF75FD0A%6EC0C04AFD08F852FD04FFFD05F826FD4CC04AFD07F8277D7DFFA8A87DA8%7D5227FD0B6EC0C0C04AFD08F87DFFFFFF27FD04F826FD12C0C17553292A%FD0C08295376C1FD26C020FD11F84AFD0A6EFD04C098FD08F8A8FFFF27FD%05F8FD10C09E5307FD14082F75FD24C09EFD11F8FD0B6EFD06C020FD06F8%27FFFF52FD05F8FD0FC0992AFD180875FD24C09E20FD0FF844FD0A6EFD07%C074FD06F87DFF52FD05F874FD0EC053FD1A08FD26C04AFD0EF84AFD0A6E%FD08C04AFD06F8FFA8FD05F874FD0EC029FD1A089FFD26C09E4AFD0CF84A%FD0A6EFD09C0FD06F8A8A8FD05F826FD0EC052FD1A084CFD27C098986E6E%4A6E4A6E4AFD0F6E98FD08C04AFD05F87DFFFD05F826FD0FC02AFD1A0876%FD25C0FD196EFD09C074FD05F827FF52FD05F89EFD0EC09829FD1A082976%75C1FD20C0FD1A6EFD0AC0FD05F827FF7DFD05F86EFD11C09F7CFD1C0829%C1FD1CC098FD1A6EFD0AC020FD05F8FFA8FD05F826FD13C09F07FD1C089F%FD1BC098FD196E98FD0AC020FD05F8FFFF27FD05F8FD14C076FD1D08C1FD%0DC0C7C8C9C8C8FD08C0FD196E98FD0BC04AFD05F8FFFF52FD05F84AFD13%C09EFD1D0851FD0CC0CFFD05FFCFC1FD06C0FD196E98FD0BC04AFD05F8FF%FFFFFD05F820FD14C029FD1C0854FD0BC0FD09FFC8FD05C098FD176E98FD%0CC074FD05F8FFFFFF27FD05F874FD13C029FD1C0829FD0AC0C9FD0AFFFD%06C0FD166E98FD0DC04AFD05F8FFFFFF7DFD06F8FD13C052FD1C0853FD0A%C0CAFD0AFFC7FD06C0FD146E98FD0EC074FD05F8FD04FFFD06F84AFD13C0%07FD1A082A9EFD0AC0FD0BFFC1FD07C0FD116EBAFD10C026FD04F827FD04%FF7DFD05F820FD13C0C129FD180854FD0BC0C9FD0BFFCFFD0AC098C098C0%98C098C098FD16C020FD04F852FD04FFA827FD05F84AFD14C07553FD1408%299FFD0BC0C9FD0DFFC8FD27C074FD05F87DFD05FF7DFD06F898FD15C0C1%75762953292F2953292F2953292F295352A09EFD08C0C8C8C9C9FD11FFC8%C8FD24C0FD05F827FD07FFFD07F89EFD2EC0C1CFFD18FFC1FD21C026FD05%F852FD08FFFD06F820FD2DC0C1FD1BFFC1FD1FC074FD06F8FD09FF7DFD06%F826FD2CC0FD1CFFCFFD1EC098FD06F87DFD0AFF27FD06F84AFD2AC0C8FD%1DFFFD1DC09820FD05F827FD0BFFA8FD07F86EFD29C0C8FD1DFFFD1CC098%FD07F8A8FD0CFF7DFD07F874FD28C0C9FD1DFFFD1BC09826FD06F87DFD0E%FF52FD07F84AFD28C0FD1CFFCFFD1AC074FD07F852FD10FF52FD07F84AFD%27C0C8FD1BFFFD1AC06EFD07F827FD12FF27FD07F8209EFD26C0C1CFFD17%FFC9FD1AC026FD07F827FD14FF52FD08F89EFD27C0C8C9FD13FFC9C7FD1A%C020FD07F827FD16FF52FD08F874FD29C0C1C1C8C8C9C8C9C8C9C8C9C8C9%C8C8C1FD1CC074FD09F8FD18FF7DFD08F84A9EFD51C09826FD08F852FD1A%FF7DFD09F874FD4FC04AFD09F852FD1CFFA827FD08F826FD4CC09820FD08%F8277DFD1EFFA852FD09F874FD48C07426FD09F827A8FD21FF7DFD09F84A%98FD44C09E20FD0AF87DFD24FFA8FD0AF8269EFD40C07426FD0BF8A8FD27%FF52FD0AF8509EFD3CC074FD0BF8277DFD2AFFA827FD0AF84A98FD37C09E%4AFD0CF852A8FD2DFF7DFD0BF8266EFD33C06E26FD0CF852FD31FFA827FD%0CF8264A98FD2BC09E4A26FD0DF8527DFD34FFA852FD0DF826267498FD24%C09E4A26FD0EF852FD39FFA827FD11F8204A4A9874FD17C098984A4AFD11%F87DA8FD3CFFA852FD17F84A262620744A744A744A744A744A744A4A2626%FD13F8527DFD42FF5227FD37F82752FD48FF7D27FD31F8527DFD4EFF7D52%27FD2AF8527DFD55FFA8525227FD20F82752A8FD5EFFA87D7D5252FD0427%FD0EF82727277D52A8A8FD2EFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0 0 0 0 1 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 5) Pc0.0392 0.0118 0.1961 0 1 1 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 6) Pc0.0314 0.0118 0.3961 0 1 1 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 7) Pc0.0235 0.0118 0.6 0 1 1 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 8) Pc0.0314 0.0196 0.8078 0 1 1 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 9) Pc0.0314 0.0196 0.9137 0 1 1 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 10) Pc0.0275 0.1961 0.0039 0 1 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 11) Pc0.0196 0.1961 0.1098 0 1 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 12) Pc0.0275 0.1922 0.3333 0.0039 1 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 13) Pc0.0235 0.1961 0.5569 0 1 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 14) Pc0.0118 0.1961 0.7922 0 1 0.8 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 15) Pc0.0078 0.1961 0.9373 0 1 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 16) Pc0.0235 0.4078 0 0 1 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 17) Pc0.0196 0.4078 0.0392 0 1 0.6 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 18) Pc0.0157 0.4039 0.2471 0 1 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 19) Pc0.0196 0.4 0.498 0.0039 1 0.6 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 20) Pc0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 21) Pc0.0275 0.3922 0.9412 0.0039 1 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 22) Pc0.0078 0.6196 0 0 1 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 23) Pc0.0157 0.6157 0 0 1 0.4 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 24) Pc0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 25) Pc0.0039 0.6078 0.4235 0 1 0.4 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 26) Pc0.0118 0.6 0.7177 0 1 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 27) Pc0.0196 0.5961 0.9137 0 1 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 28) Pc0.0039 0.8392 0 0 1 0.2 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 29) Pc0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 30) Pc0.0078 0.8196 0.3137 0 1 0.2 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 31) Pc0.0196 0.8118 0.6588 0 1 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 32) Pc0.0235 0.8078 0.9176 0 1 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 33) Pc0.0078 0.9529 0 0 1 0 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 34) Pc0.0039 0.9333 0 0 1 0 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 35) Pc0.0039 0.949 0.0078 0 1 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 36) Pc0 0.9686 0.2157 0 1 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 37) Pc0.0078 0.9647 0.6078 0 1 0 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 38) Pc0.0118 0.9608 0.9137 0 1 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 39) Pc0.1882 0.0039 0.0235 0 0.8 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 40) Pc0.2039 0 0.1961 0 0.8 1 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 41) Pc0.2039 0 0.4157 0 0.8 1 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 42) Pc0.2039 0 0.6314 0 0.8 1 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 43) Pc0.2039 0 0.851 0 0.8 1 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 44) Pc0.2 0 0.9529 0 0.8 1 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 45) Pc0.1882 0.1451 0 0 0.8 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 46) Pc0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 47) Pc0.1882 0.1216 0.3372 0.0157 0.8 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 48) Pc0.1922 0.1176 0.5765 0.0118 0.8 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 49) Pc0.1882 0.1137 0.8078 0.0157 0.8 0.8 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 50) Pc0.1882 0.1098 0.9569 0.0157 0.8 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 51) Pc0.1804 0.3647 0 0 0.8 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 53) Pc0.1882 0.3608 0.0118 0 0.8 0.6 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 54) Pc0.1686 0.3412 0.2353 0.0314 0.8 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 55) Pc0.1608 0.3294 0.498 0.0431 0.8 0.6 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 56) Pc0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 57) Pc0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 58) Pc0.1686 0.5882 0 0 0.8 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 59) Pc0.1765 0.5843 0.0039 0 0.8 0.4 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 60) Pc0.1686 0.5726 0.1255 0.0196 0.8 0.4 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 61) Pc0.1569 0.5608 0.4157 0.0392 0.8 0.4 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 62) Pc0.1608 0.5529 0.7216 0.0392 0.8 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 63) Pc0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 64) Pc0.149 0.8157 0 0 0.8 0.2 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 65) Pc0.1608 0.8157 0 0 0.8 0.2 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 66) Pc0.1725 0.8 0.0157 0 0.8 0.2 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 67) Pc0.149 0.7922 0.302 0.0392 0.8 0.2 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 68) Pc0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 69) Pc0.1647 0.7804 0.9529 0.0431 0.8 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 70) Pc0.1216 0.9333 0 0 0.8 0 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 71) Pc0.1412 0.9608 0 0 0.8 0 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 72) Pc0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 73) Pc0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 74) Pc0.1529 0.9412 0.6039 0.0392 0.8 0 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 75) Pc0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 76) Pc0.3843 0 0.0353 0 0.6 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 77) Pc0.4078 0 0.2078 0 0.6 1 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 78) Pc0.4039 0 0.4353 0 0.6 1 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 79) Pc0.4039 0 0.6667 0 0.6 1 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 80) Pc0.4039 0 0.8863 0 0.6 1 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 81) Pc0.4039 0 0.9922 0 0.6 1 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 82) Pc0.3922 0.0745 0 0 0.6 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 83) Pc0.4039 0.0549 0.1098 0.0039 0.6 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 84) Pc0.4 0.051 0.3608 0.0039 0.6 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 85) Pc0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 86) Pc0.4 0.0353 0.8627 0.0039 0.6 0.8 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 87) Pc0.4 0.0353 0.9608 0.0039 0.6 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 88) Pc0.3922 0.3098 0 0 0.6 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 89) Pc0.4039 0.298 0.0314 0.0039 0.6 0.6 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 90) Pc0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 91) Pc0.349 0.2392 0.5059 0.0784 0.6 0.6 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 92) Pc0.3529 0.2353 0.7961 0.0706 0.6 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 93) Pc0.3569 0.2274 0.9961 0.0667 0.6 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 94) Pc0.4 0.549 0 0 0.6 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 95) Pc0.4 0.5412 0 0 0.6 0.4 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 96) Pc0.3843 0.5255 0.1216 0.0196 0.6 0.4 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 97) Pc0.302 0.4745 0.3765 0.1373 0.6 0.4 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 98) Pc0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 99) Pc0.2863 0.451 0.9412 0.1608 0.6 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 100) Pc0.3843 0.8 0 0 0.6 0.2 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 101) Pc0.3961 0.7843 0 0 0.6 0.2 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 102) Pc0.3922 0.7804 0.0157 0 0.6 0.2 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 103) Pc0.3176 0.7529 0.2627 0.1098 0.6 0.2 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 104) Pc0.2823 0.7333 0.6235 0.1608 0.6 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 105) Pc0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 106) Pc0.3882 0.9765 0 0 0.6 0 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 107) Pc0.3922 0.9451 0 0 0.6 0 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 108) Pc0.3961 0.9412 0 0 0.6 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 109) Pc0.3608 0.9608 0.1725 0.051 0.6 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 110) Pc0.2784 0.9412 0.5412 0.1608 0.6 0 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 111) Pc0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 112) Pc0.5882 0 0.0235 0 0.4 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 113) Pc0.6039 0 0.2118 0 0.4 1 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 114) Pc0.6078 0 0.4745 0 0.4 1 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 115) Pc0.6039 0 0.7255 0 0.4 1 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 116) Pc0.6078 0 0.949 0 0.4 1 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 117) Pc0.6078 0 0.9922 0 0.4 1 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 118) Pc0.6118 0.0078 0 0 0.4 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 119) Pc0.6078 0.0118 0.1059 0 0.4 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 120) Pc0.6078 0.0078 0.3843 0 0.4 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 121) Pc0.6 0 0.6588 0 0.4 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 122) Pc0.6078 0 0.9137 0 0.4 0.8 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 123) Pc0.6039 0 0.9961 0 0.4 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 124) Pc0.6118 0.2431 0 0 0.4 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 125) Pc0.6157 0.2235 0.0314 0.0039 0.4 0.6 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 126) Pc0.5922 0.1843 0.2471 0.0392 0.4 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 127) Pc0.5882 0.1686 0.5569 0.0392 0.4 0.6 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 128) Pc0.5882 0.1529 0.8627 0.0314 0.4 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 129) Pc0.5922 0.1412 0.9804 0.0275 0.4 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 130) Pc0.6196 0.5059 0 0 0.4 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 131) Pc0.6196 0.4941 0 0 0.4 0.4 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 132) Pc0.6039 0.4667 0.1176 0.0314 0.4 0.4 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 133) Pc0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 134) Pc0.4941 0.3569 0.7294 0.2078 0.4 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 135) Pc0.502 0.349 0.9882 0.1961 0.4 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 136) Pc0.6392 0.7686 0 0 0.4 0.2 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 137) Pc0.6275 0.7608 0 0 0.4 0.2 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 138) Pc0.6196 0.749 0.0314 0.0039 0.4 0.2 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 139) Pc0.5529 0.7137 0.2588 0.1216 0.4 0.2 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 140) Pc0.3843 0.6353 0.5451 0.3529 0.4 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 141) Pc0.3765 0.6196 0.9412 0.3608 0.4 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 142) Pc0.6667 0.9529 0 0 0.4 0 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 143) Pc0.6471 0.9412 0 0 0.4 0 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 144) Pc0.6314 0.9608 0 0 0.4 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 145) Pc0.5961 0.9451 0.1765 0.051 0.4 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 146) Pc0.3686 0.9608 0.3882 0.3608 0.4 0 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 147) Pc0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 148) Pc0.7686 0 0.0078 0 0.2 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 149) Pc0.8196 0 0.2353 0 0.2 1 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 150) Pc0.7961 0 0.5373 0 0.2 1 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 151) Pc0.8196 0 0.8392 0 0.2 1 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 152) Pc0.8 0 1 0 0.2 1 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 153) Pc0.8196 0 1 0 0.2 1 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 154) Pc0.8275 0.0039 0 0 0.2 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 155) Pc0.8196 0 0.1059 0 0.2 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 156) Pc0.8039 0 0.4235 0 0.2 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 157) Pc0.8118 0 0.7373 0 0.2 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 158) Pc0.8196 0 0.9686 0 0.2 0.8 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 159) Pc0.8314 0 1 0 0.2 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 160) Pc0.8078 0.1725 0 0 0.2 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 161) Pc0.8118 0.1451 0.0078 0 0.2 0.6 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 162) Pc0.8157 0.098 0.2784 0.0118 0.2 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 163) Pc0.8157 0.0706 0.6235 0.0118 0.2 0.6 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 164) Pc0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 165) Pc0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 166) Pc0.8275 0.4588 0 0 0.2 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 167) Pc0.8431 0.4353 0 0 0.2 0.4 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 168) Pc0.8314 0.3961 0.1216 0.0235 0.2 0.4 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 169) Pc0.7804 0.3059 0.4118 0.1529 0.2 0.4 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 170) Pc0.7726 0.2902 0.8157 0.1373 0.2 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 171) Pc0.7765 0.2706 0.9922 0.1216 0.2 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 172) Pc0.8588 0.7373 0 0 0.2 0.2 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 173) Pc0.8588 0.7294 0 0 0.2 0.2 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 174) Pc0.851 0.7137 0.0235 0.0039 0.2 0.2 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 175) Pc0.8 0.6706 0.2627 0.1255 0.2 0.2 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 176) Pc0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 177) Pc0.6235 0.4745 0.9922 0.4627 0.2 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 178) Pc0.9059 0.9294 0 0 0.2 0 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 179) Pc0.8863 0.9765 0 0 0.2 0 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 180) Pc0.8667 0.9412 0 0 0.2 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 181) Pc0.8353 0.9686 0.1608 0.0431 0.2 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 182) Pc0.702 0.9529 0.3765 0.3725 0.2 0 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 183) Pc0.4431 0.9569 0.8588 0.6431 0.2 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 184) Pc0.8353 0 0 0 0 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 185) Pc0.9137 0 0.251 0 0 1 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 186) Pc0.8863 0 0.5804 0 0 1 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 187) Pc0.902 0 0.8824 0 0 1 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 188) Pc0.8941 0 1 0 0 1 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 189) Pc0.9255 0 1 0 0 1 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 190) Pc0.9216 0 0 0 0 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 191) Pc0.9176 0 0.1059 0 0 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 192) Pc0.902 0 0.4549 0 0 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 193) Pc0.898 0 0.7882 0 0 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 194) Pc0.9373 0 0.9882 0 0 0.8 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 195) Pc0.9569 0 1 0 0 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 196) Pc0.8941 0.1373 0 0 0 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 197) Pc0.902 0.1059 0 0 0 0.6 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 198) Pc0.9137 0.0627 0.298 0.0078 0 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 199) Pc0.9176 0.0314 0.6588 0.0039 0 0.6 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 200) Pc0.9608 0.0078 0.9843 0 0 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 201) Pc0.9373 0 1 0 0 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 202) Pc0.9176 0.4353 0 0 0 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 203) Pc0.9412 0.4039 0 0 0 0.4 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 204) Pc0.9569 0.3451 0.1255 0.0275 0 0.4 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 205) Pc0.9333 0.2588 0.4627 0.1137 0 0.4 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 206) Pc0.9529 0.2235 0.8902 0.0824 0 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 207) Pc0.9333 0.2078 1 0.0745 0 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 208) Pc0.9373 0.7255 0 0 0 0.2 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 209) Pc0.9451 0.7098 0 0 0 0.2 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 210) Pc0.9569 0.6902 0.0314 0.0039 0 0.2 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 211) Pc0.9608 0.6235 0.2627 0.1373 0 0.2 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 212) Pc0.9294 0.4235 0.5726 0.4235 0 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 213) Pc0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 214) Pc0.9569 0.9294 0 0 0 0 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 215) Pc0.9608 0.9608 0 0 0 0 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 216) Pc0.9647 0.9451 0 0 0 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 217) Pc0.9725 0.9569 0.1569 0.0471 0 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 218) Pc0.9647 0.9529 0.3725 0.3647 0 0 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 219) Pc0 0 0 1 0 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 220) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0.0275 0.3922 0.9412 0.0039 1 0.6 0 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR264.5 442 m264.5 440 265 437.5 267.5 435.5 c270 433.5 272 432.5 277 432.5 c282 432.5 287.5 436 287.5 438.5 c287.5 441 286.5 441 286 441.5 c285.5 442 285 442.5 285 443.5 c285 444.5 285.4688 445.1284 286 445.5 c286.6963 445.9863 287.5 446.3657 287.5 447.5 c287.5 449.5 285.9995 453.5 278.9995 453.5 c275.9995 453.5 272.5 453 269 450 c265.5 447 264.5 444 264.5 442 cf0.0118 0.9608 0.9137 0 1 0 0 Xa275.5 452.5 m274.3999 452.5 273.5 452.0498 273.5 451.5 c273.5 450.9502 273.8374 450.5 274.25 450.5 c274.6626 450.5 275 450.1626 275 449.75 c275 449.3374 275.7876 449 276.75 449 c277.7124 449 278.5 449.3374 278.5 449.75 c278.5 450.1626 278.9502 450.5 279.5 450.5 c280.0498 450.5 280.5 450.9502 280.5 451.5 c280.5 452.0498 279.6001 452.5 278.5 452.5 c275.5 452.5 lf0.0314 0.0196 0.9137 0 1 1 0 Xa272.5 450.5 m271.9502 450.5 271.5 449.7124 271.5 448.75 c271.5 447.7876 272.2876 447 273.25 447 c274.2124 447 275 446.5498 275 446 c275 445.4502 275.4502 445 276 445 c276.5498 445 277 445.7876 277 446.75 c277 447.7124 276.2124 448.5 275.25 448.5 c274.2876 448.5 273.5 448.9502 273.5 449.5 c273.5 450.0498 273.0498 450.5 272.5 450.5 cf0.9373 0 1 0 0 0.6 0 Xa269.25 446.5 m268.2876 446.5 267.5 446.1626 267.5 445.75 c267.5 445.3374 267.1626 445 266.75 445 c266.3374 445 266 444.5498 266 444 c266 443.4502 266.8999 443 268 443 c271 443 l272.1001 443 273 443.4502 273 444 c273 444.5498 272.5498 445 272 445 c271.4502 445 271 445.3374 271 445.75 c271 446.1626 270.2124 446.5 269.25 446.5 cf0.9451 0.7098 0 0 0 0.2 0.8 Xa270 441 m268.8999 441 268 440.6626 268 440.25 c268 439.8374 268.3374 439.5 268.75 439.5 c269.1626 439.5 269.5 439.0498 269.5 438.5 c269.5 437.9502 270.3999 437.5 271.5 437.5 c273 437.5 l274.1001 437.5 275 437.9502 275 438.5 c275 439.0498 274.5498 439.5 274 439.5 c273.4502 439.5 273 439.8374 273 440.25 c273 440.6626 272.1001 441 271 441 c270 441 lf0 0 0 0 1 1 1 Xa278 439 m277.4502 439 277 438.6626 277 438.25 c277 437.8374 276.5498 437.5 276 437.5 c275.4502 437.5 275 437.0498 275 436.5 c275 435.9502 275.8999 435.5 277 435.5 c278.5 435.5 l279.6001 435.5 280.5 435.9502 280.5 436.5 c280.5 437.0498 280.1626 437.5 279.75 437.5 c279.3374 437.5 279 437.8374 279 438.25 c279 438.6626 278.5498 439 278 439 cf0 R0 0 0 1 0 0 0 XA264.5 442 m264.5 440 265 437.5 267.5 435.5 c270 433.5 272 432.5 277 432.5 c282 432.5 287.5 436 287.5 438.5 c287.5 441 286.5 441 286 441.5 c285.5 442 285 442.5 285 443.5 c285 444.5 285.4688 445.1284 286 445.5 c286.6963 445.9863 287.5 446.3657 287.5 447.5 c287.5 449.5 285.9995 453.5 278.9995 453.5 c275.9995 453.5 272.5 453 269 450 c265.5 447 264.5 444 264.5 442 cs1 Ap0 O0 0 0 0 1 1 1 Xa284.5 443 m284.5 441.3433 284.5 440.5 281.5 440.5 c280.3955 440.5 279.5 441.3433 279.5 443 c279.5 444.6567 280.3955 445.5 281.5 445.5 c284.5 445.5 284.5 444.6567 284.5 443 cb0 Ap0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 XA1 J 1 j 2 w281 447 m283 447 l283.5498 447 284 446.5498 284 446 c284 440 l284 439.4502 283.5498 439 283 439 c281 439 LSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF