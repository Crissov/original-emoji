%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (702\203C\203M\203\212\203X\215\221\212\370.ai)%%CreationDate: (7/24/03) (10:03 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 237 471.8887 12 1009 717 26 0 0 7 43 0 0%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 11986 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3FF827527DFD3EFFFD43F8277DFD3BFFFD45F827A8FD39FFFD47%F87DFD38FFFD48F852FD37FFFD05F8204476527D527D527D5253FD2A0128%5252522727FD09F852FD36FFFD05F820FCFCC3FD08FF2AFD280354FD05A8%6820FD08F87DFD35FFFD05F820FCFCFCBCCAFD07FF54FD270354FD05A868%684420FD07F87DFD34FFFD05F820FD04FCB5CAFD07FFA92BFD250354FD05%A8FD046844FD07F852A8FD32FFFD05F820FD06FCBCFD07FFA955FD240354%FD05A8FD056820FD08F8275252A87DA87DA8A8FD29FFFD05F820FD07FCB5%FD08FFA9FD230354FD05A8FD066820FD12F827527DFD24FFFD05F827FD09%FCCAFD07FFA92AFD210354FD05A8FD076820FD15F82752FD21FFFD05F827%FFB5FD08FCC3FD08FF54FD20037EFD05A8FD086844FD17F87DFD1FFFFD05%F827FFFFB5FD08FCBCCAFD07FF7E2AFD1E0354FD05A8FD0A68FD17F827A8%FD1DFFFD05F827FFFFFFC3FD08FCB5CAFD07FFA92BFD1D0354FD05A8FD0A%686FA87D27FD15F87DFD1CFFFD05F80054FFFFFFCAB5FD08FCBCFD08FF55%FD1C0354FD05A8FD0A6845FD04FFA80202010100010100FD0CF87DFD1BFF%FD05F800032AFD04FFBCFD08FCB5FD08FFA9FD1B0354FD05A8FD0A6870FD%05FFFD0B030000FD08F87DFD1AFFFD05F8000303037FFFFFFFC3FD09FCCA%FD08FF2AFD190354FD05A8FD0A6845FD05FFFD0A0302010101FD08F8A8FD%19FFFD05F800FD040355FFFFFFCAB5FD08FCC3FD08FF54FD180354FD05A8%FD0A6870FD05FFFD0B03FD040100FD06F852FD19FFFD05F800FD05032AA8%FFFFFFB5FD08FCB5CAFD07FF7EFD170354FD05A8FD0A6844FD05FFFD0A03%02FD0501FD07F8A8FD18FFFD05F800FD06032A7EFFFFFFC3B5FD07FCB5CA%FD08FF55FD15037EFD05A8FD0A6870FD05FFFD0B03FD0601FD06F827FD18%FFFD05F800FD08032AFFFFFFCAB5FD08FCBCFD08FF7FFD140354FD05A8FD%0A6845FD05FFFD0A0302FD0701FD06F87DFD17FFFD05F800FD0A03FFFFFF%CABCFD08FCB5FD08FFA9FD130354FD05A8FD0A686FFD05FFFD0B03FD0701%00FD05F852FD17FFFD05F800FD0B037FFFFFFFC3FD09FCC3FD08FF2AFD11%0354FD05A8FD0A6845FD05FFFD0A0302FD070100FD06F87DFD16FFFD05F8%00FD0C0355FD04FFB5FD08FCC3FD08FF54FD100354FD05A8FD0A6870FD05%FFFD0B03FD080100FD06F8A8FD15FFFD05F800FD0D032AA8FFFFFFBCFD08%FCB5CAFD07FFA82AFD0E0354FD05A8FD0A6845FD05FFFD0A0302FD0901FD%07F87DFD14FFFD05F800FD0F037EFFFFFFC3B5FD07FCB5C3FD08FF55FD0D%0354FD05A8FD0A6870FD05FFFD0B03FD090100FD07F827527D527D527D52%7D527D527D527D527D527D52FD05F800FD10032AFFFFFFCAB5FD08FCBCFD%08FF7FFD0C0354FD05A8FD0A6844FD05FFFD0A0302FD0A0100FD1FF800FD%1203A9FFFFFFBCFD08FCB5FD09FF2AFD0A037EFD05A8FD0A6870FD05FFFD%0B03FD0B0100FD1EF800FD13037FFFFFFFC3FD09FCC3FD08FF2AFD090354%FD05A8FD0A6845FD05FFFD0A0302FD0B010000FD1DF800FD140355FD04FF%B5FD08FCBCFD08FF7EFD080354FD05A8FD0A686FFD05FFFD0B03FD0D0100%FD1CF800FD16037EFFFFFFBCFD08FCB5CAFD07FFA82AFD060354FD05A8FD%0A6845FD05FFFD0A0302FD0F010000FD19F800FD170354FFFFFFCAB5FD07%FCB5C3FD08FF55FD050354FD05A8FD0A6870FD05FFFD0B03FD0F01020303%03557EFD05FFBCFD04FC44FD0AF800FD18032AFFFFFFCAB5FD08FCB5FD08%FF7FFD040354FD05A8FD0A6845FD05FFFD0A0302FD1001557EFD06FFC3FD%06FC20FD0AF800FD1A03A9FFFFFFC3FD09FCCAFD08FF2A030354FD05A8FD%0A6870FD05FFFD0B03FD070128282953537DA8A8A8FD06FFC3B5FD06FCB5%52FD0AF800FD1B0354FFFFFFCAFD09FCC3FD08FF540354FD05A8FD0A6844%FD05FFFD0A03020128537DFD0BA87DFFFFFFC3BCFD08FCBCFF27FD0AF800%FD1C032BA9FFFFFFB5FD08FCBCFD08FF7E7FFD05A8FD0A6870FD05FFFD09%032AA9FD10A8C3BCFD09FCB5CAFFFF52FD0AF800FD1D032A7EFFFFFFBCFD%08FCB5CAFD07FFFD06A8FD0A6845FD05FFFD07032BA8FF7EFD09A87DA16F%70446844FD0AFCC3FD04FF27FD0AF800FD1F0354FFFFFFCAB5FD08FCC3FD%07FFFD05A8FD0A686FFD05FFFD06037FFFFFFFA8A8A16F6F686FFD096869%FD07FCB5C3FD06FF27FD0AF800FD20032AA9FFFFCABCFD08FCB5FD05FFFD%06A8FD0A6845FD05FFFD0503A9FD04FFFD106844FD05FCB5CAFD08FF27FD%0AF827FD35FFFD05A8FD0A6870FD05FF03030354FD04FFBCFC8DFD0F686F%FCBCBCCAFD0AFFA928FD0AF827FD34FFFD06A8FD0A6845FD05FF030354FF%FFFFC3FCFCFCFD0D686F6FA176FD0DFF540300FD0AF827FD35FFFD05A8FD%0A6870FD05FF0354FFFFFFBCFD04FC8D686868706F7676A1A1FD07A8FD0A%FFA97F03030300FD0AF827FD34FFFD06A8FD0A6844FD05FF54FFFFFFB5FD%05FC686F76FD0DA87DFD08FFA92AFD0503FD0BF827FD35FFFD05A8FD0A68%70FD08FFBCFD05FCB5CBFD10A8FD05FF7F542BFD070300FD0AF820FD34B5%688C688C6F93FD0A6845FD07FFB5FD05FCBCFF7EFD0FA87DA97E552AFD0B%0300FD0AF820FD34FC8CFD0F686FFD06FFBCFD05FCC3FFFFFD09A87D7E7D%5353292802FD0F0300FD0AF820FD34FC8CFD0F6869FD05FFC3FD05FCC3FF%FFFF7EA8A8A87D53FD0B01FD0F0300FD0AF820FD34FC8CFD0F689AFD05FF%FD05FCC3FD04FFA9A8A829FD0C0102FD0F0300FD0AF820FD34FC8CFD0F68%6FFD05FFBCB5B5B5BCFD05FF7E7EFD0F01FD0F0300FD0AF820FD34FC8CFD%0F689AFD10FF5328FD0D0102FD0F0300FD0AF820FD34FCFD10686FFD0FFF%FD04A828FD0C01FD0F03FD0BF820FD34FC8CFD0F689AFD10FFFD05A853FD%090102FD0F0300FD0AF820FD34FC8CFD1068C3FD0EFFFD07A87DFD0901FD%0F0300FD0AF820FD34FC8CFD0F688CFCB5BCC3CAFD0BFFFD07A87EFD0701%02FD0F0300FD0AF820FD34FC8CFD1068FD08FCFD04B5BCBCC3A1FD08A853%FD0701FD0F0300FD0AF827FD35CA9AC39A93FD0B688CFD0FFC8C68939AFD%06A854FD050102FD0F0300FD0AF827FD34FFFD06A8FD0B68FD0FFC8CFD04%689AFD04A87DFD0601FD0F0300FD0AF827FD35FFFD05A8FD0A688CFD0FFC%8CFD056893FD04A8FD050102FD0F0300FD0AF827FD34FFFD06A8FD0B68FD%0FFCFD086876A8A8A8FD0501FD0F03FD0BF827FD35FFFD05A8FD0A688CFD%0FFC8CFD076893A8A8A85401010102FD0F0300FD0AF827547F547F547F54%7F547F547F547F547F547F547F547F547F547F547F547F547F547FA8FD07%FFCAC3BCC3BCC3BCC3BCC3FD06A8FD0B68FD0FFC8CFD086893A8A87EFD04%01FD0F0300FD0AF800FD20032AA9FD07FFBCFD08FCBCFFFFFD05A8FD0A68%8CFD0FFC8CFD0968CAA8A853010102FD0F0300FD0AF800FD1F0354A9FD07%FFB5FD08FCC3FFFFFD06A8FD0B68FD0FFC8CFD0A68A8A8A8010101FD0F03%00FD0AF800FD1E037FFD08FFB5FD08FCCAFFFFFF7FFD05A8FD0A6893B5FD%0EFC8CFD0A689AA8A8FF2802FD0F0300FD0AF800FD1D037FFD07FFCAFD09%FCFFFFFFA82A54FD05A8FD0A686FFFCAC3B5B5FD0AFC8CFD0A688CFD04A8%7DFD0F0300FD0AF800FD1C03FD08FFC3FD08FCBCFFFFFF7F2A0354FD05A8%FD0A689AFD08FFCACAC3CAC3C3B593FD0B68C3A8A8A8FFFFA9547F547F54%7F547F547F547F5428FD0AF800FD1A032AFD07FFCABCFD08FCC3FFFFFF54%03030354FD05A8FD0A686FFD0FFFA8A86FFD0A68FD04A8FD0FFF27FD0AF8%00FD190354FD07FFCAB5FD07FCB5CAFFFFFF2AFD04037EFD05A8FD0A689A%FD10FFA8A8A8BCFD08688CA8A8FD10FF52FD0AF800FD18037EFD07FFC3FD%08FCB5CAFFFFA92AFD050354FD05A8FD0A6869FD0FFFFD06A8FD0968A8A8%FD0FFF27FD0AF800FD16032BA9FD07FFC3FD08FCBCFFFFFFA9FD070354FD%05A8FD0A686FFD10FFFD06A893FD0868FD10FF27FD0AF800FD15032AA8FD%07FFB5FD08FCC3FFFFFF7FFD080354FD05A8FD0A6845FD09FFC3C3BCCAC3%FFFD08A8FD08688CBCC3CAC3CAC3CAC3CAC3CAC3CAC3CA20FD0AF800FD14%037FFD08FFB5FD08FCCAFFFFFF55FD090354FD05A8FD0A6870FD0AFFFD04%FCC3FFA8FFFD06A8FD07688CFD0FFC44FD0AF800FD13037FFD07FFCAFD08%FCB5CAFFFFA92AFD0A0354FD05A8FD0A6845FD0AFFFD04FCBC7EA828537E%FD04A8A1FD06688CFD0FFC20FD0AF800FD1203A9FD07FFC3FD08FCBCFFFF%FF7E2AFD0B0354FD05A8FD0A6870FD0AFFBCFD04FCA9A87E010128A9A8A8%A893FD05688CFD0FFC44FD0AF800FD1103FD08FFBCFD08FCBCFFFFFF54FD%0D0354FD05A8FD0A6844FD05FF7EFD04FFC3FD04FC7DA8A8FD0401A8A8A8%9AFD0668FD0FFC20FD0AF800FD0F0354FD08FFB5FD07FCB5CAFFFFFF54FD%0E037EFD05A8FD0A6870FD05FF55FD05FFFD04FCCAA8A829FD0401FFA8A8%6FFD04688CFD0FFC44FD0AF800FD0E037EFD07FFCAFD08FCB5CAFFFFFF2A%FD0F0354FD05A8FD0A6845FD05FF03FD05FFB5FCFCFC68A8A87DFD0501A8%A8A8FD04688CFD0FFC20FD0AF800FD0C032AA9FD07FFC3FD08FCBCFFFFFF%A9FD110354FD05A8FD0A686FFD05FF037FFD04FFC3FCFCFC937DA8A828FD%0501A8A8BC6868688CFD0FFC20FD0AF800FD0B032AA9FD07FFB5FD08FCC3%FFFFFF7FFD120354FD05A8FD0A6845FD05FF0355FD05FFFCFCFC686FA8A8%29FD05017DA8A88C68688CFD0FFC20FD0AF800FD0A0355FD08FFB5FD08FC%CAFFFFFF55FD130354FD05A8FD0A6870FD05FF0303FD05FFBCFCFC8D68A8%A8A8FD050154A8A8A893688CFD0FFC44FD0AF800FD09037FFD07FFCAFD09%FCCAFFFFA82AFD140354FD05A8FD0A6845FD05FF03037EFD04FFCAFCFC68%686FA8A829FD0501FD04A8938CFD0FFC20FD0AF800FD0803FD08FFC3FD08%FCB5FFFFFFA92AFD150354FD05A8FD0A6870FD05FF030355FD05FFB5FC8D%6869A8A87DFD0601FD04A8FFC3BCB5BCB5B5B5BCB5B5B5BCB5B5B54BFD0A%F800FD06032AA9FD07FFBCFD08FCBCFFFFFF54FD170354FD05A8FD0A6844%FD05FF030303FD05FFBCFC686868A1A8A8FD060129FD04A8FD0FFF27FD0A%F800FD050354FD08FFBCFD07FCB5C3FFFFFF54FD18037EFD05A8FD0A6870%FD05FF0303037FFD05FFFC8D686868A8A87EFD0601A8A8A8FD10FF52FD0A%F800FD040354FD07FFCAB5FD07FCB5CAFFFFFF2AFD190354FD05A8FD0A68%45FD05FF0303032AFD05FFC3FD04687DA8A828FD050128A8A8A8FD0FFF27%FD0AF80003032AA9FD07FFC3B5FD07FCBCCAFFFFA9FD1B0354FD05A8FD0A%686FFD05FFFD0403A9FD04FFCA8D68686869A8A87DFD060153A8FD10FF27%FD0AF800032AA8FD07FFBCFD08FCC3FFFFFF7FFD1C0354FD05A8FD0A6845%FD05FFFD04032AFD05FFFD05689AA8A828FD070128A9FD0EFF27FD0AF800%55FD08FFB5FD08FCCAFFFFFF55FD1D0354FD05A8FD0A6870FD05FFFD0503%A9FD04FFA9FD0568A8A8A8FD070102FD0F0300FD0AF827FD07FFCAB5FD08%FCCAFFFFA92AFD1E0354FD05A8FD0A6845FD05FFFD050355FD04FF7E9AFD%04686FA8A87EFD0701FD0F0300FD0AF827FD06FFCAFD08FCB5FFFFFFA92A%FD1F0354FD05A8FD0A6870FD05FFFD0603FD04FFA9A86FFD046870A8A8A8%29FD040102FD0F0300FD0AF827FD05FFC3FD08FCBCFFFFFF7EFD210354FD%05A8FD0A6844FD05FFFD06032AFFFFFF7EA87DFD05686FA8A8A87D530101%01FD0F03FD0BF827FD04FFBCFD07FCB5C3FFFFFF54FD22037EFD05A8FD0A%6870FD05FFFD0703A9FFFFFFA8A876FD05686FFD05A82802FD0F0300FD0A%F827FFFFCAB5FD07FCB5CAFFFFFF2AFD230354FD05A8FD0A6845FD05FFFD%07032AA9FF7EA8A8A86FFD06686F7DA8A8A8532AFD0E0300FD0AF827FFC3%B5FD07FCBCFD04FF2AFD240354FD05A8FD0A686FFD05FFFD08037FFFFD05%A86FFD07686FA8A8A8FF55FD0D0300FD0AF827BCFD08FCBCFFFFFF7FFD26%03547DFD04A8FD0A6845FD05FFFD0903A97EFD05A86FFD08689A7DFFFF7F%FD0C0300FD44F8272044FD086870FD05FFFD0A03A9FD06A8A16FFD07686F%CAFFFF7FFD0B0300FD48F82020FD056845FD05FFFD0A0302FD09A86FFD05%6844FCCAFFFF7FFD0A0300FD4BF8FD046870FD05FFFD0B0328FD09A8A16F%68686869FCB5CAFFFF7FFD090300FD4CF844686844FD05FFFD0A03020101%7EFD09A89A686844FCFCFCCAFFFF54FD0803FD4EF8206870FD05FFFD0B03%0101017EFD0AA86869FCFCFCB5FFFFFF2BFD070300FD05F8527D527D527D%527D527D527D527D527D527D527D527D527D527D527D527D527D527D527D%527D527D527D527D527D527D527D527D527D527D527D527D52522727FD09%F82045FD05FFFD0A0302FD04012853FD08A8A144FD04FCBCFFFF7EFD0703%00FD05F8FD41FF5227FD07F84BFD05FFFD0B03FD07017EFD08A8FD05FCCA%FFFF2AFD060300FD05F8FD42FFA852FD07F87DFD04FFFD0A0302FD080128%7DFD05A87DCAFD05FCFFFFA9FD060300FD05F8FD44FF52FD07F852A8FFFF%FD0B03FD0A0153FD05A8FFC3FD04FCC3FFFF2BFD050300FD05F8FD45FF52%FD08F8275201FD060203030302FD0B0128A8A8A87DFFCAFD04FCB5FFFF54%FD050300FD05F8FD46FF52FD13F80100FD0B0153A8A8A8FFFFBCFD04FCFF%FFFFFD050300FD05F8FD47FF52FD16F800FD09017DA87DFFFFCAFD04FCBC%FFFF54FD0403FD06F8FD48FF7DFD17F800FD070129A8A8FFFFFFBCFCFCFC%B5FFFFA9FD040300FD05F8FD49FFA827FD17F800FD06017E7DFFFFFFC3FD%04FCBCFFFF5403030300FD05F8FD4BFFA87D27FD15F800FD050153A8FD04%FFB5FD04FCCAFFFF2A030300FD05F8FD4FFFA87DA87D52527D525227FD0B%F800FD05017DFD04FFCAFD05FCFFFFA9030300FD05F8FD5AFFA87D27FD08%F800FD040154FD05FFBCFD04FCBCFFFFA90300FD05F8FD5DFFA827FD07F8%00FD0401FD05FFCAFD05FCC3FFFF7F00FD05F8FD5FFF52FD06F800010101%027EFD05FFC3FD04FCB5CAFFFF28FD05F8FD60FF27FD06F8FD040103A9FD%05FFB5FD05FCCAFF27FD05F8FD61FF27FD06F80101020355FD06FFB5FD04%FCB5CA52FD05F8FD61FFA8FD06F80001010303A9FD06FFFD06FC27FD05F8%FD62FF52FD05F8000102030303FD06FFCAFD05FC20FD05F8FD62FFA8FD06%F800010303032AFD06FFCAFD04FC20FD05F8FD63FF52FD06F802FD040354%FD06FFCAFCFCFC44FD05F8FD64FFFD07F802FD040354FD06FFCAFCFC20FD%05F8FD64FF7DFD07F80000010101287D527D527D52764420FD05F8FD65FF%27FD1AF8FD66FF27FD19F8FD66FFA827FD18F8FD68FF7DFD17F8FD6AFF52%27FD13F8F8%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0 0 0 0 1 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 5) Pc0.0118 0.9608 0.9137 0 1 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 39) Pc0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 47) Pc0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 112) Pc0.9608 0.9608 0 0 0 0 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 216) Pc0.9725 0.9569 0.1569 0.0471 0 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 218) Pc0 0 0 1 0 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 220) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0.9608 0.9608 0 0 0 0 0.8 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR287.4585 450.5137 m285.1875 450.5137 284.6665 450.5137 v283.5835 450.5137 283.2017 451.4854 282.875 452.0972 c282.5415 452.7222 281.9165 453.6387 279.6665 453.6387 c278.7495 453.6387 278.0171 453.8472 277.5835 454.3887 c276.9165 455.2222 276.25 455.498 275.0313 455.498 c274.2393 455.498 264.5415 455.498 y264.5415 437.5 l274.2393 437.5 275.0313 437.5 v276.25 437.5 276.9165 437.2241 277.5835 436.3906 c278.0171 435.8491 278.7495 435.6406 279.6665 435.6406 c281.9165 435.6406 282.5415 434.7241 282.875 434.0991 c283.2017 433.4873 283.5835 432.5156 284.6665 432.5156 c285.1875 432.5156 287.4585 432.5156 y287.4585 450.5137 lf0 0 0 0 1 1 1 Xa285.9219 435.96 m285.9219 435.9604 285.8857 436.0566 Y285.6807 436.6133 285.1367 438.0928 282.9233 439.0151 c282.1987 439.3174 281.041 442.3687 280.5859 445.1763 C278.4141 444.8237 L278.5264 444.1309 279.584 438.0234 282.0771 436.9844 c283.4033 436.4316 283.6646 435.7217 283.8208 435.2969 C283.9111 435.0674 L284.3965 433.9751 285.0991 433.2061 285.8311 432.5156 C286.6099 432.5156 287.4585 432.5156 Y287.4585 434.0059 L286.8179 434.6006 286.2695 435.1772 285.9219 435.96 Cf0.0118 0.9608 0.9137 0 1 0 0 Xa285.4258 435.8828 m285.3716 436.0229 L285.1802 436.5435 284.7319 437.7622 282.8105 438.563 c281.5776 439.0767 280.4268 442.873 280.0366 445.2769 C279.2964 445.1567 L279.3066 445.0928 280.355 438.7739 282.5225 437.8706 c284.1411 437.1958 284.4971 436.229 284.668 435.7642 C284.7402 435.5781 L285.291 434.3384 286.1528 433.5591 287.0649 432.7344 C287.3057 432.5156 L287.3716 432.5156 287.4077 432.5156 287.4268 432.5156 C287.4585 432.5503 L287.4585 433.3911 L286.6177 434.1523 285.8911 434.835 285.4258 435.8828 Cf0 0 0 0 1 1 1 Xa278.1211 446.4907 m279.9619 445.2866 L280.7681 446.519 281.5186 447.1655 282.1934 447.2075 c283.335 447.2783 285.7139 447.4473 287.4585 448.8301 C287.4585 450.5137 L286.7627 450.5137 286.0532 450.5137 V284.8535 449.5889 283.0278 449.4634 282.0645 449.4033 c280.6318 449.3145 279.3442 448.3618 278.1211 446.4907 Cf0.0118 0.9608 0.9137 0 1 0 0 Xa281.9009 448.8047 m280.7124 448.731 279.6089 447.8853 278.519 446.2188 C279.147 445.8086 L280.0981 447.2627 281.0117 447.998 281.9399 448.0557 c283.1641 448.1323 285.9258 448.3242 287.4585 450.1699 C287.4585 450.5137 L287.1631 450.5137 286.7666 450.5137 V285.4214 449.0425 283.0771 448.8784 281.9009 448.8047 cf0 0 0 0 1 1 1 Xa276.1499 445.0366 m277.6284 447.0278 L266.2192 455.498 L265.2188 455.498 264.5459 455.498 264.542 455.498 C264.5415 455.4971 L264.5415 453.6548 L276.1499 445.0366 Lf0.0118 0.9608 0.9137 0 1 0 0 Xa276.436 445.4224 m277.0327 446.2256 L264.5415 455.498 L264.5415 454.2529 L276.436 445.4224 Lf0 0 0 0 1 1 1 Xa266.8984 437.5 m277.5732 446.0913 L276.0171 448.0239 L264.5415 438.7881 L264.5415 437.5 L265.5293 437.5 266.8984 437.5 Vf0.0118 0.9608 0.9137 0 1 0 0 Xa266.1323 437.5 m277.2725 446.4653 L276.645 447.2446 L264.5415 437.5039 L264.5415 437.5 L265.1768 437.5 266.1323 437.5 Vf0 0 0 0 1 1 1 Xa278 454.0254 m278 436.0273 L278.2778 435.8511 278.6138 435.7397 279 435.6851 C279 453.6831 L278.6138 453.7378 278.2778 453.8491 278 454.0254 Cf0.9725 0.9569 0.1569 0.0471 0 0 0.4 Xa282.875 452.1064 m282.623 452.5786 282.2017 453.2163 281.0415 453.5 C281.0415 435.502 L282.2017 435.2183 282.623 434.5806 282.875 434.1084 c283.123 433.6436 283.4053 432.9736 284 432.6772 C284 450.6753 L283.4053 450.9717 283.123 451.6416 282.875 452.1064 cfu0 0 0 0 1 1 1 Xa282.875 445.0991 m282.5415 445.7241 281.9165 446.6406 279.6665 446.6406 c278.7495 446.6406 278.0171 446.8491 277.5835 447.3906 c276.9165 448.2241 276.25 448.5 275.0313 448.5 c274.2393 448.5 264.5415 448.5 Y264.5415 444.4844 L274.2393 444.4844 275.0313 444.4844 v276.25 444.4844 276.9165 444.2085 277.5835 443.375 c278.0171 442.8335 278.7495 442.625 279.6665 442.625 c281.9165 442.625 282.5415 441.7085 282.875 441.0835 c283.2017 440.4717 283.5835 439.5 284.6665 439.5 c285.1875 439.5 287.4585 439.5 Y287.4585 443.5156 L285.1875 443.5156 284.6665 443.5156 v283.5835 443.5156 283.2017 444.4873 282.875 445.0991 cfU0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa276 437.4019 m276 455.3999 L275.7144 455.46 275.4048 455.498 275.0313 455.498 c275.0234 455.498 275.0093 455.498 275 455.498 C275 437.5 L275.0093 437.5 275.0234 437.5 275.0313 437.5 c275.4048 437.5 275.7144 437.4619 276 437.4019 Cf282.875 445.1064 m282.623 445.5786 282.2017 446.2163 281.0415 446.5 C281.0415 442.4844 L282.2017 442.2007 282.623 441.563 282.875 441.0908 c283.123 440.626 283.4053 439.9561 284 439.6597 C284 443.6753 L283.4053 443.9717 283.123 444.6416 282.875 445.1064 cfu0.0118 0.9608 0.9137 0 1 0 0 Xa282.834 444.0991 m282.5 444.7241 281.875 445.6406 279.625 445.6406 c278.708 445.6406 277.9756 445.8491 277.542 446.3906 c276.875 447.2241 276.209 447.5 274.9897 447.5 c274.1978 447.5 264.5 447.5 Y264.5 445.4844 L274.1978 445.4844 274.9897 445.4844 v276.209 445.4844 276.875 445.2085 277.542 444.375 c277.9756 443.8335 278.708 443.625 279.625 443.625 c281.875 443.625 282.5 442.7085 282.834 442.0835 c283.1602 441.4717 283.542 440.5 284.625 440.5 c285.1465 440.5 287.417 440.5 Y287.417 442.5156 L285.1465 442.5156 284.625 442.5156 v283.542 442.5156 283.1602 443.4873 282.834 444.0991 cfU0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa277.542 446.3584 m276.876 447.1909 276.2056 447.4995 274.9897 447.5 C274.9897 445.4844 L276.2056 445.4839 276.876 445.1753 277.542 444.3428 c277.6563 444.2002 277.7939 444.083 277.9473 443.9844 C277.9473 446 L277.7939 446.0986 277.6563 446.2158 277.542 446.3584 cf282.834 444.1064 m282.582 444.5786 282.1602 445.2163 281 445.5 C281 443.4844 L282.1602 443.2007 282.582 442.563 282.834 442.0908 c283.082 441.626 283.3633 440.9561 283.959 440.6597 C283.959 442.6753 L283.3633 442.9717 283.082 443.6416 282.834 444.1064 cf276 455.3999 m276 437.4019 L276.6465 437.2661 277.1211 436.9688 277.5835 436.3906 c277.7002 436.2446 277.8423 436.127 278 436.0273 C278 454.0254 L277.8423 454.125 277.7002 454.2427 277.5835 454.3887 c277.1211 454.9668 276.6465 455.2642 276 455.3999 Cf0 R0 0 0 1 0 0 0 XA287.4585 450.5137 m285.1875 450.5137 284.6665 450.5137 v283.5835 450.5137 283.2017 451.4854 282.875 452.0972 c282.5415 452.7222 281.9165 453.6387 279.6665 453.6387 c278.7495 453.6387 278.0171 453.8472 277.5835 454.3887 c276.9165 455.2222 276.25 455.498 275.0313 455.498 c274.2393 455.498 264.5415 455.498 y264.5415 437.5 l274.2393 437.5 275.0313 437.5 v276.25 437.5 276.9165 437.2241 277.5835 436.3906 c278.0171 435.8491 278.7495 435.6406 279.6665 435.6406 c281.9165 435.6406 282.5415 434.7241 282.875 434.0991 c283.2017 433.4873 283.5835 432.5156 284.6665 432.5156 c285.1875 432.5156 287.4585 432.5156 y287.4585 450.5137 ls0.2863 0.9294 0.9529 0.1608 0.6 0 0 XA2.5 w269.2915 437.7217 mS0 O0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa1 w282.5225 437.8706 m281.9507 438.1089 281.459 438.7285 281.0415 439.5063 C281.0415 437.7832 L281.356 437.4277 281.6982 437.1426 282.0771 436.9844 c283.4033 436.4316 283.6646 435.7217 283.8208 435.2969 C283.9111 435.0674 L283.938 435.0068 283.9717 434.957 284 434.8989 C284 436.8877 L283.6851 437.2271 283.2285 437.5762 282.5225 437.8706 cf281.0415 443.0708 m281.0415 441.3965 L281.5444 440.001 282.1655 438.8315 282.8105 438.563 c283.2939 438.3613 283.6836 438.1333 284 437.8965 C284 438.4336 L283.6899 438.6396 283.3452 438.8394 282.9233 439.0151 c282.3799 439.2417 281.5928 441.0146 281.0415 443.0708 Cf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa282.5225 437.8706 m283.2285 437.5762 283.6851 437.2271 284 436.8877 C284 437.8965 L283.6836 438.1333 283.2939 438.3613 282.8105 438.563 c282.1655 438.8315 281.5444 440.001 281.0415 441.3965 C281.0415 439.5063 L281.459 438.7285 281.9507 438.1089 282.5225 437.8706 cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa281.9399 448.0557 m281.6396 448.0371 281.3408 447.9395 281.0415 447.7773 C281.0415 446.605 L281.4448 446.9736 281.8306 447.1851 282.1934 447.2075 c282.6416 447.2354 283.2832 447.2813 284 447.4072 C284 448.3135 L283.1846 448.1431 282.4351 448.0869 281.9399 448.0557 cf281.9009 448.8047 m282.4297 448.8379 283.1963 448.8965 284 449.0762 C284 449.6416 L283.2627 449.4819 282.5527 449.4336 282.0645 449.4033 c281.7153 449.3818 281.375 449.3066 281.0415 449.1816 C281.0415 448.6094 L281.3237 448.7207 281.6094 448.7866 281.9009 448.8047 cf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa281.0415 448.6094 m281.0415 447.7773 L281.3408 447.9395 281.6396 448.0371 281.9399 448.0557 c282.4351 448.0869 283.1846 448.1431 284 448.3135 C284 449.0762 L283.1963 448.8965 282.4297 448.8379 281.9009 448.8047 c281.6094 448.7866 281.3237 448.7207 281.0415 448.6094 CfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF