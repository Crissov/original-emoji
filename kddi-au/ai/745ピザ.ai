%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (745\203s\203U2.ai)%%CreationDate: (7/22/03) (10:57 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 235 471.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 9332 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD67FF7575A7FD7CFFFD047476FD7AFFFD067475FD78FFFD08744A%CFFD75FF75FD0A74C9FD73FFFD05749FFD0774A0FD71FF75FD0474FD059F%749F7474747BFD6FFF6EFD0474FD099FFD0474A7FD6CFF75FD0474C8FD0C%9F7475A1FD6AFFFD05749FC8C8C7C7FD0B9F747DFD68FFFD0574FD07C89F%C8FD0A9FA0FD66FFFD05749FFD0AC8FD0A9F75FD64FF75FD0474FD0FC8FD%089FA1FD62FFFD0574FD11C8FD079F74A1FD60FF75FD0474FD13C8FD069F%9E4AA1FD5EFF6EFD0474C7FD14C8FD069F4A4AA8FD5CFF75FD0474FD0AC8%C1929299FD08C8C1FD069F4A4BFD5BFFFD05749FFD09C8C1FD049299FD07%C8FD079F4A4A75FD59FFFD0574FD0BC898FD0492BBFD08C8FD069F4A4A4A%A7FD57FFFD05749FFD0BC899FD049298FD09C8FD069F4A4A4AFD56FF75FD%0474FD0EC8BB929292FD0AC8FD069F744A4A7CFD54FFFD0574FD0FC89FC2%9FFD0BC8FD069FFD044AA8FD52FF75FD0474FD10C8FD049FFD0BC8FD059F%744A4A4AA7FD51FF6EFD0474C7FD0FC8C7FD059FFD09C8FD069FFD044A4B%FD50FF75FD0474FD11C8FD059FFD0BC8FD069FFD044AA8FD4EFFFD05749F%FD12C8FD059FFD09C8FD069F74FD044AA1FD4DFFFD0574FD0BC8C7FD09C8%9FC8C7FD07C8A6A6A6C8FD069FFD044A76FD4CFFFD05749FFD09C8C79F9F%9FFD11C87B33333357FD059F74FD044A75FD4BFF75FD0474FD0BC8FD059F%FD10C857FD04337BFD059FFD054AFD4AFFFD0574FD0BC8FD069FFD10C8FD%05337BFD049F74FD054AFD49FF75FD0474FD0DC8FD059FFD10C85EFD0433%FD069FFD054AFD48FF6EFD0474C7FD0EC89F9F9FFD11C89F5733337BC8FD%049F74FD054AFD47FF75FD0474FD05C89F9F9FFD12C8C1929299FD07C89F%9F9FC8FD069FFD054AFD46FFFD05749FFD04C8FD059FFD10C8C1FD049299%FD05C8FD059FC8FD049F74FD054AFD45FFFD0574FD06C8FD059FC7FD0FC8%98FD0492BBFD05C8FD0B9FFD054AFD44FFFD05749FFD06C8FD059FFD10C8%99FD049298FD05C8FD059FC7FD049F74FD054AFD43FF75FD0474FD09C89F%9F9FFD12C8BB929292FD07C89F9F9FC8FD069FFD054AFD42FFFD0574FD05%C898BA98C8C8C89FFD09C8BBBBBBFD08C8C29FFD09C89FC8C8C89FC89F9F%74FD054AFD41FF757474749FFD05C8FD04B498FD0BC8FD04B4BBFD15C89F%FD04C8C7FD054AFD40FF6EFD0474FD05C898FD05B4FD0AC8C1FD05B4FD1A%C89FFD054AFD3FFF75FD0474FD07C8FD05B4FD0BC8FD05B4FD1BC8FD054A%FD3EFFFD05749FFD06C89FFD04B4BAFD0BC8BAB4B4B4BBFD1AC874FD054A%FD3DFF757474746EC8C8C8C7FD05C89FBBB4C19FC8C1C8C8C8C1C8C8C8C1%C8C8C1B4C2C8C8C1C8C8C8C7FD07C8C1C8C8C8C1C8C8C89FC8C7C8989FFD%054AFD3DFF75FD074AA0FD04C8FD069FFD154AA0FD04C89FFD154AFD3DFF%75FD074A9FFD05C8FD059FFD154A9FFD05C8FD154AFD3DFF75FD074AA0FD%04C8FD069FFD154AA0FD04C89FFD154AFD3DFF75FD074A9FFD05C8FD059F%FD154A9FFD05C8FD154AFD3DFF75FD074AA0FD04C8FD069FFD154AA0FD04%C89FFD154AFD45FFC9FD04C8C9FD059FFD15FFC9FD04C8CEFD5AFFC9FD04%C8A6FD059FFD15FFC9FD05C8FD5AFFFD05C8C9FD059FFD15FFFD05C8CEFD%5AFFC9FD04C8FD069FFD15FFC9FD05C8FD5AFFC9FD04C8CEFD059FFD15FF%C9FD04C8CEFD5AFFC9FD04C8A6FD059FFD15FFC9FD05C8FD5AFFC9FD05C8%FD059FFD15FFC9FD04C8CEFD5AFFC9FD04C8A6FD059FFD15FFC9FD05C8FD%5AFFC9FD04C8C9FD059FFD15FFC9FD04C8CEFD5AFFC9FD04C8A6FD059FFD%15FFC9FD05C8FD49FFCFA7CFA8CAA7A7A0A7A0A7A0A7A0A7A0A7FD05C8C9%FD059FFD15FFFD05C8CEFD3EFFCFA7A7A0A0759F75FD1474FD05C8FD069F%757B7CA7A7CAA8FD0EFFC9FD05C8FD38FFCFCAA0A075FD1D749FFD05C8FD%059FFD08749F7BA7A7FD09FFC9FD04C8CEFD33FFA8CAA09FFD2374FD05C8%FD069FFD0E7475A7A7FD04FFC9FD05C8FD30FFA7A775FD27749FFD05C8FD%059FFD12749FA0CFC9FD04C8CEFD2DFFA7A0FD2B74FD05C8FD069FFD1574%FD06C8FD2AFFCAA0FD15749F749F749F9EFD139FFD06C8FD069F749FFD12%74A6FD04C8CEFD28FFA7FD13749F74FD1C9FFD05C8FD0C9F749FFD0C744A%FD06C8FD26FFA09FFD0F74FD239FC7FD05C8FD129F749FFD04744A4AA6FD%04C8CEFD24FFA7FD0F74FD269FFD05C8FD169F74FD044AFD06C8FD22FFA8%9FFD0B74FD2B9FFD06C8FD169FFD044AA6FD04C8CEFD21FFA0FD0A749F74%FD1A9FC89FC89FC89FC89FC89FC89FC89FC89FC89FFD05C8FD149F7474FD%054AFD06C8FD20FF75FD0A74FD129FC89FC8C7FD1FC8FD059FC8C8C8C7C8%9FC89FC7FD059FFD064ACFC9FD04C8CEFD1EFFCAFD09749F74FD109FFD25%C8FD069FFD0AC89FC874FD054A4BFFFFC9FD05C8FD1DFFCAFD0974FD0C9F%C19FFD2BC8FD059FFD0BC89FFD054A76FFFFFFC9FD04C8CEFD1CFFA7FD09%74FD0C9FFD2DC8FD069FFD0AC8FD064A7DFD04FFC9FD05C8FD1BFFC9FD07%74FD0C9FC8C8C8C1FD0FC8C1FD1DC8FD059FFD09C8FD054A75A8FD05FFFD%05C8CEFD1AFFCAFD0774FD0A9FFD04C8BBB4B4B4C1FD0BC8BB929292C1FD%1AC8FD069FFD08C8FD054A75A8FD06FFC9FD059FFD1AFFFD0774FD0A9FFD%05C8FD05B4FD0BC8FD0592FD1AC8CDFD059FFD07C8FD054A7CFD08FFA0FD%049FC8FD19FF7BFD0674FD089FC7FD06C8C1FD05B4FD0AC89FFD0592FD1A%C8FD069FFD05C89FFD054AA7FD09FFFD069FFD18FFA7FD0674FD089FFD09%C8FD05B4FD0BC8FD0592FD1BC8FD059FFD05C8FD054ACAFD0AFFA0FD049F%C8FD18FF75FD0574FD089FFD0AC8C1B4B4B4FD0CC8C1929292FD19C89FC8%C8C89F9F9FC8C8C89F74FD054AFD0DFF9F9F9FC8CFFD17FFC9FD0574FD08%9FFD2BC8C7C89FFD08C89F747474FD08C86EFD044A76FD2AFFFD0774FD06%9FFD2CC8FD059FFD05C89FFD0574FD05C89FFD054AA1FD2AFFA7FD0674FD%069FFD26C8A6A5FD05C8FD059FFD05C8FD05749FFD04C89FFD044A4BA8FD%2BFFA0FD0574FD069FFD13C8FD059FFD0EC881333333A6C8C8FD069FFD05%C87BFD0574C8C8C8FD054A75A8FD2CFFFD0574FD069FFD14C8FD059FFD0E%C8FD0533C8C8C8FD049FFD06C8FD05749FC8C8FD054AA0FD2DFFA8FD0674%FD069FFD13C8FD059FFD0DC89FFD0533FD04C8C7C89FFD06C89FFD0574C8%FD054AA1FD2EFFA7FD0574FD069FFD15C8FD049FFD0EC8FD043357FD0DC8%FD05749FFD054ACFFD2FFF7BFD0574FD059FFD15C8FD059FFD0EC8A63333%57FD0EC89FFD05744A4A4A4BFD31FFA0FD0574FD059FFD3AC8FD05749F4A%4A76FD32FFFD0574FD069FFD3AC89FFD05744A7DFD33FFFD0674FD049FC8%C8C8C1FD0FC8C7FD27C8FD05749F9FC89FC89FC87BA67BC89FC899C89FC8%9FC89FC89FC89FC89FC89FC899C89FC89FC89FC89FC89FC89FC875A075A0%75A075A075A0A0FD0574FD069FBBB4B4B4C1FD0BC8FD049FFD26C87BFD05%74FD05C87B33333357C8B4B4B4BAC1FD0BC8929292989FFD0AC8FD059FFD%0B74FD059FC8FD05B4FD0BC8FD059FFD25C8FD05749FFD05C857FD043399%FD04B4C1FD0AC899FD0492C1FD0AC8FD069FFD0A74FD059F98FD05B4FD0A%C8FD069FFD25C89FFD0574FD05C8FD0533BBFD05B4FD0AC899FD0592FD0B%C8FD049FFD0B74FD059FC8FD05B4FD0BC8FD059FFD25C8FD05749FFD05C8%5EFD04339FFD04B4C1FD0AC89FFD0492C1FD0AC8FD069FFD0A74FD069FC1%B4B4B4FD0DC89F9F9FFD26C8C7FD04749FFD05C89F5733337BC8BAB4B4BB%FD0CC8989292BBFD0BC8FD059FFD067475FD0574FD059FFD24C89F9F9FFD%0FC899BB98C8C8C8749F9FFD2BC8FD069FFD05744AFD0574FD059FFD23C8%FD059FFD0DC8FD0592FD2FC8FD069FFD0C74FD069FFD21C8FD059FFD0EC8%FD0592C1FD27C8C7FD06C8FD069FFD05744A4AFD0674FD069FFD20C8FD06%9FFD0DC8FD0592C1FD1AC8FD059FFD06C8C79F9F9FFD05C8FD069FFD0574%4A4AFD057499FD069FC7FD21C89F9F9FFD0EC8C2929292BBFD1BC8FD059F%FD06C8FD059FC8C8C8FD069FFD06744A4AFD0674FD089FFD17C87B5757A6%FD06C89FFD11C899C1FD1CC8FD059FFD05C8FD069FC8C8FD069FFD0674FD%044AFD0674FD079FFD16C8A6FD0433A6FD36C8FD049FFD06C8FD059FC8FD%079FFD0674FD054AFD0674FD089FFD14C857FD043357FD35C8FD059FFD07%C89F9F9FC8FD079FFD07744A4A754A4AFD0774FD089FFD13C857FD043382%FD44C8FD089FFD06744A4A4A4B4A4AFD0874FD089FFD12C8A6FD0433A5FD%41C8FD0A9FFD06744A4A4A75A14A4A4AFD0874FD089FC7FD12C87B82A6C8%C8A67BFD0FC8C7FD16C8A6A5FD15C8FD0A9FFD07744A4A4AA1A8FD044AFD%0874FD0A9FFD14C857333333A6FD0BC8C79F9F9FFD14C881333333A6FD10%C8C7FD099FFD0974FD044ACAFF4BFD044AFD0874FD0A9FC8C7FD10C8A6FD%0533FD0BC8FD059FFD13C8FD0533FD0FC8FD0B9F99FD08744A4A4A75FFFF%A1FD054AFD0874FD0C9FFD0FC89FFD0533FD0AC8FD069FFD12C89FFD0533%FD0CC8FD0C9FFD0A74FD044A7DFFFFFF75FD054AFD0974FD0D9FFD0DC8FD%043357FD0BC8FD059FFD13C8FD043357FD09C8FD0E9FFD0A74FD054AFD04%FFA7FD064AFD0A74FD0E9FC79FFD08C8A6575757FD0DC89F9F9FFD14C8A6%333357FD05C89FC8FD0E9FFD0C74FD054AA8FD05FF7CFD054AFD0B74FD10%9FC79FFD33C89FC8FD109FFD0C74FD054AA1FD07FF4BFD064AFD0C74FD16%9FC89FFD23C89FC89FC1FD129FFD0E74FD054A75FD09FF4BFD064AFD0E74%FD189FC89FC89FC89FC8C7C8C8C89EC8C8C8C7C8C8C8C7C89FC89FC89FC7%9FC7FD169F749FFD0D74FD064A75FD0BFFFD074AFD1074FD099FFD0574FD%059FFD0574FD069F9E747474FD079FFD0574FD059FFD0574FD0D9F749FFD%0E74FD074A75A8FD0CFF76FD064AFD10749974FD059FFD0574FD069FFD05%74FD069FFD0574FD059FFD0574FD069FFD0574FD0A9F9E9FFD1074FD074A%7CFD0FFFA1FD084AFD12749FFD0774FD059FFD0574FD059FFD0674FD059F%FD0674FD059FFD0574FD059F749FFD1474FD074AA8FD11FFCA76FD074AFD%18749F9EFD059FFD0474FD069FFD0574FD059FFD0574FD079FFD04749F9F%7499FD1574FD074A75FD15FFA84BFD084AFD1B746E7474746E9F74FD059F%747474FD079F7474749F749F749F74746E7474746EFD1774FD074A75A1FD%18FFA776FD074AFD5474FD074A75CAFD1CFFA875FD084AFD4E746EFD074A%76A7FD20FFCAA775FD064A746EFD4974FD074A76A1FD26FFA8A151FD084A%FD41746E74FD074A767DFD2DFFCA7C76FD054A6E4AFD3D74FD054A4B75A1%A8FD34FFA8A17C75FD054A6E4AFD3374FD064A51A17DCAFD3EFFA8A1A175%754A4A4A744AFD27746E744A6E4A7575767CA7A8FD4CFFA7A87DA17C7C4A%7550744A744AFD11744A744A744A7550756FA17CA1A1A8A8FD28FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0235 0.1961 0.5569 0 1 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 14) Pc0.0235 0.8078 0.9176 0 1 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 33) Pc0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 57) Pc0.1647 0.7804 0.9529 0.0431 0.8 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 70) Pc0.2863 0.451 0.9412 0.1608 0.6 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 100) Pc0.3765 0.6196 0.9412 0.3608 0.4 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 142) Pc0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 165) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0.3765 0.6196 0.9412 0.3608 0.4 0.2 0 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR278 439 m283 443 L283 444 L281.2642 444.4419 278.3984 444 276 444 c268.5 444 264 442 264 437 c264 433.5 268.5 432 276 432 c283.5 432 288 433.5 288 437 c288 437.7324 287.8921 438.3931 287.7036 439 C278 439 Lf0.2863 0.451 0.9412 0.1608 0.6 0.4 0 Xa277 439 m283.1372 444.1143 L281.2402 444.7129 278.8354 445 276 445 c268.5 445 264 443 264 438.5 c264 435 268.5 432 276 432 c283.5 432 288 435 288 438.5 c288 438.6729 287.981 438.835 287.9678 439 C277 439 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa277 439 m282.2153 443.3462 L280.5645 443.7778 278.498 444 276 444 c268.7012 444 265 442.1494 265 438.5 c265 435.834 268.8555 433.5 276 433.5 c283.1445 433.5 287 435.834 287 438.5 c287 438.6719 286.9839 438.8359 286.9673 439 C277 439 Lf0.0235 0.1961 0.5569 0 1 0.8 0.4 Xa277 439 m281.2671 442.5557 L279.834 442.8516 278.0771 443 276 443 c269.3643 443 266 441.4858 266 438.5 c266 436.5122 269.4351 434.5 276 434.5 c282.5649 434.5 286 436.5122 286 438.5 c286 438.6719 285.9858 438.8379 285.9639 439 C277 439 Lf0.3765 0.6196 0.9412 0.3608 0.4 0.2 0 Xa275.5 448 m275.5 447 l288 447 l288 449 288 450 v288 451 287.75 452.25 286.5 453.5 c285.25 454.75 283.5 456 y275.5 448 lf0.2863 0.451 0.9412 0.1608 0.6 0.4 0 Xa283.5 456 m275.5 448 L287 448 L287 450 287 451 v287 451.8936 286.7949 452.9863 285.8613 454.1006 C284.7275 455.1201 283.5 456 Yf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa285.9028 454.0459 m284.9058 454.5303 283.5 455 Y276.5 448 L287 448 L287 449.0435 287 450 v287 450.6792 286.9595 451.9907 286.5313 453.0713 C286.3745 453.3911 286.1714 453.7173 285.9028 454.0459 Cf0.0235 0.1961 0.5569 0 1 0.8 0.4 Xa276.5 448 m286 448 L286 448.3921 286 448.957 286 449.5 c286 450.1792 285.9595 451.4907 285.5313 452.5713 C285.3745 452.8911 285.1714 453.2173 284.9028 453.5459 C284.2197 453.8779 283.354 454.1992 282.8711 454.3711 C276.5 448 Lf0 R0.0235 0.1961 0.5569 0 1 0.8 0.4 XA1 J283.5 448.5 m283.5 441.5 lS0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 XA278.5 448.5 m278.5 441.5762 lS0.0235 0.1961 0.5569 0 1 0.8 0.4 XA277.5 448.5 m277.5 438.3887 lS1 Ap0 O0.0235 0.8078 0.9176 0 1 0.2 0 Xa0 J278.9756 448.5 m278.9756 448.2373 278.7627 448.0249 278.5 448.0249 c278.2373 448.0249 278.0244 448.2373 278.0244 448.5 c278.0244 448.7627 278.2373 448.9751 278.5 448.9751 c278.7627 448.9751 278.9756 448.7627 278.9756 448.5 cf266.9756 438.5 m266.9756 438.2373 266.7627 438.0249 266.5 438.0249 c266.2373 438.0249 266.0244 438.2373 266.0244 438.5 c266.0244 438.7627 266.2373 438.9751 266.5 438.9751 c266.7627 438.9751 266.9756 438.7627 266.9756 438.5 cf269.9756 441.5 m269.9756 441.2373 269.7627 441.0249 269.5 441.0249 c269.2373 441.0249 269.0244 441.2373 269.0244 441.5 c269.0244 441.7627 269.2373 441.9751 269.5 441.9751 c269.7627 441.9751 269.9756 441.7627 269.9756 441.5 cf0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa279.9756 438.5 m279.9756 438.2373 279.7627 438.0249 279.5 438.0249 c279.2373 438.0249 279.0244 438.2373 279.0244 438.5 c279.0244 438.7627 279.2373 438.9751 279.5 438.9751 c279.7627 438.9751 279.9756 438.7627 279.9756 438.5 cf0.0235 0.8078 0.9176 0 1 0.2 0 Xa280.9756 438.5 m280.9756 438.2373 280.7627 438.0249 280.5 438.0249 c280.2373 438.0249 280.0244 438.2373 280.0244 438.5 c280.0244 438.7627 280.2373 438.9751 280.5 438.9751 c280.7627 438.9751 280.9756 438.7627 280.9756 438.5 cf0.1647 0.7804 0.9529 0.0431 0.8 0.2 0 Xa283.9756 438.5 m283.9756 438.2373 283.7627 438.0249 283.5 438.0249 c283.2373 438.0249 283.0244 438.2373 283.0244 438.5 c283.0244 438.7627 283.2373 438.9751 283.5 438.9751 c283.7627 438.9751 283.9756 438.7627 283.9756 438.5 cf0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa280.4756 435.5 m280.4756 435.2373 280.2627 435.0249 280 435.0249 c279.7373 435.0249 279.5244 435.2373 279.5244 435.5 c279.5244 435.7627 279.7373 435.9751 280 435.9751 c280.2627 435.9751 280.4756 435.7627 280.4756 435.5 cf0.1647 0.7804 0.9529 0.0431 0.8 0.2 0 Xa276.9756 437.4751 m276.9756 437.2124 276.7627 437 276.5 437 c276.2373 437 276.0244 437.2124 276.0244 437.4751 c276.0244 437.7378 276.2373 437.9502 276.5 437.9502 c276.7627 437.9502 276.9756 437.7378 276.9756 437.4751 cf272.9756 441.5 m272.9756 441.2373 272.7627 441.0249 272.5 441.0249 c272.2373 441.0249 272.0244 441.2373 272.0244 441.5 c272.0244 441.7627 272.2373 441.9751 272.5 441.9751 c272.7627 441.9751 272.9756 441.7627 272.9756 441.5 cf0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa272.9756 435.5249 m272.9756 435.2622 272.7627 435.0498 272.5 435.0498 c272.2373 435.0498 272.0244 435.2622 272.0244 435.5249 c272.0244 435.7876 272.2373 436 272.5 436 c272.7627 436 272.9756 435.7876 272.9756 435.5249 cf271.9756 436.5249 m271.9756 436.2622 271.7627 436.0498 271.5 436.0498 c271.2373 436.0498 271.0244 436.2622 271.0244 436.5249 c271.0244 436.7876 271.2373 437 271.5 437 c271.7627 437 271.9756 436.7876 271.9756 436.5249 cf274.4756 440 m274.4756 439.7373 274.2627 439.5249 274 439.5249 c273.7373 439.5249 273.5244 439.7373 273.5244 440 c273.5244 440.2627 273.7373 440.4751 274 440.4751 c274.2627 440.4751 274.4756 440.2627 274.4756 440 cf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa273.4756 437.5 m273.4756 437.2373 273.2627 437.0249 273 437.0249 c272.7373 437.0249 272.5244 437.2373 272.5244 437.5 c272.5244 437.7627 272.7373 437.9751 273 437.9751 c273.2627 437.9751 273.4756 437.7627 273.4756 437.5 cf275.9756 435.5 m275.9756 435.2373 275.7627 435.0249 275.5 435.0249 c275.2373 435.0249 275.0244 435.2373 275.0244 435.5 c275.0244 435.7627 275.2373 435.9751 275.5 435.9751 c275.7627 435.9751 275.9756 435.7627 275.9756 435.5 cf269.9512 438.5 m269.9512 438.2373 269.7383 438.0249 269.4756 438.0249 c269.2129 438.0249 269 438.2373 269 438.5 c269 438.7627 269.2129 438.9751 269.4756 438.9751 c269.7383 438.9751 269.9512 438.7627 269.9512 438.5 cf270.9756 440 m270.9756 439.7373 270.7627 439.5249 270.5 439.5249 c270.2373 439.5249 270.0244 439.7373 270.0244 440 c270.0244 440.2627 270.2373 440.4751 270.5 440.4751 c270.7627 440.4751 270.9756 440.2627 270.9756 440 cf275.9756 440.5 m275.9756 440.2373 275.7627 440.0249 275.5 440.0249 c275.2373 440.0249 275.0244 440.2373 275.0244 440.5 c275.0244 440.7627 275.2373 440.9751 275.5 440.9751 c275.7627 440.9751 275.9756 440.7627 275.9756 440.5 cf282.9756 437 m282.9756 436.7373 282.7627 436.5249 282.5 436.5249 c282.2373 436.5249 282.0244 436.7373 282.0244 437 c282.0244 437.2627 282.2373 437.4751 282.5 437.4751 c282.7627 437.4751 282.9756 437.2627 282.9756 437 cf284.9756 437 m284.9756 436.7373 284.7627 436.5249 284.5 436.5249 c284.2373 436.5249 284.0244 436.7373 284.0244 437 c284.0244 437.2627 284.2373 437.4751 284.5 437.4751 c284.7627 437.4751 284.9756 437.2627 284.9756 437 cf0.2863 0.451 0.9412 0.1608 0.6 0.4 0 Xa275.9756 434 m275.9756 433.7373 275.7627 433.5249 275.5 433.5249 c275.2373 433.5249 275.0244 433.7373 275.0244 434 c275.0244 434.2627 275.2373 434.4751 275.5 434.4751 c275.7627 434.4751 275.9756 434.2627 275.9756 434 cf277.9756 434 m277.9756 433.7373 277.7627 433.5249 277.5 433.5249 c277.2373 433.5249 277.0244 433.7373 277.0244 434 c277.0244 434.2627 277.2373 434.4751 277.5 434.4751 c277.7627 434.4751 277.9756 434.2627 277.9756 434 cf273.9756 434 m273.9756 433.7373 273.7627 433.5249 273.5 433.5249 c273.2373 433.5249 273.0244 433.7373 273.0244 434 c273.0244 434.2627 273.2373 434.4751 273.5 434.4751 c273.7627 434.4751 273.9756 434.2627 273.9756 434 cf271.9756 434 m271.9756 433.7373 271.7627 433.5249 271.5 433.5249 c271.2373 433.5249 271.0244 433.7373 271.0244 434 c271.0244 434.2627 271.2373 434.4751 271.5 434.4751 c271.7627 434.4751 271.9756 434.2627 271.9756 434 cf279.9756 434 m279.9756 433.7373 279.7627 433.5249 279.5 433.5249 c279.2373 433.5249 279.0244 433.7373 279.0244 434 c279.0244 434.2627 279.2373 434.4751 279.5 434.4751 c279.7627 434.4751 279.9756 434.2627 279.9756 434 cf0.0235 0.8078 0.9176 0 1 0.2 0 Xa281.9756 448.5 m281.9756 448.2373 281.7627 448.0249 281.5 448.0249 c281.2373 448.0249 281.0244 448.2373 281.0244 448.5 c281.0244 448.7627 281.2373 448.9751 281.5 448.9751 c281.7627 448.9751 281.9756 448.7627 281.9756 448.5 cf0.1647 0.7804 0.9529 0.0431 0.8 0.2 0 Xa283.9756 452.5 m283.9756 452.2373 283.7627 452.0249 283.5 452.0249 c283.2373 452.0249 283.0244 452.2373 283.0244 452.5 c283.0244 452.7627 283.2373 452.9751 283.5 452.9751 c283.7627 452.9751 283.9756 452.7627 283.9756 452.5 cf283.9756 449.5 m283.9756 449.2373 283.7627 449.0249 283.5 449.0249 c283.2373 449.0249 283.0244 449.2373 283.0244 449.5 c283.0244 449.7627 283.2373 449.9751 283.5 449.9751 c283.7627 449.9751 283.9756 449.7627 283.9756 449.5 cf0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa285.9756 450.5 m285.9756 450.2373 285.7627 450.0249 285.5 450.0249 c285.2373 450.0249 285.0244 450.2373 285.0244 450.5 c285.0244 450.7627 285.2373 450.9751 285.5 450.9751 c285.7627 450.9751 285.9756 450.7627 285.9756 450.5 cf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa279.9756 449.5 m279.9756 449.2373 279.7627 449.0249 279.5 449.0249 c279.2373 449.0249 279.0244 449.2373 279.0244 449.5 c279.0244 449.7627 279.2373 449.9751 279.5 449.9751 c279.7627 449.9751 279.9756 449.7627 279.9756 449.5 cf0.0235 0.1961 0.5569 0 1 0.8 0.4 Xa286.9756 448.5 m286.9756 448.2373 286.7627 448.0249 286.5 448.0249 c286.2373 448.0249 286.0244 448.2373 286.0244 448.5 c286.0244 448.7627 286.2373 448.9751 286.5 448.9751 c286.7627 448.9751 286.9756 448.7627 286.9756 448.5 cf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa285.9756 449.5 m285.9756 449.2373 285.7627 449.0249 285.5 449.0249 c285.2373 449.0249 285.0244 449.2373 285.0244 449.5 c285.0244 449.7627 285.2373 449.9751 285.5 449.9751 c285.7627 449.9751 285.9756 449.7627 285.9756 449.5 cf283.9756 451.5 m283.9756 451.2373 283.7627 451.0249 283.5 451.0249 c283.2373 451.0249 283.0244 451.2373 283.0244 451.5 c283.0244 451.7627 283.2373 451.9751 283.5 451.9751 c283.7627 451.9751 283.9756 451.7627 283.9756 451.5 cf281.9756 450.5 m281.9756 450.2373 281.7627 450.0249 281.5 450.0249 c281.2373 450.0249 281.0244 450.2373 281.0244 450.5 c281.0244 450.7627 281.2373 450.9751 281.5 450.9751 c281.7627 450.9751 281.9756 450.7627 281.9756 450.5 cf283.9756 441.5 m283.9756 441.2373 283.7627 441.0249 283.5 441.0249 c283.2373 441.0249 283.0244 441.2373 283.0244 441.5 c283.0244 441.7627 283.2373 441.9751 283.5 441.9751 c283.7627 441.9751 283.9756 441.7627 283.9756 441.5 cf0 Ap0 R0.2863 0.451 0.9412 0.1608 0.6 0.4 0 XA1 J277.5 440.5137 m277.5 438.3887 lSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF