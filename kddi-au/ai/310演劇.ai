%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (310_\211\211\214\200.ai)%%CreationDate: (7/8/03) (4:57 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 249 467.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 10954 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD1AFFCF9EC7FD0BC6C79ECEFD47FFC393BC8CB593C3FD1EFFC79E%FD13C69EC7C9FD3FFFC3BCFD0A8C93FD1AFF9EFD1AC6C9FD3BFFBCFD0E8C%B5FD16FF9FFD1FC69EFD36FFCAFD128CB5FD14FF9EFD22C6CEFD32FFC3B5%FD138CFCBCFD11FFC7FD26C6C9FD2EFFC3FD168CFCFCCAFD0FFFFD29C6C8%FD2BFFC3B5FD0B8CBCC3FD05FFBCFD048CFCFCC3FD0DFFA0FD2BC69FFD29%FFFD0B8CB5A1FD09FF938C8CFCFCFCB5FD0CFF9FFD0AC6FD09FEFD1AC6C1%FD26FFBCFD0A8C93FD0DFF8C8CFD04FCCAFD0AFF9FFD0AC6FD0BFEFD18C6%C0C098FD23FF93FD0A8CBCC3FD0EFF8C8CFD04FCC3FD09FF9FFD08C6FD10%FEFD17C6C0C0C0FD20FFBCFD0A8C93FD11FF8CFD05FCBCFD08FF9EFD08C6%FD11FEFD17C6C0C0C09EFD1DFF93FD0A8C93A1FD11FF9AFD06FCB5FD07FF%C8FD08C6FD13FEFD16C6FD04C0A0FD1AFFBCFD0B8CCAFD13FFB5FD06FCB5%FD06FFC8FD08C6FD15FEFD16C6C0C0C098A1FD16FFCAFD0C8C93FD15FFFD%08FCFD06FFFD08C6FD17FEFD15C6FD04C099CAFD13FF9AB5FD0B8CB5FD16%FFBCFD08FCFD05FFC7FD07C6FD17FEFD16C6FD04C0989FFD10FF9AB5FD0D%8CBCFD16FFCAFD09FCFD05FFFD07C6FD0CFE50FD0CFEFD07C67A9EFD0DC6%FD04C098CAFD0CFFBCB5FD0E8C93FD18FFBCFD09FCFD04FF9EFD06C6FD0D%FE5050FD0CFEFD05C69EF8FD0DC6FD04C0989898FD09FFC3B5FD108C9AFD%18FFCAFD0AFCFFFFFFC8FD06C6FD0EFEA4F8A4FD0AFEFD06C6F850FD0EC6%FD04C09898A0FD05FFBCB5FD118CBCFD1AFFFD0BFCFFFFFFFD08C6FD0DFE%A4F826FD0BFEFD04C674F850FD0DC6FD05C0989898A8FF9A93FD128C93FD%1BFFB5FD0BFCFFFFFFFD07C6FD0FFEF8F8A4FD09FEFD05C626F87AFD0EC6%FD04C0989898BBFD138CBCFD1CFFC3FD0BFC8CFFFF9EFD06C6FD10FEF8F8%7AFD0AFEFD04C6F8F874FD0DC6FD06C0989892FD118C93FD1DFFCAFD0BFC%8C8CFFFFFD06C6FD11FEF8F826FD09FEFD04C67AF8F874FD0EC6FD04C0FD%0498FD0F8CBCFD1FFFB5FD0BFC8C8CFFC8FD07C6FD0FFE7AF8F826FD0AFE%C6C6C674F8F84AFD0DC6FD06C098989892FD0C8C9AFD20FFBCFD0CFC8CFC%FFFD07C6FD10FE7AF8F8F8FD09FEFD04C650F8F826FD0EC6FD05C0FD0498%FD098C93CAFD21FFCAFD0CFC8C8CFCFFFD06C6FD11FEF8F8F826FD09FEFD%04C674F8F8F8FD0DC6FD06C0FD0498FD078CBCA1FD23FFFD0CFC8C8C8CC3%CFFD06C6FD10FEA4F8F8F826FD09FEFD04C650F8F8F874FD0DC6FD05C0FD%0498928C8C8CFC9AFD25FFB5FD0BFC8C8C8CFCC39EFD06C6FD10FE50F8F8%F850FD08FEFD05C67AF8F8F820FD0CC6FD06C0FD0498928C8CC3FD26FFBC%FD0BFCFD058CCAC7FD05C6FD11FEFD04F87AFD09FEFD04C69EFD04F87AFD%0CC6FD05C0FD0598FD28FFCAFD0DFC8C8C8CFCCA9EFD06C6FD0FFE26FD04%F8A4FD08FEFD06C6FD05F89EFD0AC6FD06C0FD0598FD27FFCAFD0CFCFD05%8CFCFFFD06C6FD0FFE50FD04F826FD08FEFD07C67AFD04F820FD0BC6FD05%C0FD0598CAFD26FFB5FD0CFCFD058CB5FFFD06C6FD0EFE50FD05F87AFD08%FEFD07C69EFD06F8FD09C6FD06C0FD0598CAFD25FFBCFD0CFCFD058CFCBC%FFFD06C6FD0DFE50FD05F826FD09FEFD08C674FD05F826A4FD08C6FD05C0%FD0598C9FD24FFC3FD0CFCFD058CFCFCC3FFFD06C6FD0BFEA4FD07F8FD09%FEFD0AC626FD06F874FD06C6FD06C0FD0598C9FD23FFC3FD0CFCFD078CFC%CAFFFD05C69EFD09FE7A26FD07F8A4FD08FEFD0CC620FD06F82674FD04C6%FD05C0FD0698A0FD22FFC3FD0CFCFD078CFCFCFFFFFD05C69EF82650507A%7A5026FD09F8A4FD09FEFD0DC626FD08F8264A506E744A4AF874FD0598C2%FD21FFC3FD0CFCFD088CFCB5FFFFFD06C6FE50FD0DF850FD0BFEFD0EC674%26FD0DF89EC0FD0598A0FD20FFCAFD0CFCFD088CFCFCBCFFFFFD07C6FE7A%50FD09F850A4FD0BFEFD10C69E74FD09F82674C0C0C0FD0598C9FD1FFFC3%FD0CFCFD098CFCFCCAFFFFFD06C6FD05FE7A7A507A507AA4FD0DFEFD14C6%9E7A5074507474FD05C0FD0698CAFD1EFFC3FD0CFCFD098CFCFCB5FFFFFF%9EFD06C6FD17FEFD1AC6FD07C0FD0698CAFD1DFFC3FD0BFCFD0B8CFCFCB5%FFFFFFC7FD06C6FD16FEFD1CC6FD06C0FD0698FD1DFFBCFD0BFCFD0B8CFC%FCFCCAFFFFFF9EFD07C6FD14FEFD1CC6FD07C0FD0698FD1CFFBCFD0AFCFD%0D8CFCFCFCCAFFFFFFC7FD07C6FD13FEFD1DC6FD07C0FD0598C1FD1BFFBC%FD0AFCFD0D8CFCFCFCB5FD04FF9FFD08C6FD11FEFD1EC6FD06C0FD0698A0%FD19FFCAB5FD0AFCFD0D8CFD04FCC3FD05FFFD09C6FD0FFEFD1EC6FD08C0%FD0598C9FD18FFCAB5FD0AFCFD0D8CFD05FCCAFD05FFFD0AC6FD0BFEFD21%C6FD07C0FD0698CAFD17FFC3FD09FCFD118CFD04FCFD06FFC0FD0CC6FEC6%FEC6FEFD24C6FD07C0FD0698FD17FFC3FD09FCFD118CFD04FCC3FD06FFC7%FD34C6FD08C0FD05989FFD16FFB5FD08FCFD128CFD05FCCAFD06FFCEFD34%C6FD07C0FD0698A0FD15FFB5FD07FCFD138CFD05FCBCFD08FFFD34C6FD06%C0FD0798CAFD13FFCAFD07FCFD158CFD05FCCAFD08FFC7FD1CC69E9E5074%507A7AFD0FC6FD08C0FD05989FFD13FFC3FD06FCFD168CFD05FCB5FD09FF%9FFD19C69E50FD09F84A7AFD0BC6FD08C0FD06989FFD12FFBC4458343512%FD053B123B123526FD0E8CFD05FCC3FD0AFFFD18C64AFD0DF8269EFD09C6%FD08C0FD0698CFFD10FF5FFD133B1359FD098CFD05FCB5FD0BFFC7FD15C6%9EFD11F874FD08C6FD08C0FD0698CAFD0DFF35FD193B1275FD058CFD06FC%CAFD0BFF9FFD14C67AFD13F850FD06C6FD08C0FD06989FFD0CFF5F18FD1D%3B518C8CFD06FCBCFD0DFF9EFD12C67AFD15F850FD04C6FD08C0FD0798CA%FD0AFF34FD213B1292FD05FCB5CAFD0DFFC7FD11C6A4FD17F87AC6C6C6FD%09C0FD0598C1FD0AFF34FD243B59FCFCFCB5CAFD0EFF9FFD11C626FD18F8%A4C6FD09C0FD06989FFD08FF84FD0F3B663BFD05663B663B42FD0E3B68FC%C3FD10FFFD10C674FD0BF8204A26FD0BF84AC6FD08C0FD0798CFFD07FF5F%FD0B3BFD1366FD0C3B58FD11FFC7FD0FC626FD07F820509EFD05C6A4744A%FD08F898FD08C0FD06989FFD07FFFD0A3B423BFD1766FD0A3B34FD11FFC7%FD0EC6FD06F8207AFD0CC626FD06F874FD08C0FD0698C9FD06FF41FD073B%4242FD1B66FD093B1234FD10FF9EFD0DC650FD05F84AFD0FC674FD05F820%FD07C0FD0798FD06FFFD083B42FD1E66FD083B121212FD10FFC0FD0CC650%FD04F874FD11C69E26FD04F8FD07C0FD0698C9FD05FFFD083BFD2066FD09%3B121258FD0FFFC1C0FD0BC620F8F8F87AFD13C69826F8F8F8FD06C0FD07%98CAFD04FFFD083BFD2166FD093B12120B7DFD0EFFCAC0C0FD0AC64AF8F8%74FD13C6C0C09E20F8F898FD05C0FD0698A0FD04FF60FD073BFD2366FD09%3B12120BA8FD0EFF9EFD04C0FD07C626F84AFD13C6FD04C074F8F898FD04%C0FD0798FD04FF8AFD073BFD08665F2E3405342E5FFD1466FD0A3B12120B%34AEFD0EFF98FD04C0FD06C626F8FD12C6FD07C04AF89EC0C0C0FD0798C9%FFFFFFCA35FD063BFD07663527FD07F8042EFD1266FD0A3B3A12120B83FD%0EFFA098FD06C0C6C6C6267AFD10C6FD0AC0F8FD04C0FD069899CAFFCABC%12FD063BFD076605FD0CF85FFD1066FD0A3B1212120B0BA8FD0EFFC1FD07%C0C6C09EFD10C6FD0BC09EFD04C0FD0698C9FFCAB551FD063BFD076605FD%0EF85FFD0F66FD0B3B12120B0B2EFD0EFFA0FD10C0C6C0C6C0C6FD14C0FD%0798FFBCFC44FD063BFD07660BF8053434352E2DFD09F85FFD0D6641FD0A%3BFD04120B0B83FD0EFF98FD27C0FD0798CAFCFCFC35FD053BFD07663559%FD08663404FD06F805FD0D66FD0C3B1212120B0B34FD0EFFCA98FD25C0FD%0798BBFCFCFC75FD073BFD11663B2DFD06F834FD0B66FD0C3BFD04120B0B%0BA8FD0EFFC998FD23C0FD0798BBFD04FC35FD053BFD15662EFD05F82EFD%0A66FD0D3BFD05120B0B34FD0EFFCA9F98FD21C0FD08988CFC8C8C2DFD06%3BFD166627FD05F8FD0966FD0E3BFD0412FD040BA8FD0EFFCA9898FD20C0%FD079892FD048CFD063BFD17663BFD05F83BFD0766FD0E3BFD06120B0B0B%84FD0FFFA09898FD1DC0FD089892FD048C58FD053B42FD186605FD04F85F%FD0666FD0F3BFD0512FD040B2DFD10FF9F9898FD1CC0BAFD0798B4FD048C%FD063BFD1A66FD04F83BFD0566FD103BFD0612FD040BFD11FF999898FD19%C0FD0998FD058C2DFD063BFD1A66FD04F85F66666642FD103BFD0612FD05%0BA8FD11FF989898FD17C0FD099892FD058CFD063BFD1B6605F8F8F86666%FD133B3AFD0612FD040B59FD11FFCF989898FD15C0FD099892FD058C58FD%053B42FD1B6627F8F80566FD143BFD0612FD050B58FD12FFCF989898BA98%FD11C0FD099892FD068CFD063BFD1C6605F8F83AFD143BFD0812FD040B34%FD13FFCAFD0598FD0DC0FD0B9892FD068C20FD063BFD1C6605F805FD143B%FD0812FD060BFD15FF99FD0698C098FD05C0FD0D9892FD078CFD063BFD1B%663B3BF8F834FD133B19FD0912FD050BFD16FF9FFD17989292FD088CFD06%3BFD1866FD043B05F812FD143BFD0912FD060BFD17FFC999FD149892B4FD%088C34FD063BFD1766FD053B2735FD073B0C27FD05F82E34FD053BFD0912%FD060BFD18FFCFA0FD1298FD0B8CFD063BFD1566FD0F3B2EFD0AF8043B3B%3BFD091211FD060BFD1BFFA09FFD0C989292FD0B8C99FD053BFD1566FD0F%3B27FD0DF834FD0A12FD070BFD1CFFA8C999FD07989292FD0E8C2DFD063B%FD1166FD113B05FD0FF80BFD0812FD080BFD1DFFBCFCFCFCFD158CFD063B%FD1166FD113B2E053435FD043B3405FD08F8FD0912FD070BFD1BFFCAFCFC%FD178C99FD063BFD0E66FD143B12FD093B1205FD06F804FD0712FD070B2D%FD1AFFC3FCFCFD188C2DFD063BFD0C6642FD213B2DFD06F8FD0612FD080B%34FD18FFCABCFCFCFD198C35FD053BFD0B66FD243B1205FD05F80BFD0412%FD090B59FD17FFCAB5FCFCFD1A8CFD073BFD07663B2DFD243B12121205FD%04F805FD0512FD080B83FD16FFC3FCFCFCFD1A8C20FD083B663B663B3B12%05F8FD233BFD04120BFD04F805FD0412FD090BFD16FFBCFCFCFCFD1B8C59%FD0C3B35F8F82EFD223BFD0612FD04F804121212FD090B34FD15FFFCFCFC%FD1D8C12FD0C3B05F8F80CFD213BFD071205F8F8F8051212FD0A0B34FD13%FFCAFD04FCFD1B8CFCFCFD0C3B2EF8F8F835FD203BFD08120BF8F8F80512%FD0B0BA8FD12FFCAFD04FCFD178CFC8CFD05FCFD0C3BFD04F812FD1F3BFD%09120CF8F8F80B11FD0A0B34FD12FFC3FD04FCFD138CFC8CFD09FC6FFD0B%3B0CFD04F835FD1E3BFD0A120BF8F8F812FD0B0B59FD11FFC3FD04FCFD11%8CFC8CFD09FCB5C3CA60FD0B3B05FD04F812FD1D3BFD0B120BF8F804FD0C%0BFD11FFCAFD04FCFD0F8CFD0BFCB5C3CAFFFFFF34FD0B3BFD05F834FD1C%3BFD0C1205F8F811FD0B0B59FD10FFC3FCFCFCFD0E8CFD0BFCB5C3CAFD06%FFFD0B3B12FD05F805FD1B3BFD0D1204F80CFD0C0BA8FD0FFFCAFD04FCFD%098CFC8CFD0BFCB5C3FD0AFF12FD0A3B35FD05F805FD1A3BFD0E12F812FD%0C0B59FD10FFFCFCFCFD0A8CFD0BFCB5CACAFD0CFFFD0B3B12FD06F834FD%183BFD0E1204FD0E0BFD10FFB5FCFCFCFD058CFD0CFCB5BCCAFD10FFFD0C%3BFD07F8FD173BFD1012FD0D0BAEFD0FFFBCFCFCFCFD058CFD0AFCB5BCCA%FD13FFFD0C3BFD07F805FD133BFD101211FD0E0B59FD0FFFCAFCFCFC8C8C%8CFD0AFCB5C3FD17FFFD0C3B05FD07F82EFD113BFD1012FD0F0B34FD10FF%B5FCFC8C8C8CFD08FCB5BCCAFD19FFFD0C3B34FD08F80BFD0F3BFD1012FD%0F0B2EA8FD0FFFCAFCFC8CFD08FCB5C3FD1DFFFD0D3B04FD08F805FD0D3B%FD1012FD0F0B34A8FD10FFBCFC8CFD08FCCAFD1FFFFD0D3B0BFD0AF82D12%FD083B120BFD0F12FD100BA8FD11FFFD07FC8CBCFD22FF34FD0D3B04FD0C%F8050B2E0B2EF804F8FD0F12FD0F0B34A8FD11FFCAFD04FC8C8C8CFD24FF%5FFD0E3BFD13F80CFD0C12FD110B34A8FD12FFCAFCFCFC8C8C8CFD25FF83%FD0F3BFD11F80CFD0C12FD110B58FD14FFCAFCFC8C8C8CC3FD25FFC318FD%0F3B04FD0EF80CFD0C12FD110B83FD15FFCAFCFD058CFD23FFC3B58CFD11%3B1227FD0AF805FD0B12FD130BAEFD17FFFD068C9AFD21FF938C8C8C2DFD%123B350B05F805F805040BFD0C12FD120B58FD19FFB5FD058CB5FD1FFFBC%FD058C92FD123B193BFD1212FD110B34A8FD1AFFC3FD078CC3FD1BFF93FD%088C35FD0E3BFD1412FD130B83FD1DFF93FD078C9AFD17FFC3B5FD0A8C68%3B12FD073B123BFD1412FD140B58FD20FFFD098CBCA1FD11FFC3BCFD0E8C%0BFD1B12FD150B58A8FD21FFCAFD098CB593BCC3FD0BFFBCBCFD128C0BFD%17120B12FD140B58FD25FFCAFD0F8CB593BCFD198C6805110BFD0F121112%FD170B58A8FD28FFFD298CBCFFAEFD050B120B12111212120B120B11FD17%0B3459FD2CFF93FD248CB59AFD04FFA8FD240B2EA8FD30FFBCFD1F8CB5BC%FD09FF59FD1F0B3484FD35FF93FD1A8CB59AFD0DFF8434FD1A0B5883A8FD%3AFFBCB5FD118CB593C3CAFD13FF5834FD130B5983AEFD41FFA1C39AB58C%BC93B58CBC93BC9AC3FD1CFF7D592D34FD070B342E5959A8A8FD2CFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0314 0.0196 0.9137 0 1 1 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 10) Pc0.0078 0.1961 0.9373 0 1 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 16) Pc0.0275 0.3922 0.9412 0.0039 1 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 22) Pc0.0118 0.9608 0.9137 0 1 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 39) Pc0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 64) Pc0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 76) Pc0.6039 0 0.2118 0 0.4 1 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 114) Pc0.8039 0 0.4235 0 0.2 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 157) Pc0.9176 0.0314 0.6588 0.0039 0 0.6 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 200) Pc0.9529 0.2235 0.8902 0.0824 0 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 207) Pc0 0 0 1 0 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 220) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0.0118 0.9608 0.9137 0 1 0 0 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR281.2227 453.916 m279.5 453 276.8237 452.3633 274.3896 451.3896 C275.1855 450.0356 L277.6675 451.0283 280.2339 452.0552 281.7773 453.084 c284.2334 454.7217 286.1245 455.3589 286.5947 454.7075 c287.1313 453.9639 286 452.5 284.5 450.5 c282.543 447.8911 276.5 443.5 273 441.5 c272.1279 441.002 264.6577 436.9458 265.5254 434.3418 c266.0942 432.6357 268.7803 431.417 272.6372 432.519 c276.1982 433.5366 279.1943 436.0112 279.3203 436.1157 C276.5 437 L276.4707 436.9756 275.6187 435.5591 272.5 434 c269.5 432.5 266.9023 433.3745 266.4741 434.6582 c266.1968 435.4912 270.2554 436.2207 275 438 c279.2646 439.5996 284.1157 443.145 286 445.5 c287.3359 447.1704 288.8379 453.3081 287.4053 455.2925 c286.2998 456.8242 283.5688 455.1636 281.2227 453.916 cf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa279 445.5 m286.5 448 288 452.5 y288 448.5 283 443.5 vF280 439 m268.5 437.5 266 435.5 y270.5 441.5 277.5 443 vF/BBAccumRotation (-3.631518) XT267.3877 435.4497 m267.375 435.4512 L266.9395 435.2646 265.6836 434.8701 265.6084 434.1787 C266.2935 432.5625 268.9087 431.4536 272.6372 432.519 c276.1982 433.5366 279.1943 436.0112 279.3203 436.1157 C276.5 437 L276.4707 436.9756 275.6187 435.5591 272.5 434 c269.5 432.5 266.9023 433.3745 266.4741 434.6582 c266.3867 434.9204 266.73 435.1724 267.3877 435.4497 Cf287.0693 455.561 m287.0176 455.6328 286.9277 455.7017 286.8149 455.7656 C285.5015 456.3374 283.2236 454.98 281.2227 453.916 c279.5 453 276.8237 452.3633 274.3896 451.3896 C275.1855 450.0356 L277.6675 451.0283 280.2339 452.0552 281.7773 453.084 c284.2334 454.7217 286.1245 455.3589 286.5947 454.7075 c286.8008 454.4219 286.7573 454.0273 286.5444 453.5391 C287.1157 454.4341 287.3843 455.1245 287.0693 455.561 cf1 Ap0.9529 0.2235 0.8902 0.0824 0 0.4 0.2 Xa286.1294 435.5015 m283.6353 433.0068 277.1602 430.5757 274.6655 433.0693 c272.1719 435.564 274.6035 442.0386 277.0977 444.5337 c279.5913 447.0273 283.6357 447.0273 286.1294 444.5337 c288.624 442.0386 288.6235 437.9956 286.1294 435.5015 cf/BBAccumRotation (-0.785398) XT0 Ap0.9176 0.0314 0.6588 0.0039 0 0.6 0.4 Xa285.7646 444.8628 m283.2554 447.0156 279.4741 446.9102 277.0977 444.5337 c274.7207 442.1567 272.4106 436.1714 274.3564 433.4551 C277.4995 432 282.3633 434.5142 284.7402 436.8911 c287.1167 439.2676 287.918 442.3535 285.7646 444.8628 Cf/BBAccumRotation (-0.785398) XT1 Ap0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa277 449.5 m277 445.9102 274.0898 439.5 270.5 439.5 c266.9102 439.5 264 445.9102 264 449.5 c264 453.0898 266.9102 456 270.5 456 c274.0898 456 277 453.0898 277 449.5 cf0 Ap0.0275 0.3922 0.9412 0.0039 1 0.6 0 Xa276 450.5 m276 451.3413 275.7568 453.4268 275.0527 454.1304 c273.8887 455.2935 272.2754 456 270.5 456 c266.9102 456 264 453.0898 264 449.5 c264 448.0493 264.481 446.1411 265.2842 444.3784 C266.4688 442.2227 268.1411 440.5 270 440.5 c273.5898 440.5 276 446.9102 276 450.5 cf0.0078 0.1961 0.9373 0 1 0.8 0 Xa269.5 443 m273.0898 443 275 447.9102 275 451.5 c275 454 274.3984 454.7061 274.0005 454.9644 c272.9927 455.6187 271.793 456 270.5 456 c266.9102 456 264 453.0898 264 449.5 c264 448.1738 264.4165 446.4688 265.0991 444.8384 C266 443.5 267.7998 443 269.5 443 cf1 Ap0.0314 0.0196 0.9137 0 1 1 0 Xa270.3413 449.6484 m269.3101 447.7739 267.4595 446.811 266.2095 447.5 c264.9604 448.1875 264.7837 450.2651 265.8159 452.1401 c266.8481 454.0132 268.6978 454.9751 269.9468 454.2871 c271.1968 453.6001 271.3735 451.522 270.3413 449.6484 cf/BBAccumRotation (-0.503240) XT0 Ap0 0 0 1 0 0 0 Xa268.5244 453 m268.6353 452.7017 268.7046 452.3823 268.7046 452.0454 c268.7046 450.5259 267.4741 449.2954 265.9546 449.2954 c265.6177 449.2954 265.2983 449.3647 265 449.4756 C265.4468 449.0566 266.0435 448.7954 266.7046 448.7954 c268.0854 448.7954 269.2046 449.9146 269.2046 451.2954 c269.2046 451.9565 268.9434 452.5532 268.5244 453 Cf272.4756 453 m272.3647 452.7017 272.2954 452.3823 272.2954 452.0454 c272.2954 450.5259 273.5259 449.2954 275.0454 449.2954 c275.3823 449.2954 275.7017 449.3647 276 449.4756 C275.5532 449.0566 274.9565 448.7954 274.2954 448.7954 c272.9146 448.7954 271.7954 449.9146 271.7954 451.2954 c271.7954 451.9565 272.0566 452.5532 272.4756 453 Cf270.5 445 m271.6294 445 272.6016 444.2627 273.1133 443.1865 C273.1631 443.3843 273.1997 443.5869 273.1997 443.8003 c273.1997 445.291 271.9912 446.5 270.5 446.5 c269.0088 446.5 267.7998 445.291 267.7998 443.8003 c267.7998 443.5869 267.8364 443.3843 267.8867 443.1865 C268.3984 444.2627 269.3701 445 270.5 445 cf0.8039 0 0.4235 0 0.2 0.8 0.6 Xa285.374 445.167 m282.876 446.9956 279.3545 446.7905 277.0977 444.5337 c274.8403 442.2759 272.6519 436.771 274.1016 433.8945 C276.9995 433 281.0938 436.0234 283.3506 438.2803 c285.6074 440.5371 287.2021 442.6694 285.374 445.167 Cf/BBAccumRotation (-0.785398) XT0.6039 0 0.2118 0 0.4 1 0.8 Xa283.6826 444.8965 m281.5674 445.6543 279.2358 445.2817 277.6743 443.7197 c276.687 442.7324 275.7529 441.0151 275.2285 439.187 C274.6753 437.2563 278.1797 439.5449 280.8003 440.5938 c285.4351 442.4487 284.3184 444.668 283.6826 444.8965 cf/BBAccumRotation (-0.785398) XT0 0 0 1 0 0 0 Xa277.438 435.9375 m278.1445 435.231 279.2139 435.0845 280.2061 435.4375 C280.1138 435.2827 280.0098 435.1328 279.8765 434.999 c278.9443 434.0669 277.4331 434.0669 276.5 435 c275.5679 435.9326 275.5679 437.4438 276.4995 438.3755 c276.6333 438.5093 276.7832 438.6133 276.938 438.7056 C276.5854 437.7124 276.7314 436.644 277.438 435.9375 cf/BBAccumRotation (-0.785398) XT280.5718 442.4487 m281.2183 441.8027 281.3135 440.8203 280.8701 440.0669 C281.0103 440.1494 281.1455 440.2437 281.2661 440.3643 c282.0332 441.1318 282.0337 442.3765 281.2661 443.1431 c280.499 443.9106 279.2544 443.9106 278.4873 443.144 c278.3667 443.0234 278.2715 442.8872 278.189 442.7471 C278.9424 443.1904 279.9248 443.0952 280.5718 442.4487 cf/BBAccumRotation (-0.785398) XT284.0454 438.9751 m284.6924 438.3281 284.7866 437.3457 284.3438 436.5928 C284.4839 436.6753 284.6191 436.77 284.7402 436.8911 c285.5073 437.6577 285.5073 438.9023 284.7402 439.6699 c283.9727 440.4375 282.7285 440.4375 281.9614 439.6699 c281.8403 439.5488 281.7456 439.4136 281.6631 439.2734 C282.416 439.7168 283.3989 439.6216 284.0454 438.9751 cf/BBAccumRotation (-0.785398) XTLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF