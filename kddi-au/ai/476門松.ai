%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (476\226\345\217\274.ai)%%CreationDate: (7/19/03) (3:52 PM)%%BoundingBox: 264 432 288 457%%HiResBoundingBox: 264 432 288 456.0132%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 249 471.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 10300 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3FFF83580A0A0A5883FD77FFA8FD090A83FD74FF5EFD0B0A33AE%FD71FF58FD0D0A2DA8FD6FFF83FD0F0A33FD6EFFA8FD060A2C7A56A42CFD%060A57FD6DFF2DFD050A2CFD05C67AFD060AAEFD6BFF7DFD060AFD07C62C%FD060AFD6BFF33FD050A80FD08C6FD060AAEFD69FFA8FD060AFD09C656FD%050A57FD69FF58FD050A56FD09C67AFD060AFD69FF2DFD050AA4FD0AC6FD%060AA8FD68FFFD050A32FD0BC632FD050A83FD67FF58FD050A50FD0BC650%FD050A2DFD67FF58FD050AA4FD0BC67AFD050A33FD67FF2DFD050A9EFD0B%C67A2C0A0A040A04FD67FFFD060AFD0CC67A2C0AFD04047DFD66FFFD050A%56FD0CC67A56FD050458FD65FF83FD050A56FD0CC67A26FD05042DFD65FF%83FD050AA4FD0CC67A7AFD05042DFD65FF58FD050A9EFD0CC67A7AFD0604%FD5AFFA88333333383AEFD04FF83FD050AFD0DC67A7AFD05040AFD05FF83%58332D83A8FD4DFFAE33FD060A3358FFFFFF58FD050AFD0DC6A47AFD0604%FFFFFF8333FD070AA8FD4AFF83FD0B0AA8FF58FD040A2CFD0DC67A7AFD06%04FFFF2DFD0A0A58A8FD47FF58FD0D0AFF33FD040A56FD0DC6A47A2CFD05%04FF2DFD0C0A33FD46FF58FD0F0A33FD040A2CFD0DC67A7AFD0604FD100A%A8FD43FFA8FD070A322C56FD070A320A0A0A56FD0DC6A47A2CFD0504FD06%0A322C322CFD060A33FD43FFFD060A2CFD04C6A4FD060A040A0A0A2CFD0D%C67A7AFD0604FD050A7AFD04C656FD060A5EFD41FF58FD050A2CFD06C6A4%FD090A56FD0DC67A7A2CFD0504FD040A7AFD06C656FD060AFD40FFA8FD06%0AA4FD07C656FD050A320A0A2CFD0DC67A7AFD06040A0A0A2CFD08C6FD06%0A57FD3FFF83FD050A56FD08C6A4FD060A2C0A32FD0CC69E7A7A2CFD0504%0A0A0A7AFD08C67AFD050A33FD3FFF2DFD050A7AFD09C62CFD050A040A2C%FD0CC69E7A7AFD06040A0A0AFD09C69EFD060AFD3EFFAEFD060AFD0AC680%FD050A320A56FD0CC67A7A7A2CFD05040A0A56FD0AC62CFD050A58FD3DFF%83FD050A56FD0AC67AFD080AFD0BC69E7A7A7AFD06040A0A7AFD0AC67AFD%050A33FD3DFF33FD050A7AFD0BC62CFD060A327AFD09C6A49E7A7A562CFD%05040A0AFD0BC67AFD060AFD3DFF2DFD050AFD0BC69E56FD070A3256FD08%C67A7A7A5632FD06040A32FD0BC6A4FD060AA8FD3CFFFD050A32FD0CC656%FD060AFD0432FD05C6A47A7A7A3232322CFD05040A56FD0BC69E56FD050A%A8FD3BFF83FD050A2CFD0BC69E7AFD06040AFD0532567A5656FD0632FD06%040AA4FD0BC6A4040AFD04042DFD3BFF83FD050A7AFD0CC67A2CFD05040A%FD0F322CFD05040AFD0CC69E7AFD05042DFD3BFF58FD050A7AFD0BC69E7A%FD0704FD0F32FD06040AFD0CC6A47AFD0604FD3BFF58FD050AFD0DC67A56%FD050433FD0F322CFD050456FD0CC69E7AFD050427FD3BFF2DFD050AFD0C%C69E7A26FD06045E3339FD0C32FD060456FD0CC6A47AFD0604FD3BFF33FD%040A2CFD0DC67A7AFD05042DFD045E39FD0A322CFD05047AFD0CC69E7AFD%0604A8FD3AFFFD050A56FD0CC69E7A7AFD0504F8FD055EFD0A32FD06047A%FD0CC6A47A2CFD05047DFD3AFFFD050A56FD0DC67A7AFD05042DFD055EFD%0A322CFD0504A4FD0CC69E7A2CFD05047DFD3AFFFD050A7AFD0DC67A7AFD%0604FD055EFD0A32FD0604FD0DC6A47A56FD05047DFD3AFFFD050A7AFD0D%C67A7AFD05040AFD055EFD0A322CFD0504FD0DC69E7A50FD050458FD3AFF%FD050AA4FD0DC67A7AFD060439335E33390A320A320A320A320A32FD0604%FD0DC6A47A56FD050458FD39FFA8FD050A56FD0DC67A7AFD0504FD110AFD%0504FD0DC69E7A2CFD05042DFD39FFA8FD050A7AFD0CC69E7A7AFD0604FD%0F0AFD0604FD0DC6A47A56FD050458FD39FFA8FD050A56FD0CC6A47A7AFD%0504FD110AFD0504FD0DC67A7A2CFD05042DFD39FFA8FD050A56FD0CC67A%7A7AFD0504F8FD0F0AF8FD0504FD0DC67A7A56FD05042DFD39FFA8FD050A%56FD0CC6A47A7AFD0504FD110AFD0504FD0DC67A7A2CFD05042DFD39FFA8%FD050A7AFD0CC67A7A7AFD0604FD0F0AFD0604FD0CC67A7A7A56FD050458%FD39FF83FD050A56FD0BC69E7A7A7AFD0604FD055EFD0A322CFD0504FD0C%C69E7A7A26FD05042DFD39FFA8FD050A329EFD09C69E7A7A7A56FD0604FD%055EFD0A32FD060432FD0AC69E7A7A7A32FD050458FD39FFA8FD060A56A4%FD08C6A47A7A5632FD05042DFD055EFD0A322CFD0504327AFD09C67A7A7A%562CFD05042DFD39FFA8FD050A3232327AFD05C6A47A7A7A323232FD0604%FD055EFD0A32FD0604323232FD06C6A47A7A56563232FD050458FD39FFA8%FD060A320A320A56567A2C562C320A320A32FD05042DFD055EFD0A322CFD%0504320A320A562C7A2C562C320A320A320AFD05042DFD39FFA8FD150AFD%0504F8FD055EFD0A32FD0604FD100AFD05042DFD39FFA8FD150AFD05042D%FD055EFD0A322CFD0504FD100AFD05042DFD39FFA8FD150AFD0604FD055E%FD0A32FD0604FD100AFD050458FD39FF83FD150AFD0604FD055EFD0A322C%FD0504FD0F0AFD06042DFD39FFA8FD150AFD0604FD055EFD0A32FD0604FD%100AFD050458FD39FFA8FD150AFD05042DFD055EFD0A322CFD0504FD100A%FD05042DFD39FFA8FD050A33FD045E33FD0A32FD0604FD055EFD0A32FD06%04FD055E5DFD0A32FD050458FD39FFA8FD050A33FD055EFD0A32FD05042D%FD055EFD0A322CFD0504FD055E33FD09322CFD05042DFD39FFA8FD050A33%FD045E33FD0A32FD0504F8FD055EFD0A32FD0604FD055E39FD0A32FD0504%2DFD39FFA8FD050A33FD055EFD0A32FD05042DFD055EFD0A322CFD0504FD%055E33FD09322CFD05042DFD39FFA8FD050A33FD045E33FD0A32FD060433%0A330A33FD0A0AFD0604FD055E5DFD0A32FD050458FD39FF83FD050A33FD%055EFD0A32FD0604FD100AFD0504FD055E33FD0932FD06042DFD34FFCAFD%04FFA8FD050A33FD045E33FD0A32FD0604FD0F0AFD0604FD055E5DFD0A32%FD050458FD04FFCAFD2EFFBCB6B6C4FFFFA8FD050A33FD055EFD0A32FD05%04FD110AFD0504FD055E33FD09322CFD05042DFFFFFFBCB6B6C4FD2BFFBC%FD04B6CAFFA8FD050A33FD045E33FD0A32FD0604FD0F0AFD0604FD055E5D%FD0A32FD050458FFFFBCFD04B6CAFD29FFC4BDFD04B6BCCAA8FD050A33FD%055EFD0A32FD0504FD110AFD0504FD055E33FD09322CFD05042DFFC4FD05%B6BCCBFD27FFFD09B6BDFD050A33FD045E33FD0A32FD0504F8FD055EFD0A%32FD0604FD055E39FD0A32FD05042DFD09B6C3FD25FFC3FD0AB62CFD040A%33FD055EFD0A32FD05042DFD055EFD0A322CFD0504FD055E33FD09322CFD%05046FFD0AB6FD25FFC4FD0AB626FD040A33335E335E0A320A320A320A32%0A320A042694936F04FD055EFD0A3204266F946F26335E335E335D0A320A%320A320A320A32FD05049AFD0AB6FD25FFCAFD09B694FD150A26FD04B66F%FD055EFD0A322C93B6B6B693FD0F0AFD060451FD09B6BCFD26FFC4BDFD05%B6BCBDA8FD150A6FFD04B693FD055EFD0A3226FD05B604FD0F0AFD050458%C4BDFD05B6BCBDFD27FF7D2DBCFD04B6C4FFA8FD130A4BFD08B6A05E5E5E%FD08325794FD07B6932CFD0D0AFD05042DFFFFBDFD04B65158FD26FF7D04%0426FD04B6FFFFA8FD130AFD0AB67C5E5EFD08326FFD09B66FFD0D0AFD05%0458FFFFC4B6B6B69326042DFD25FF2D040404269BC4FFFFFFA8FD0A0A75%4B2CFD050A51FD0AB6765E5EFD08329AFD09B69AFD070A754B2C0A0A0AFD%05042DFFFFFFCAC34B26040404FD25FF2DFD040452FD04FFA8FD080A26B6%B6B693FD050A04FD0AB67C5E5EFD08326FFD09B66FFD050A26B6B6B6930A%0A0AFD05042DFD04FF7DFD0504FD25FFFD05047DFD04FFA8FD050A335E5E%BCFD04B651FD053251FD08B69A5E5E5EFD08325794FD07B694825E5E3332%32BCFD04B651322CFD05042DFD04FFA8FD0504A8FD20FF7D587D52FD0604%7D587D83A8FD050A337CBCFD06B66FFD06326FFD04B69382FD045EFD0A32%4AFD05B658FD045E5D509AFD06B66F32FD050458A87D587D27FD05042D7D%587DA8FD1BFF7DFD0E0458FD050A51FD09B693FD053226FD04B66FFD055E%FD0A322C93B6B6B693FD055E51FD09B693FD05042D27FD0D042DFD1BFFFD%0F042DFD050A76FD0AB6F82C2C3232044A948D6F04FD055EFD0A32044A69%946F265E5E572D266FFD0AB6FD05042DFD0F04A8FD19FFA8FD0F042DFD05%0A75FD0AB64B26262C3204FD04262DFD055EFD0A322CFD0426045E332626%266FFD0AB6FD15047DFD1AFFFD0F0458FD050A33FD09B66FFD0A2604FD05%5EFD0A3204FD0B26FD09B675FD050458FD0F04FD1CFF52522D2D042D0404%04260404047CA8FD050A33827CBCFD04B69375FD0B262DFD055E32322C2C%FD06322CFD0B264B6FFD05B6937B2CFD05042DA8040404260404042D042D%26512DA8FD22FFA851FD0626A8FD050A335E5E94FD04B64B0432FD0A26F8%FD055E0AFD0404FD053204FD0A263304046FFD04B6573232FD05042D27FD%06267DFD2BFFA751FD042651FD050A335E5E8294B6B670040404322CFD08%262DFD055E2CFD04040AFD04322CFD08262D5E0A04042794B6B69932322C%FD0504FD06267CFD2EFFA8FD052604FD040A33FD045E26260404040A3232%2CFD072604FD055EFD05042CFD043204FD07262D5E5E33FD04042656FD04%32FD0504FD05267DFD30FFA8FD0526FD040A33FD045E33FD05043232322C%FD062604FD055EFD05040AFD04322C04FD0526335E5E5EFD05040AFD0432%FD0504FD05267DFD32FF52FD0426FD040A33FD045E0AFD0504FD043204FD%0526045E5E5E3333FD05040A0A32323204FD06265E5E33330AFD0504320A%323232FD0404F826262627FD34FFFD0426040A0A0A332DFD0D0432FD0526%2D332DFD0D042CFD052658FD0D040A2CFD0404FD0426A8FD34FF7CFD0426%0A0A0A2DFD0F04FD0526FD1104FD0526FD1304FD0526FD35FF7DFD04260A%0A0AFD1104FD04262DFD0F042CFD0526FD1304FD042651FD35FFA8FD0426%FD040AFD1004FD0426F8FD0F04F8FD0526FD1304FD04267DFD35FFA8FD04%260A0A0A2D2DFD0D042C04FD04262D33FD0E042CFD0426045EFD0D04262C%040404FD04267CFD32FFA7A7A0A77CA075A075A075A075A075A075A075A0%75A075A075A075A075A075A075A075A075A075A075A075A075A075A075A0%75A075A075A075A075A075A075A075A075A075A075A075A07575747B759F%7CFD2FFFCAFD4AA075FD04749FFD2FFFA7FD4AA09FFD047475FD2FFFCAFD%4AA075FD0474A0FD2FFFA7FD4AA09FFD047475FD2FFFCAFD4AA075FD0474%A0FD34FFA1FD054A6EFD0974FD064AFD0B74FD054A6EFD0A74FD054AFD0B%74FD054A9FFD39FF7DFD064AFD0974FD054AFD0C74FD064AFD0974FD064A%FD0A74FD064A75FD39FFA1FD054A6EFD0974FD064AFD0B74FD054A6EFD0A%74FD054AFD0B74FD054AA0FD39FF7CFD064AFD0974FD054AFD0B74FD074A%FD0974FD064AFD0A74FD064A75FD39FFA1FD054AFD0A74FD064AFD0B74FD%054AFD0A746EFD054AFD0A746EFD054AA0FD39FF7DFD064AFD0974FD054A%FD0C74FD064AFD0974FD064AFD0A74FD064A75FD39FFA1FD054AFD0A74FD%064AFD0B74FD054AFD0A746EFD054AFD0A746EFD054AA0FD39FF7DFD064A%FD0974FD064AFD0B74FD064AFD0974FD064AFD0A74FD064A75FD39FFA1FD%054A6EFD0974FD064AFD0B74FD054A6EFD0A74FD054AFD0B74FD054A9FFD%39FF7DFD064AFD0974FD054AFD0C74FD064AFD0974FD064AFD0A74FD064A%75FD34FFA7A7A0A075A075A075A075A075A075A075A075A075A075A075A0%75A075A075A075A075A075A075A075A075A075A075A075A075A075A075A0%75A075A075A075A075A075A075A075A075A07575759F759F7CFD2FFFCAFD%4AA075FD04749FFD2FFFA7FD4AA09FFD047475FD2FFFCAFD4AA075FD0474%A0FD2FFFA7FD4AA09FFD047475FD2FFFCAFD06A09FA09FA09FA09FA09FA0%9FA09FA09FA09FA09FA09FA09FA09FA09FA09FA09FA09FA09FA09FA09FA0%9FA09FA09FA09FA09FA09FA09FA09FA09FA09FA09FA09FA09FA09FA075FD%0474A0FD2FFFA1FD05A0FD4A7475FD2FFFCAFD05A0FD4A74A0FD2FFFA7FD%05A0FD4A7475FD2FFFCAFD05A0FD4A749FFD2FFFA7FD05A0FD4A7475FD14%FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0078 0.1961 0.9373 0 1 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 16) Pc0.0078 0.8196 0.3137 0 1 0.2 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 31) Pc0.1608 0.3294 0.498 0.0431 0.8 0.6 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 56) Pc0.3569 0.2274 0.9961 0.0667 0.6 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 94) Pc0.2863 0.451 0.9412 0.1608 0.6 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 100) Pc0.6 0 0.6588 0 0.4 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 122) Pc0.3765 0.6196 0.9412 0.3608 0.4 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 142) Pc0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 166) Pc0.6235 0.4745 0.9922 0.4627 0.2 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 178) Pc0.9333 0.2078 1 0.0745 0 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 208) Pc0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 214) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 O0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR282.5 447 m283.459 451.5137 281 451.5137 v278.5415 451.5137 278.5 447 Y278.5 436.5 L282.5 436.5 L282.5 447 Lf0 Ap0.3569 0.2274 0.9961 0.0667 0.6 0.6 0 Xa280.5 451.5137 m278.5 451.5137 278.5 447.5 Y278.625 445 280.5 445 v282.375 445 282.5 447.5 Y282.5 451.5137 280.5 451.5137 vf0.0078 0.1961 0.9373 0 1 0.8 0 Xa280.2256 445.0234 m281.8379 445.2598 281.5 447.9863 Y281.5 451 L281.0005 451.5132 280.5352 451.5093 V280.5229 451.5093 280.5127 451.5137 280.5 451.5137 c278.5 451.5137 278.5 447.5 Y278.6152 445.2559 280.2256 445.0234 Vf0.6 0 0.6588 0 0.4 0.8 0.4 Xa280 444 m278.5 444.5 L278.5 436.5 L280 436.5 L280 444 Lf0 R0.9333 0.2078 1 0.0745 0 0.4 0 XA278.5625 444.5 m282.5 444.5 lS278.5625 440.9238 m282.5 440.9238 lS1 Ap282.5 447 m282.5 451.5137 280.5 451.5137 v278.5 451.5137 278.5 447 Y278.5 436.5 L282.5 436.5 L282.5 447 Ls0.9373 0.3922 0.9961 0.4 0 0.2 0 XA2 J278.5 436.5 m282.5 436.5 L282.5 447 L282.5 447.6733 282.3848 448.4995 vS0 O0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa0 J278.5 451 m279.459 455.5137 277 455.5137 v274.5415 455.5137 274.5 451 Y274.5 436.5 L278.5 436.5 L278.5 451 Lf0 Ap0.3569 0.2274 0.9961 0.0667 0.6 0.6 0 Xa276.5 455.5137 m274.5 455.5137 274.5 451.5 Y274.625 449 276.5 449 v278.375 449 278.5 451.5 Y278.5 455.5137 276.5 455.5137 vf0.0078 0.1961 0.9373 0 1 0.8 0 Xa276.2256 449.0234 m277.8379 449.2598 277.5 451.9863 Y277.5 455 L277.0005 455.5132 276.5352 455.5093 V276.5229 455.5093 276.5127 455.5137 276.5 455.5137 c274.5 455.5137 274.5 451.5 Y274.6152 449.2559 276.2256 449.0234 Vf0.6 0 0.6588 0 0.4 0.8 0.4 Xa276 448 m274.5 448.5 L274.5 436.5 L276 436.5 L276 448 Lf0 R0.9333 0.2078 1 0.0745 0 0.4 0 XA274.5625 446.5137 m278.5 446.5137 lS274.5625 442.5 m278.5 442.5 lS1 Ap278.5 451 m278.5 455.5137 276.5 455.5137 v274.5 455.5137 274.5 451 Y274.5 436.5 L278.5 436.5 L278.5 451 Ls0.9373 0.3922 0.9961 0.4 0 0.2 0 XA2 J274.5 436.5 m278.5 436.5 L278.5 451 L278.5 451.6733 278.3848 452.4995 vS0 O0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa0 J274.5 447 m275.459 451.5137 273 451.5137 v270.5415 451.5137 270.5 447 Y270.5 436.5 L274.5 436.5 L274.5 447 Lf0 Ap0.3569 0.2274 0.9961 0.0667 0.6 0.6 0 Xa272.5 451.5137 m270.5 451.5137 270.5 447.5 Y270.625 445 272.5 445 v274.375 445 274.5 447.5 Y274.5 451.5137 272.5 451.5137 vf0.0078 0.1961 0.9373 0 1 0.8 0 Xa272.2256 445.0234 m273.8379 445.2598 273.5 447.9863 Y273.5 451 L273.0005 451.5132 272.5352 451.5093 V272.5229 451.5093 272.5127 451.5137 272.5 451.5137 c270.5 451.5137 270.5 447.5 Y270.6152 445.2559 272.2256 445.0234 Vf0.6 0 0.6588 0 0.4 0.8 0.4 Xa272 444 m270.5 444.5 L270.5 436.5 L272 436.5 L272 444 Lf0 R0.9333 0.2078 1 0.0745 0 0.4 0 XA270.5625 444.5 m274.5 444.5 lS270.5625 440.9238 m274.5 440.9238 lS1 Ap274.5 447 m274.5 451.5137 272.5 451.5137 v270.5 451.5137 270.5 447 Y270.5 436.5 L274.5 436.5 L274.5 447 Ls0.9373 0.3922 0.9961 0.4 0 0.2 0 XA2 J270.5 436.5 m274.5 436.5 L274.5 447 L274.5 447.6733 274.3848 448.4995 vS0 Ap0.6235 0.4745 0.9922 0.4627 0.2 0.2 0 XA0 J 0.75 w267.5 439.5 m270 439.5 270 437 vS272 439.5 m274.5 439.5 274.5 437 v274.5 440 lS0 O0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa1 w273.4756 437.9751 m273.2954 437.9751 272.9756 438 y272.9512 438.3462 272.9512 438.5 v272.9512 438.7627 272.7383 438.9751 272.4756 438.9751 c272.2129 438.9751 272 438.7627 272 438.5 c272 438.3696 271.9756 438 y271.5654 437.9751 271.4756 437.9751 v271.2129 437.9751 271 437.7627 271 437.5 c271 437.2373 271.2129 437.0249 271.4756 437.0249 c271.6572 437.0249 273.2954 437.0249 273.4756 437.0249 c273.7383 437.0249 273.9512 437.2373 273.9512 437.5 c273.9512 437.7627 273.7383 437.9751 273.4756 437.9751 cf269.4756 439.9502 m269.2954 439.9502 268.9756 439.9751 y268.9512 440.3213 268.9512 440.4751 v268.9512 440.7378 268.7383 440.9502 268.4756 440.9502 c268.2129 440.9502 268 440.7378 268 440.4751 c268 440.3447 267.9756 439.9751 y267.5654 439.9502 267.4756 439.9502 v267.2129 439.9502 267 439.7378 267 439.4751 c267 439.2124 267.2129 439 267.4756 439 c267.6572 439 269.2954 439 269.4756 439 c269.7383 439 269.9512 439.2124 269.9512 439.4751 c269.9512 439.7378 269.7383 439.9502 269.4756 439.9502 cf0 R0.6235 0.4745 0.9922 0.4627 0.2 0.2 0 XA0.75 w285.5 439.5 m283 439.5 283 437 vS281 439.5 m278.5 439.5 278.5 437 v278.5 440 lS0 O0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa1 w283.5244 439.9502 m283.7046 439.9502 284.0244 439.9751 y284.0488 440.3213 284.0488 440.4751 v284.0488 440.7378 284.2617 440.9502 284.5244 440.9502 c284.7871 440.9502 285 440.7378 285 440.4751 c285 440.3447 285.0244 439.9751 y285.4346 439.9502 285.5244 439.9502 v285.7871 439.9502 286 439.7378 286 439.4751 c286 439.2124 285.7871 439 285.5244 439 c285.3428 439 283.7046 439 283.5244 439 c283.2617 439 283.0488 439.2124 283.0488 439.4751 c283.0488 439.7378 283.2617 439.9502 283.5244 439.9502 cf281.5244 438 m281.3442 438 281.0244 438.0249 y281 438.3711 281 438.5249 v281 438.7876 280.7871 439 280.5244 439 c280.2617 439 280.0488 438.7876 280.0488 438.5249 c280.0488 438.3945 280.0244 438.0249 y279.6143 438 279.5244 438 v279.2617 438 279.0488 437.7876 279.0488 437.5249 c279.0488 437.2622 279.2617 437.0498 279.5244 437.0498 c279.7061 437.0498 281.3442 437.0498 281.5244 437.0498 c281.7871 437.0498 282 437.2622 282 437.5249 c282 437.7876 281.7871 438 281.5244 438 cf277.5244 438 m277.3442 438 277.0244 438.0249 y277 438.3711 277 438.5249 v277 438.7876 276.7871 439 276.5244 439 c276.2617 439 276.0488 438.7876 276.0488 438.5249 c276.0488 438.3945 276.0244 438.0249 y275.6143 438 275.5244 438 v275.2617 438 275.0488 437.7876 275.0488 437.5249 c275.0488 437.2622 275.2617 437.0498 275.5244 437.0498 c275.7061 437.0498 277.3442 437.0498 277.5244 437.0498 c277.7871 437.0498 278 437.2622 278 437.5249 c278 437.7876 277.7871 438 277.5244 438 cf1 Ap0.2863 0.451 0.9412 0.1608 0.6 0.4 0 Xa283 433 m270 433 L270 436.5 L283 436.5 L283 433 Lf0 Ap0 R0.3765 0.6196 0.9412 0.3608 0.4 0.2 0 XA270.5 437 m270.5 433.5 lS282.4585 436.5 m282.4585 433 lS279.4375 437 m279.4375 433.5 lS273.375 437 m273.375 433.5 lS276.5 437 m276.5 433.5 lS1 Ap0 O0.2863 0.451 0.9412 0.1608 0.6 0.4 0 Xa269.5 434 m284 434 L284 432 L269.5 432 L269.5 434 Lf0 Ap0 R0.2863 0.451 0.9412 0.1608 0.6 0.4 0 XA270 436.5 m284 436.5 lS0.1608 0.3294 0.498 0.0431 0.8 0.6 0.4 XA269.5 432 m269.5 433.5 l283 433.5 lS269 436.5 m283 436.5 lS*u0 O0.0078 0.8196 0.3137 0 1 0.2 0.4 Xa272.5308 440.0063 m272.52 440.0063 272.5107 440.001 272.5 440 C272.501 440.0112 272.5063 440.02 272.5063 440.0313 c272.5063 440.2939 272.2935 440.5063 272.0308 440.5063 c271.7681 440.5063 271.5552 440.2939 271.5552 440.0313 c271.5552 440.02 271.5605 440.0112 271.5615 440 C271.5508 440.001 271.5415 440.0063 271.5308 440.0063 c271.2681 440.0063 271.0552 439.7939 271.0552 439.5313 c271.0552 439.2686 271.2681 439.0562 271.5308 439.0562 c271.5415 439.0562 271.5508 439.0615 271.5615 439.0625 C271.5605 439.0513 271.5552 439.0425 271.5552 439.0313 c271.5552 438.7686 271.7681 438.5562 272.0308 438.5562 c272.2935 438.5562 272.5063 438.7686 272.5063 439.0313 c272.5063 439.0425 272.501 439.0513 272.5 439.0625 C272.5107 439.0615 272.52 439.0562 272.5308 439.0562 c272.7935 439.0562 273.0063 439.2686 273.0063 439.5313 c273.0063 439.7939 272.7935 440.0063 272.5308 440.0063 cf1 D272 439.5 m272.001 439.5112 272.0063 439.52 272.0063 439.5313 c272.0063 439.5425 272.001 439.5513 272 439.5625 C272.0107 439.5615 272.02 439.5562 272.0308 439.5562 c272.0415 439.5562 272.0508 439.5615 272.0615 439.5625 C272.0605 439.5513 272.0552 439.5425 272.0552 439.5313 c272.0552 439.52 272.0605 439.5112 272.0615 439.5 C272.0508 439.501 272.0415 439.5063 272.0308 439.5063 c272.02 439.5063 272.0107 439.501 272 439.5 Cf*U*u0 D269.5308 442.0063 m269.52 442.0063 269.5107 442.001 269.5 442 C269.501 442.0112 269.5063 442.02 269.5063 442.0313 c269.5063 442.2939 269.2935 442.5063 269.0308 442.5063 c268.7681 442.5063 268.5552 442.2939 268.5552 442.0313 c268.5552 442.02 268.5605 442.0112 268.5615 442 C268.5508 442.001 268.5415 442.0063 268.5308 442.0063 c268.2681 442.0063 268.0552 441.7939 268.0552 441.5313 c268.0552 441.2686 268.2681 441.0562 268.5308 441.0562 c268.5415 441.0562 268.5508 441.0615 268.5615 441.0625 C268.5605 441.0513 268.5552 441.0425 268.5552 441.0313 c268.5552 440.7686 268.7681 440.5562 269.0308 440.5562 c269.2935 440.5562 269.5063 440.7686 269.5063 441.0313 c269.5063 441.0425 269.501 441.0513 269.5 441.0625 C269.5107 441.0615 269.52 441.0562 269.5308 441.0562 c269.7935 441.0562 270.0063 441.2686 270.0063 441.5313 c270.0063 441.7939 269.7935 442.0063 269.5308 442.0063 cf1 D269 441.5 m269.001 441.5112 269.0063 441.52 269.0063 441.5313 c269.0063 441.5425 269.001 441.5513 269 441.5625 C269.0107 441.5615 269.02 441.5562 269.0308 441.5562 c269.0415 441.5562 269.0508 441.5615 269.0615 441.5625 C269.0605 441.5513 269.0552 441.5425 269.0552 441.5313 c269.0552 441.52 269.0605 441.5112 269.0615 441.5 C269.0508 441.501 269.0415 441.5063 269.0308 441.5063 c269.02 441.5063 269.0107 441.501 269 441.5 Cf*U*u0 D284.5308 442.0063 m284.52 442.0063 284.5107 442.001 284.5 442 C284.501 442.0112 284.5063 442.02 284.5063 442.0313 c284.5063 442.2939 284.2935 442.5063 284.0308 442.5063 c283.7681 442.5063 283.5552 442.2939 283.5552 442.0313 c283.5552 442.02 283.5605 442.0112 283.5615 442 C283.5508 442.001 283.5415 442.0063 283.5308 442.0063 c283.2681 442.0063 283.0552 441.7939 283.0552 441.5313 c283.0552 441.2686 283.2681 441.0562 283.5308 441.0562 c283.5415 441.0562 283.5508 441.0615 283.5615 441.0625 C283.5605 441.0513 283.5552 441.0425 283.5552 441.0313 c283.5552 440.7686 283.7681 440.5562 284.0308 440.5562 c284.2935 440.5562 284.5063 440.7686 284.5063 441.0313 c284.5063 441.0425 284.501 441.0513 284.5 441.0625 C284.5107 441.0615 284.52 441.0562 284.5308 441.0562 c284.7935 441.0562 285.0063 441.2686 285.0063 441.5313 c285.0063 441.7939 284.7935 442.0063 284.5308 442.0063 cf1 D284 441.5 m284.001 441.5112 284.0063 441.52 284.0063 441.5313 c284.0063 441.5425 284.001 441.5513 284 441.5625 C284.0107 441.5615 284.02 441.5562 284.0308 441.5562 c284.0415 441.5562 284.0508 441.5615 284.0615 441.5625 C284.0605 441.5513 284.0552 441.5425 284.0552 441.5313 c284.0552 441.52 284.0605 441.5112 284.0615 441.5 C284.0508 441.501 284.0415 441.5063 284.0308 441.5063 c284.02 441.5063 284.0107 441.501 284 441.5 Cf*U*u0 D281.5308 440.0063 m281.52 440.0063 281.5107 440.001 281.5 440 C281.501 440.0112 281.5063 440.02 281.5063 440.0313 c281.5063 440.2939 281.2935 440.5063 281.0308 440.5063 c280.7681 440.5063 280.5552 440.2939 280.5552 440.0313 c280.5552 440.02 280.5605 440.0112 280.5615 440 C280.5508 440.001 280.5415 440.0063 280.5308 440.0063 c280.2681 440.0063 280.0552 439.7939 280.0552 439.5313 c280.0552 439.2686 280.2681 439.0562 280.5308 439.0562 c280.5415 439.0562 280.5508 439.0615 280.5615 439.0625 C280.5605 439.0513 280.5552 439.0425 280.5552 439.0313 c280.5552 438.7686 280.7681 438.5562 281.0308 438.5562 c281.2935 438.5562 281.5063 438.7686 281.5063 439.0313 c281.5063 439.0425 281.501 439.0513 281.5 439.0625 C281.5107 439.0615 281.52 439.0562 281.5308 439.0562 c281.7935 439.0562 282.0063 439.2686 282.0063 439.5313 c282.0063 439.7939 281.7935 440.0063 281.5308 440.0063 cf1 D281 439.5 m281.001 439.5112 281.0063 439.52 281.0063 439.5313 c281.0063 439.5425 281.001 439.5513 281 439.5625 C281.0107 439.5615 281.02 439.5562 281.0308 439.5562 c281.0415 439.5562 281.0508 439.5615 281.0615 439.5625 C281.0605 439.5513 281.0552 439.5425 281.0552 439.5313 c281.0552 439.52 281.0605 439.5112 281.0615 439.5 C281.0508 439.501 281.0415 439.5063 281.0308 439.5063 c281.02 439.5063 281.0107 439.501 281 439.5 Cf*U*u0 D279.0308 441.0063 m279.02 441.0063 279.0107 441.001 279 441 C279.001 441.0112 279.0063 441.02 279.0063 441.0313 c279.0063 441.2939 278.7935 441.5063 278.5308 441.5063 c278.2681 441.5063 278.0552 441.2939 278.0552 441.0313 c278.0552 441.02 278.0605 441.0112 278.0615 441 C278.0508 441.001 278.0415 441.0063 278.0308 441.0063 c277.7681 441.0063 277.5552 440.7939 277.5552 440.5313 c277.5552 440.2686 277.7681 440.0562 278.0308 440.0562 c278.0415 440.0562 278.0508 440.0615 278.0615 440.0625 C278.0605 440.0513 278.0552 440.0425 278.0552 440.0313 c278.0552 439.7686 278.2681 439.5562 278.5308 439.5562 c278.7935 439.5562 279.0063 439.7686 279.0063 440.0313 c279.0063 440.0425 279.001 440.0513 279 440.0625 C279.0107 440.0615 279.02 440.0562 279.0308 440.0562 c279.2935 440.0562 279.5063 440.2686 279.5063 440.5313 c279.5063 440.7939 279.2935 441.0063 279.0308 441.0063 cf1 D278.5 440.5 m278.501 440.5112 278.5063 440.52 278.5063 440.5313 c278.5063 440.5425 278.501 440.5513 278.5 440.5625 C278.5107 440.5615 278.52 440.5562 278.5308 440.5562 c278.5415 440.5562 278.5508 440.5615 278.5615 440.5625 C278.5605 440.5513 278.5552 440.5425 278.5552 440.5313 c278.5552 440.52 278.5605 440.5112 278.5615 440.5 C278.5508 440.501 278.5415 440.5063 278.5308 440.5063 c278.52 440.5063 278.5107 440.501 278.5 440.5 Cf*U*u0 D275.0308 441.0063 m275.02 441.0063 275.0107 441.001 275 441 C275.001 441.0112 275.0063 441.02 275.0063 441.0313 c275.0063 441.2939 274.7935 441.5063 274.5308 441.5063 c274.2681 441.5063 274.0552 441.2939 274.0552 441.0313 c274.0552 441.02 274.0605 441.0112 274.0615 441 C274.0508 441.001 274.0415 441.0063 274.0308 441.0063 c273.7681 441.0063 273.5552 440.7939 273.5552 440.5313 c273.5552 440.2686 273.7681 440.0562 274.0308 440.0562 c274.0415 440.0562 274.0508 440.0615 274.0615 440.0625 C274.0605 440.0513 274.0552 440.0425 274.0552 440.0313 c274.0552 439.7686 274.2681 439.5562 274.5308 439.5562 c274.7935 439.5562 275.0063 439.7686 275.0063 440.0313 c275.0063 440.0425 275.001 440.0513 275 440.0625 C275.0107 440.0615 275.02 440.0562 275.0308 440.0562 c275.2935 440.0562 275.5063 440.2686 275.5063 440.5313 c275.5063 440.7939 275.2935 441.0063 275.0308 441.0063 cf1 D274.5 440.5 m274.501 440.5112 274.5063 440.52 274.5063 440.5313 c274.5063 440.5425 274.501 440.5513 274.5 440.5625 C274.5107 440.5615 274.52 440.5562 274.5308 440.5562 c274.5415 440.5562 274.5508 440.5615 274.5615 440.5625 C274.5605 440.5513 274.5552 440.5425 274.5552 440.5313 c274.5552 440.52 274.5605 440.5112 274.5615 440.5 C274.5508 440.501 274.5415 440.5063 274.5308 440.5063 c274.52 440.5063 274.5107 440.501 274.5 440.5 Cf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF