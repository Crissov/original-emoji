%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (769\211\316\216R.ai)%%CreationDate: (7/29/03) (12:13 AM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 7%AI8_OpenToView: 243 469.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 6666673%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 4904 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFC37FDFC37FDFC37FDFC37FDFC37FDFC37FDFC37FDFC37FDFC37%FDFC37FDFC37FDFC37FDFC37FDFC37FDFC37FDFC37FDFC37FDFC37FDFC37%FDFC37FDFC37FDFC37FDFC37FDFC37FD8A37522FFD13372852FD13375428%FD5437214429FD11372844444CFD11372F444BFD54374444442FFD0F3728%FD04444CFD0F3753444444FD533730FD044429FD0D3727FD06444CFD0D37%2FFD044430FD523728FD05442FFD0B374CFD08444CFD0B3753FD054454FD%52374BFD06442FFD093727FD0A444CFD093753FD064427FD5237FD08442F%FD073728FD0C444CFD073753FD07444BFD51372FFD094429FD053727FD0E%444CFD05372FFD094436FD503752FD0A442F37373728FD10447537373777%FD0A442FFD503720FD0B44293728FD11446E6F37526E6EFD09444CFD4F37%30FD0D4421FD12446E6E6F6E6EFD0B44FD4F3753FD2044FD066EFD0A4430%FD4E3745FD2044FD056EFD0B4453FD4D3730FD2144FD066EFD0A4421FD4D%3753FD2144FD056EFD0C4436FD4C3727FD2144FD066EFD0B442FFD4C37FD%2244FD056EFD0C444BFD4B3753FD2244FD066EFD0C4436FD4A3727FD2244%FD056EFD0D4453FD493730FD10446EFD1344FD056EFD0C4421FD493753FD%0F446EFD1344FD056EFD0E44FD493721FD0F446EFD1444FD056EFD0D4453%FD473730FD0F44686EFD1344FD066EFD0D4427FD47374CFD0F446E6EFD14%44FD056EFD0E4430FD4637FD0F446E6E6EFD1444FD066EFD0D4453FD4537%2FFD0F446E6E6EFD1444FD056EFD0E4420FD45374CFD0F446E6E6EFD1544%FD056EFD0E4430FD4437FD0F446E6E6EFD1744FD046EFD0E444CFD43372F%FD0E44FD056EFD1544FD056E68FD0E44FD43374BFD0E44FD046EFD1744FD%056EFD0E442FFD41375AFD0E4468FD046EFD1744FD066EFD0D444CFD4137%27FD0E44FD056EFD1744FD056EFD0F4436FD40374BFD0D44FD056EFD1944%FD056EFD0E4428FD3F372FFD0E44FD056EFD1A44FD056EFD0D4445FD3F37%FD0E44FD066EFD1944FD066E4AFD0D4453FD3D372FFD0E44FD056EFD1B44%FD056EFD0E4421FD3D374CFD0D44FD066EFD1C44FD056EFD0E4430FD3B37%36FD0D44FD076EFD1D44FD056EFD0D444CFD3B3728FD0D44FD066EFD1E44%FD066EFD0D44FD3A3730FD0E44FD056EFD2044FD046EFD0E4428FD393753%FD0D44FD056E68FD2044FD056EFD0D444BFD393720FD0C44FD066EFD2244%FD056EFD0D442FFD37372FFD0C44FD076EFD2344FD056EFD0D44FD373745%FD0C44FD056EFD2644FD046EFD0D4429FD353754FD0C44FD066EFD25444A%FD056EFD0C444BFD353720FD0C44FD056EFD2844FD046EFD0D442FFD3337%2FFD0C44FD056EFD2944FD056EFD0D44FD323730FD0C44FD056EFD2B44FD%056EFD0C4428FD313753FD0B44FD056EFD2D44FD056EFD0B4445FD303736%FD0C44FD046EFD2F44FD056EFD0B444CFD2F374BFD0B44FD046EFD23446E%FD0D44FD046EFD0C4436FD2D372FFD0C446E6E6EFD34446E6E68FD0B4421%FD2D374BFD0B446E6E6EFD25446EFD0F446E6E6E68FD0B442FFD2B3753FD%0B446E6E6EFD27446EFD0F446E6E6EFD0C4430FD2A37FD0B446E6E6EFD27%446E6E6EFD0F446E6E6EFD0B444CFD293721FD0A446EFD2B446EFD13446E%FD0B442FFD273729FD0A446E6E6EFD29446E6E6EFD13446EFD0B44FD2637%30FD38446E6E6EFD13446EFD0A4427FD25374CFD38446E6EFD20442FFD23%3728FD39446E6E6EFD204430FD213736FD3A44FD046EFD1F444BFD2137FD%3B446E6E6EFD214453FD1F3728FD274468FD14446E6E6EFD21445AFD1D37%29FD28446EFD1344FD056EFD204420FD1C3730FD28446E6EFD1444FD056E%FD204445FD1A37304BFD27446E6E6EFD1444FD046EFD224428FD19374BFD%28446E6EFD1544FD056EFD22442FFD17374CFD29446E6EFD1644FD056EFD%22442FFD153754FD29446E6E6EFD1544FD066E4AFD21444530FD133736FD%29446E6E6EFD1744FD056EFD23444530FD11375AFD11446EFD1744FD056E%FD1644FD066EFD23444B36FD103720FD10446EFD1744FD056EFD1744FD07%6EFD23444BFD0F3745FD10446E6E6EFD1544FD066EFD174468FD076EFD23%4452FD0D3721FD10446E6E6EFD1644FD066EFD1844FD066EFD25444CFD0B%3728FD1044FD046EFD1444FD076EFD1944FD076EFD25444CFD093727FD10%44FD056EFD1444FD066EFD1B44FD076EFD25444CFD07374CFD0E44FD076E%FD1344FD086EFD1A44FD096EFD25444CFD053727FD0E44FD076EFD1344FD%076EFD1D44FD086EFD26444C37373728FD0E44FD096EFD0F44FD0A6EFD1E%44FD086EFD26444C3727FD0C44FD0B6EFD0D446E44FD096EFD2144FD076E%FD27444C%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0 0 0 0 1 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 5) Pc0.0196 0.5961 0.9137 0 1 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 28) Pc0.0235 0.8078 0.9176 0 1 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 33) Pc0.0118 0.9608 0.9137 0 1 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 39) Pc0.3922 0.0745 0 0 0.6 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 83) Pc0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 106) Pc0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 148) Pc0.8078 0.1725 0 0 0.2 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 161) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(a) Ln0 A0 O0.8078 0.1725 0 0 0.2 0.6 1 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 Lf0 Ap0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa282.4507 439.5498 m280.4507 444.0498 280 447 Y278 445 L276 447 L274 445 L272 447 L271.4507 444.0498 269.4507 439.5498 v267.4507 435.0498 264 432 Y275.9507 432 L288 432 L284.4507 435.0498 282.4507 439.5498 vf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa282.3042 436.1963 m278.5 440.5498 278.5 443.5498 V278.5 445.5 L278 445 L277.5 445.5 L277.5 444.5498 L277.5 439.0498 282.3042 436.1963 Yf271.9507 439.5498 m270.9287 437.8198 269.5 436.0498 y271.8003 437.7505 273 439.5498 v274 441.0498 274 443.5498 y273.0698 441.4448 271.9507 439.5498 vf274.5 435.5 m273.0493 432 270.5 432 V273.0889 432 L274.4937 433.3066 274.5 435.5 Yf268.3433 432 m268.9556 432.8638 269 434 Y267.9053 432.4365 266.2173 432.0142 v266.2061 432.0112 266.1982 432.0034 266.1875 432 C268.3433 432 Lf280.7065 432 m279.4263 433.2295 278 437.5 Y278.0034 433.7612 279.1816 432 V280.7065 432 LfLB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 4 255 255 79 0 50 Lb(b) Ln0 A1 Ap0 O0.8078 0.1725 0 0 0.2 0.6 1 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 Lf0 Ap0 R0.3922 0.0745 0 0 0.6 0.8 1 XA1 J277.5 451.5 m277.5 449.9863 279.5 450 279.5 448.5 c279.5 446.5 277.5 446.9028 277.5 445.5 c277.5 444.0972 277.5 440 yS0 0 0 0 1 1 1 XA279.0005 449.5903 m279.2871 449.3174 279.5 448.9893 279.5 448.5 c279.5 447.8472 279.2871 447.4507 279.0005 447.1636 cS0.3922 0.0745 0 0 0.6 0.8 1 XA273.5 451.5 m273.5 449.9863 275.5 450 275.5 448.5 c275.5 446.5 273.5 446.9028 273.5 445.5 c273.5 444.0972 273.5 440 yS0 0 0 0 1 1 1 XA275.0005 449.5903 m275.2871 449.3174 275.5 448.9893 275.5 448.5 c275.5 447.8472 275.2871 447.4507 275.0005 447.1636 cS0 O0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa0 J283.5 440.5 m281.5 443 280.8999 443.6982 280.5137 445 c280.1348 446.2769 280 447 Y278 445 L276 447 L274 445 L272 447 L271.8652 446.2769 271.4863 445 v271.1001 443.6982 270.5 443 268.5 440.5 c265.4238 436.6543 264 432 Y288 432 L286.5762 436.6543 283.5 440.5 vf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa282.3042 436.1963 m278.5 440.5498 278.5 443.5498 V278.5 445.5 L278 445 L277.5 445.5 L277.5 444.5498 L277.5 439.0498 282.3042 436.1963 Yf271.9507 439.5498 m270.9287 437.8198 269.5 436.0498 y271.8003 437.7505 273 439.5498 v274 441.0498 274 443.5498 y273.0698 441.4448 271.9507 439.5498 vf274.5 435.5 m273.0493 432 270.5 432 V273.0889 432 L274.4937 433.3066 274.5 435.5 Yf268.3433 432 m268.9556 432.8638 269 434 Y267.9053 432.4365 266.2173 432.0142 v266.2061 432.0112 266.1982 432.0034 266.1875 432 C268.3433 432 Lf280.7065 432 m279.4263 433.2295 278 437.5 Y278.0034 433.7612 279.1816 432 V280.7065 432 LfLB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 5 255 79 255 0 50 Lb(c) Ln0 A1 Ap0 O0.8078 0.1725 0 0 0.2 0.6 1 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 Lf0 Ap0 R0.3922 0.0745 0 0 0.6 0.8 1 XA1 J280 437 m280 441.0972 280 442.5 v280 443.9028 278 443.5 278 445.5 c278 447 280 447.4863 280 449 c280 451 280 450 280 451 c280 452.5 282 452.5 282 454.5 cS274 440 m274 444.0972 274 445.5 v274 446.9028 272 446.5 272 448.5 c272 450 274 449.9863 274 451.5 c274 453 272 453 272 454.5 cS0 0 0 0 1 1 1 XA278.7573 447 m279.3237 447.5869 280 448.1196 280 449 c280 451 280 450 280 451 cS272.0493 448 m272.0176 448.1479 272 448.3135 272 448.5 c272 449.8135 273.5332 449.9663 273.9146 451 cS0 O0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa0 J285.9995 434.1172 m284.8916 435.4404 283.8584 439.7114 283 442 c281.5 446 280 447 Y278 445 L276 447 L274 445 L272 447 L270.5 446 269 442 v268.1416 439.7114 267.1084 435.4404 266.0005 434.1172 c264.8755 432.7734 264 432 Y288 432 L287.1245 432.7734 285.9995 434.1172 vf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa282.3042 436.1963 m278.5 440.5498 278.5 443.5498 V278.5 445.5 L278 445 L277.5 445.5 L277.5 444.5498 L277.5 439.0498 282.3042 436.1963 Yf271.9507 439.5498 m270.9287 437.8198 269.5 436.0498 y271.8003 437.7505 273 439.5498 v274 441.0498 274 443.5498 y273.0698 441.4448 271.9507 439.5498 vf274.5 435.5 m273.0493 432 270.5 432 V273.0889 432 L274.4937 433.3066 274.5 435.5 Yf268.3433 432 m268.9556 432.8638 269 434 Y267.9053 432.4365 266.2173 432.0142 v266.2061 432.0112 266.1982 432.0034 266.1875 432 C268.3433 432 Lf280.7065 432 m279.4263 433.2295 278 437.5 Y278.0034 433.7612 279.1816 432 V280.7065 432 LfLB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 6 79 255 255 0 50 Lb(d) Ln0 A1 Ap0 O0.8078 0.1725 0 0 0.2 0.6 1 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 Lf0 Ap0 R0.3922 0.0745 0 0 0.6 0.8 1 XA1 J281 451.5 m281 449.5 281 448 280 448 c278 448 277.5 446.9028 277.5 445.5 c277.5 444.0972 277.5 440 yS275.25 453.75 m275.25 451 272 451 272 449.5 c272 447.5 274 447.9028 274 446.5 c274 445.0972 274 441 yS0 O0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa0 J283.5 440.5 m281.5 443 280.8999 443.6982 280.5137 445 c280.1348 446.2769 280 447 Y278 445 L276 447 L274 445 L272 447 L271.8652 446.2769 271.4863 445 v271.1001 443.6982 270.5 443 268.5 440.5 c265.4238 436.6543 264 432 Y288 432 L286.5762 436.6543 283.5 440.5 vf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa282.3042 436.1963 m278.5 440.5498 278.5 443.5498 V278.5 445.5 L278 445 L277.5 445.5 L277.5 444.5498 L277.5 439.0498 282.3042 436.1963 Yf271.9507 439.5498 m270.9287 437.8198 269.5 436.0498 y271.8003 437.7505 273 439.5498 v274 441.0498 274 443.5498 y273.0698 441.4448 271.9507 439.5498 vf274.5 435.5 m273.0493 432 270.5 432 V273.0889 432 L274.4937 433.3066 274.5 435.5 Yf268.3433 432 m268.9556 432.8638 269 434 Y267.9053 432.4365 266.2173 432.0142 v266.2061 432.0112 266.1982 432.0034 266.1875 432 C268.3433 432 Lf280.7065 432 m279.4263 433.2295 278 437.5 Y278.0034 433.7612 279.1816 432 V280.7065 432 Lf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa267 442.251 m266.5674 442 L266.1338 442.2505 L266.1338 442.75 L266.5664 443 L267 442.7505 L267 442.251 Lf/BBAccumRotation (1.571487) XT287 438.251 m286.5674 438 L286.1338 438.2505 L286.1338 438.75 L286.5664 439 L287 438.7505 L287 438.251 Lf/BBAccumRotation (1.571487) XT0 R0 0 0 0 1 1 1 XA1 J280.98 449.9995 m280.9263 448.7954 280.7285 448 280 448 c279.6133 448 279.2822 447.959 279 447.8823 cS272.6826 448.0005 m273.2622 447.5381 274 447.3525 274 446.5 cS274.1084 451.5 m273.5586 451.0654 272.9277 450.7622 272.5 450.4033 cSLB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 7 128 128 128 0 50 Lb(e) Ln0 A1 Ap0 O0.8078 0.1725 0 0 0.2 0.6 1 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 Lf0 Ap0 R0 0 0 0 1 1 1 XA1 J281.5 452.5 m281.5 450.5 281.5 449.5 280.5 449.5 c278.5 449.5 278 448.4028 278 447 c278 445.5972 278 441.5 yS274 448.5 m274 447.0972 274 443 yS272.5 454.5 m272.5 454.0327 272.5 453.5 yS0 O0.0235 0.8078 0.9176 0 1 0.2 0 Xa0 J272 445 m273.5 442.0498 L273.5 438 269.6465 434.1465 y274.5 437 274.5 442.0498 V276 445 l274 448 l272 445 lf276 444.5 m277.5 442.0498 L277.5 438.5 281.8999 435.2002 y278.5 439.5 278.5 442.0498 V280.5 444.5 l278 448 l276 444.5 lf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa285.9995 434.1172 m284.8916 435.4404 283.8584 439.7114 283 442 c281.5 446 280 447 Y278 445 L276 447 L274 445 L272 447 L270.5 446 269 442 v268.1416 439.7114 267.1084 435.4404 266.0005 434.1172 c264.8755 432.7734 264 432 Y288 432 L287.1245 432.7734 285.9995 434.1172 vf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa282.3042 436.1963 m278.5 440.5498 278.5 443.5498 V278.5 445.5 L278 445 L277.5 445.5 L277.5 444.5498 L277.5 439.0498 282.3042 436.1963 Yf271.9507 439.5498 m270.9287 437.8198 269.5 436.0498 y271.8003 437.7505 273 439.5498 v274 441.0498 274 443.5498 y273.0698 441.4448 271.9507 439.5498 vf274.5 435.5 m273.0493 432 270.5 432 V273.0889 432 L274.4937 433.3066 274.5 435.5 Yf268.3433 432 m268.9556 432.8638 269 434 Y267.9053 432.4365 266.2173 432.0142 v266.2061 432.0112 266.1982 432.0034 266.1875 432 C268.3433 432 Lf280.7065 432 m279.4263 433.2295 278 437.5 Y278.0034 433.7612 279.1816 432 V280.7065 432 Lf1 Ap0.0235 0.8078 0.9176 0 1 0.2 0 Xa284.9756 449.5 m284.9756 449.2373 284.7627 449.0249 284.5 449.0249 c284.2373 449.0249 284.0244 449.2373 284.0244 449.5 c284.0244 449.7627 284.2373 449.9751 284.5 449.9751 c284.7627 449.9751 284.9756 449.7627 284.9756 449.5 cf276 451.5 m276 451.2373 275.7871 451.0249 275.5244 451.0249 c275.2617 451.0249 275.0488 451.2373 275.0488 451.5 c275.0488 451.7627 275.2617 451.9751 275.5244 451.9751 c275.7871 451.9751 276 451.7627 276 451.5 cf267.9756 449.5 m267.9756 449.2373 267.7627 449.0249 267.5 449.0249 c267.2373 449.0249 267.0244 449.2373 267.0244 449.5 c267.0244 449.7627 267.2373 449.9751 267.5 449.9751 c267.7627 449.9751 267.9756 449.7627 267.9756 449.5 cf0.0118 0.9608 0.9137 0 1 0 0 Xa273 449.5 m273 449.2373 272.7871 449.0249 272.5244 449.0249 c272.2617 449.0249 272.0488 449.2373 272.0488 449.5 c272.0488 449.7627 272.2617 449.9751 272.5244 449.9751 c272.7871 449.9751 273 449.7627 273 449.5 cf280.9756 449.5 m280.9756 449.2373 280.7627 449.0249 280.5 449.0249 c280.2373 449.0249 280.0244 449.2373 280.0244 449.5 c280.0244 449.7627 280.2373 449.9751 280.5 449.9751 c280.7627 449.9751 280.9756 449.7627 280.9756 449.5 cf0 Ap0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa265 437.251 m264.5674 437 L264.1338 437.2505 L264.1338 437.75 L264.5664 438 L265 437.7505 L265 437.251 Lf/BBAccumRotation (1.571487) XT285 443.251 m284.5674 443 L284.1338 443.2505 L284.1338 443.75 L284.5664 444 L285 443.7505 L285 443.251 Lf/BBAccumRotation (1.571487) XTLB%AI5_EndLayer--%AI5_BeginLayer0 1 1 1 0 0 0 8 0 0 0 0 50 Lb(f) Ln0 A1 Ap0 O0.8078 0.1725 0 0 0.2 0.6 1 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 Lf0 Ap0.0196 0.5961 0.9137 0 1 0.4 0 Xa275 446 m275.5 442 L275.5 441.7236 275.7236 441.5 276 441.5 c276.2764 441.5 276.5 441.7236 276.5 442 C277 446 l276 448 l275 446 lf273 446 m273.5 443.5498 L273.5 439.5 269.6465 435.6465 y274.5 438.5 274.5 443.5498 V275 446 L275 446.2764 274 449 y273 446 lf277 446 m277.5 443.5498 L277.5 440 281.8999 436.7002 y278.5 441 278.5 443.5498 V279 446 l278 449 l277 446 lf0 R0.0196 0.5961 0.9137 0 1 0.4 0 XA1 J279.5 444 m279.5 448.0972 279.5 449.5 v279.5 451.5 279.5 455.5 283.5 455.5 c287.5 455.5 287.5 450.5 287.5 449.5 cS0.0118 0.9608 0.9137 0 1 0 0 XA279.5 448.4995 m279.5 448.8955 279.5 449.2432 279.5 449.5 c279.5 451.5 279.5 455.5 283.5 455.5 c287.5 455.5 287.5 450.5 287.5 449.5 cS0.0196 0.5961 0.9137 0 1 0.4 0 XA272.5 444 m272.5 448.0972 272.5 449.5 v272.5 451.5 272.5 455.5 268.5 455.5 c264.5 455.5 264.5 450.5 264.5 449.5 cS0 O0.0196 0.5961 0.9137 0 1 0.4 0 Xa0 J277.5 456 m276.8252 456 276.3296 455.5605 276 454.9712 C275.6704 455.5605 275.1748 456 274.5 456 c274.2236 456 274 455.7764 274 455.5 c274 455.2236 274.2236 455 274.5 455 c275.0537 455 275.3335 454 275.5 453 c275.6665 452 276 450 y276.3525 452 276.5 453 v276.6475 454 276.9463 455 277.5 455 c277.7764 455 278 455.2236 278 455.5 c278 455.7764 277.7764 456 277.5 456 cf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa282.4507 439.5498 m280.4507 444.0498 280 447 Y278 445 L276 447 L274 445 L272 447 L271.4507 444.0498 269.4507 439.5498 v267.4507 435.0498 264 432 Y275.9507 432 L288 432 L284.4507 435.0498 282.4507 439.5498 vf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa274.5 435.5 m273.0493 432 270.5 432 V273.0889 432 L274.4937 433.3066 274.5 435.5 Yf268.3433 432 m268.9556 432.8638 269 434 Y267.9053 432.4365 266.2173 432.0142 v266.2061 432.0112 266.1982 432.0034 266.1875 432 C268.3433 432 Lf280.7065 432 m279.4263 433.2295 278 437.5 Y278.0034 433.7612 279.1816 432 V280.7065 432 Lf1 Ap0.0196 0.5961 0.9137 0 1 0.4 0 Xa285 451 m285 450.7373 284.7871 450.5249 284.5244 450.5249 c284.2617 450.5249 284.0488 450.7373 284.0488 451 c284.0488 451.2627 284.2617 451.4751 284.5244 451.4751 c284.7871 451.4751 285 451.2627 285 451 cf287.9756 438.5 m287.9756 438.2373 287.7627 438.0249 287.5 438.0249 c287.2373 438.0249 287.0244 438.2373 287.0244 438.5 c287.0244 438.7627 287.2373 438.9751 287.5 438.9751 c287.7627 438.9751 287.9756 438.7627 287.9756 438.5 cf283.4756 435.5 m283.4756 435.2373 283.2627 435.0249 283 435.0249 c282.7373 435.0249 282.5244 435.2373 282.5244 435.5 c282.5244 435.7627 282.7373 435.9751 283 435.9751 c283.2627 435.9751 283.4756 435.7627 283.4756 435.5 cf271.9756 434.5 m271.9756 434.2373 271.7627 434.0249 271.5 434.0249 c271.2373 434.0249 271.0244 434.2373 271.0244 434.5 c271.0244 434.7627 271.2373 434.9751 271.5 434.9751 c271.7627 434.9751 271.9756 434.7627 271.9756 434.5 cf282.4756 445 m282.4756 444.7373 282.2627 444.5249 282 444.5249 c281.7373 444.5249 281.5244 444.7373 281.5244 445 c281.5244 445.2627 281.7373 445.4751 282 445.4751 c282.2627 445.4751 282.4756 445.2627 282.4756 445 cf0.0235 0.8078 0.9176 0 1 0.2 0 Xa284.9756 437.4751 m284.9756 437.2124 284.7627 437 284.5 437 c284.2373 437 284.0244 437.2124 284.0244 437.4751 c284.0244 437.7378 284.2373 437.9502 284.5 437.9502 c284.7627 437.9502 284.9756 437.7378 284.9756 437.4751 cf280.4756 442.5 m280.4756 442.2373 280.2627 442.0249 280 442.0249 c279.7373 442.0249 279.5244 442.2373 279.5244 442.5 c279.5244 442.7627 279.7373 442.9751 280 442.9751 c280.2627 442.9751 280.4756 442.7627 280.4756 442.5 cf276.4756 444.5 m276.4756 444.2373 276.2627 444.0249 276 444.0249 c275.7373 444.0249 275.5244 444.2373 275.5244 444.5 c275.5244 444.7627 275.7373 444.9751 276 444.9751 c276.2627 444.9751 276.4756 444.7627 276.4756 444.5 cf287.9756 443.5 m287.9756 443.2373 287.7627 443.0249 287.5 443.0249 c287.2373 443.0249 287.0244 443.2373 287.0244 443.5 c287.0244 443.7627 287.2373 443.9751 287.5 443.9751 c287.7627 443.9751 287.9756 443.7627 287.9756 443.5 cf284.9756 442.5 m284.9756 442.2373 284.7627 442.0249 284.5 442.0249 c284.2373 442.0249 284.0244 442.2373 284.0244 442.5 c284.0244 442.7627 284.2373 442.9751 284.5 442.9751 c284.7627 442.9751 284.9756 442.7627 284.9756 442.5 cf286.9756 447 m286.9756 446.7373 286.7627 446.5249 286.5 446.5249 c286.2373 446.5249 286.0244 446.7373 286.0244 447 c286.0244 447.2627 286.2373 447.4751 286.5 447.4751 c286.7627 447.4751 286.9756 447.2627 286.9756 447 cf282.4756 452 m282.4756 451.7373 282.2627 451.5249 282 451.5249 c281.7373 451.5249 281.5244 451.7373 281.5244 452 c281.5244 452.2627 281.7373 452.4751 282 452.4751 c282.2627 452.4751 282.4756 452.2627 282.4756 452 cf276.9756 437.5 m276.9756 437.2373 276.7627 437.0249 276.5 437.0249 c276.2373 437.0249 276.0244 437.2373 276.0244 437.5 c276.0244 437.7627 276.2373 437.9751 276.5 437.9751 c276.7627 437.9751 276.9756 437.7627 276.9756 437.5 cf0.0196 0.5961 0.9137 0 1 0.4 0 Xa274.4756 452.5 m274.4756 452.2373 274.2627 452.0249 274 452.0249 c273.7373 452.0249 273.5244 452.2373 273.5244 452.5 c273.5244 452.7627 273.7373 452.9751 274 452.9751 c274.2627 452.9751 274.4756 452.7627 274.4756 452.5 cf278.4756 453 m278.4756 452.7373 278.2627 452.5249 278 452.5249 c277.7373 452.5249 277.5244 452.7373 277.5244 453 c277.5244 453.2627 277.7373 453.4751 278 453.4751 c278.2627 453.4751 278.4756 453.2627 278.4756 453 cf0.0235 0.8078 0.9176 0 1 0.2 0 Xa264.9756 435.5249 m264.9756 435.2622 264.7627 435.0498 264.5 435.0498 c264.2373 435.0498 264.0244 435.2622 264.0244 435.5249 c264.0244 435.7876 264.2373 436 264.5 436 c264.7627 436 264.9756 435.7876 264.9756 435.5249 cf269.9756 443.5 m269.9756 443.2373 269.7627 443.0249 269.5 443.0249 c269.2373 443.0249 269.0244 443.2373 269.0244 443.5 c269.0244 443.7627 269.2373 443.9751 269.5 443.9751 c269.7627 443.9751 269.9756 443.7627 269.9756 443.5 cf266.9756 444 m266.9756 443.7373 266.7627 443.5249 266.5 443.5249 c266.2373 443.5249 266.0244 443.7373 266.0244 444 c266.0244 444.2627 266.2373 444.4751 266.5 444.4751 c266.7627 444.4751 266.9756 444.2627 266.9756 444 cf274.9756 455.5 m274.9756 455.2373 274.7627 455.0249 274.5 455.0249 c274.2373 455.0249 274.0244 455.2373 274.0244 455.5 c274.0244 455.7627 274.2373 455.9751 274.5 455.9751 c274.7627 455.9751 274.9756 455.7627 274.9756 455.5 cf277.9756 455.5 m277.9756 455.2373 277.7627 455.0249 277.5 455.0249 c277.2373 455.0249 277.0244 455.2373 277.0244 455.5 c277.0244 455.7627 277.2373 455.9751 277.5 455.9751 c277.7627 455.9751 277.9756 455.7627 277.9756 455.5 cf0.0196 0.5961 0.9137 0 1 0.4 0 Xa275.9756 439.5 m275.9756 439.2373 275.7627 439.0249 275.5 439.0249 c275.2373 439.0249 275.0244 439.2373 275.0244 439.5 c275.0244 439.7627 275.2373 439.9751 275.5 439.9751 c275.7627 439.9751 275.9756 439.7627 275.9756 439.5 cf267.9756 439.5 m267.9756 439.2373 267.7627 439.0249 267.5 439.0249 c267.2373 439.0249 267.0244 439.2373 267.0244 439.5 c267.0244 439.7627 267.2373 439.9751 267.5 439.9751 c267.7627 439.9751 267.9756 439.7627 267.9756 439.5 cf271.9756 441 m271.9756 440.7373 271.7627 440.5249 271.5 440.5249 c271.2373 440.5249 271.0244 440.7373 271.0244 441 c271.0244 441.2627 271.2373 441.4751 271.5 441.4751 c271.7627 441.4751 271.9756 441.2627 271.9756 441 cf265.9756 441.5 m265.9756 441.2373 265.7627 441.0249 265.5 441.0249 c265.2373 441.0249 265.0244 441.2373 265.0244 441.5 c265.0244 441.7627 265.2373 441.9751 265.5 441.9751 c265.7627 441.9751 265.9756 441.7627 265.9756 441.5 cf264.9756 446.5 m264.9756 446.2373 264.7627 446.0249 264.5 446.0249 c264.2373 446.0249 264.0244 446.2373 264.0244 446.5 c264.0244 446.7627 264.2373 446.9751 264.5 446.9751 c264.7627 446.9751 264.9756 446.7627 264.9756 446.5 cf270.9756 451.5 m270.9756 451.2373 270.7627 451.0249 270.5 451.0249 c270.2373 451.0249 270.0244 451.2373 270.0244 451.5 c270.0244 451.7627 270.2373 451.9751 270.5 451.9751 c270.7627 451.9751 270.9756 451.7627 270.9756 451.5 cf0.0235 0.8078 0.9176 0 1 0.2 0 Xa267.9756 450.5 m267.9756 450.2373 267.7627 450.0249 267.5 450.0249 c267.2373 450.0249 267.0244 450.2373 267.0244 450.5 c267.0244 450.7627 267.2373 450.9751 267.5 450.9751 c267.7627 450.9751 267.9756 450.7627 267.9756 450.5 cf0.0118 0.9608 0.9137 0 1 0 0 Xa269 453.5 m269 453.2373 268.7871 453.0249 268.5244 453.0249 c268.2617 453.0249 268.0488 453.2373 268.0488 453.5 c268.0488 453.7627 268.2617 453.9751 268.5244 453.9751 c268.7871 453.9751 269 453.7627 269 453.5 cf0 Ap0 R0.0118 0.9608 0.9137 0 1 0 0 XA1 J272.5 448.4995 m272.5 448.8955 272.5 449.2432 272.5 449.5 c272.5 451.5 272.5 455.5 268.5 455.5 c264.5 455.5 264.5 450.5 264.5 449.5 cS0 O0.0196 0.5961 0.9137 0 1 0.4 0 Xa0 J273.5 447 m273.5 443.5498 L273.5 439.5 269.6465 435.6465 y274.5 438.5 274.5 443.5498 V274.5 447 L274.5 447.2764 274 449 y273.5 447 lf0.0235 0.8078 0.9176 0 1 0.2 0 Xa272.6396 440 m271.5039 437.5073 269.6465 435.6465 Y272.2539 437.1875 273.6455 440 V272.6396 440 Lf0.0196 0.5961 0.9137 0 1 0.4 0 Xa277.5 447 m277.5 443.5498 L277.5 440 281.8999 436.7002 y278.5 441 278.5 443.5498 V278.5 447 l278 449 l277.5 447 lf0.0235 0.8078 0.9176 0 1 0.2 0 Xa281.8999 436.7002 m280.209 438.8428 279.2129 441 V278.1792 441 L279.4136 438.5659 281.8999 436.7002 Yf0 R0.0118 0.9608 0.9137 0 1 0 0 XA1 J278 446.5 m278 444 lS274 446.5 m274 444 lS0.0196 0.5961 0.9137 0 1 0.4 0 XA270.5 447.5 m270.5 448.5 270 449 269 449 c268 449 267.5 448 267.5 446.5 cS281.5 447.5 m281.5 448.5 282 449 283 449 c284 449 284.5 448 284.5 446.5 cS1 Ap0 O0.0235 0.8078 0.9176 0 1 0.2 0 Xa0 J267.9756 446.5 m267.9756 446.2373 267.7627 446.0249 267.5 446.0249 c267.2373 446.0249 267.0244 446.2373 267.0244 446.5 c267.0244 446.7627 267.2373 446.9751 267.5 446.9751 c267.7627 446.9751 267.9756 446.7627 267.9756 446.5 cf284.9756 446.5 m284.9756 446.2373 284.7627 446.0249 284.5 446.0249 c284.2373 446.0249 284.0244 446.2373 284.0244 446.5 c284.0244 446.7627 284.2373 446.9751 284.5 446.9751 c284.7627 446.9751 284.9756 446.7627 284.9756 446.5 cf0 Ap0 R0.0196 0.5961 0.9137 0 1 0.4 0 XA1 J275 449.0547 m275 450.5547 lS277 449.0547 m277 450.5547 lS0.0118 0.9608 0.9137 0 1 0 0 XA275 450 m275 450.5547 lS277 450 m277 450.5547 lSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF