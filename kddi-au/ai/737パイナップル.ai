%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (737\203p\203C\203i\203b\203v\203\213.ai)%%CreationDate: (7/29/03) (1:48 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 237 471.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 10262 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD2AFFAE33A8FD13FF64FD0FFF0A83FD18FF64FD41FF0A0A58FD11%FF5E39AEFD0DFF0A0A83FD16FF8939FD42FF0A0A0A83FD0FFFAE163FFD0D%FF0A0A33AEFD15FF1689FD42FFA80A0A0A33A8FD0EFF391639AEFD0BFF0A%0A0A33FD14FF5E165EFD43FFA8FD040A58FD0DFF5E161664FD0BFFFD040A%AEFD12FFAE1616AEFD44FF58FD040A2DAEFD0BFF8916161664FD0AFFFD05%0AFD12FF39161683FD44FFAE33FD050AA8FD0AFFAEFD0416AEFD09FFFD05%0A83FD10FF89161616FD46FF83FD060A58FD0AFFFD0516AEFD08FFFD050A%33FD10FFFD0416FD47FF33FD060A58FD09FF64FD041639FD08FFFD060AAE%FD0EFF5E16161639FD47FFAEFD070A33AEFD07FF5EFD051683FD07FFFD06%0A58FD0DFFA8FD041664FD48FF58FD070A33FD07FFAEFD051639AEFD06FF%FD070AFD0DFF3FFD04165EFD48FFA8FD080A33A8FD05FFA8FD06165EFD06%FFFD070A83FD0BFFAEFD0516AEFD49FF33FD080A33FD06FFFD0716FD06FF%FD070A33FD0BFF39FD0516FD4AFFA8FD090A33A8FD04FF39FD061639FD05%FFFD080AAEFD09FF5EFD0616FD4BFF33FD090A33FD04FF5EFD0716AEFD04%FFFD080A83FD08FFAE39FD051664FD4BFF58FD0A0A58FFFFFF64FD07165E%FD04FFFD080A2DFD08FF5EFD06165EFD4CFFFD0B0AA8FFFFAEFD0816FD04%FFFD080A33FD07FFAEFD0716AEFD4CFF58FD0B0AAEFFAEFD081639FFFFFF%FD090AA8FD06FFFD0816FD4DFF83FD0B0A2DFFFFFD081639AEFFFFFD090A%7DFD05FF83FD071639FD4EFFFD0C0A58FFFD091689FFFFFD090A58FD04FF%A8FD081689FD4EFF33FD0C0AA864FD081639FFFFFD0A0AFD04FF64FD0816%AEFD4EFF58FD0C0A3339FD0916A8FFFD0A0AA8FFFFAEFD0916FD4FFFA8FD%0D0A39FD091664FFFD0A0AA8FFFF39FD081664FD50FFFD0E0AFD0A16FFFD%0A0A7DFF83FD091683FD50FF33FD0D0A10FD0916AEFD0A0A83FF3FFD0916%FD15FFA8A8585858FD37FF58FD0E0AFD091664FD0A0A5864FD091639FD11%FFAE7D580A0A0A58A8FD38FF83FD0E0A10FD0916FD0A0A58FD0A1683FD0E%FFA85833FD050AA8FD3AFFA8FD0F0AFD0916FD0B0AFD0A16AEFD0AFFA883%2DFD070A58FD3DFFFD0F0A10FD0816FD0A0A10FD091664FD08FFA8832DFD%080A58A8FD3EFFFD0F0A10FD0816FD0B0AFD091683FD05FFA8832DFD0A0A%A8FD40FF58FD0F0AFD071610FD0A0A10FD0916FFFFFFAE8333FD0B0A33FD%42FF33FD0F0A10FD061610FD0B0AFD08165EFFA833FD0D0A83FD43FF83FD%0F0AFD071610FD0A0A10FD08165E33FD0D0A58FD45FF58FD100AFD0616FD%0C0AFD061610FD0F0AA8FD46FFA8FD0F0A10FD0616FD0B0A10FD04161010%FD0E0A33FD48FF83FD100AFD0516FD0C0A10161616FD100A58FD49FFAEFD%100A10FD0416FD0C0A161616FD0F0A33A8FD4BFFFD100A1016161610FD0D%0A10FD0F0A58AEFD10FFAE8364FD39FFFD100A10161616FD0D0A10FD0F0A%83FD0FFFAE5E3F1639AEFD39FFFD100A101616FD1D0AAEFD0CFFAE8939FD%041639A8FD3AFFFD110A16FD1C0A2DFD0BFFAE8939FD06163FFD3CFFFD10%0A10FD1C0A2DFD08FFAE8364FD091639AEFD3CFFFD2C0A2DFD06FFAE5E3F%FD0B1664FD3EFFFD2B0A2DFFFFFFAE8939FD0E165EFD3FFFFD2A0A2DFFAE%8939FD101689FD40FFFD2A0A64FD1316AEFD41FFFD290AFD131639AEFD42%FF33FD060A04FD200AFD131639FD40FFC8C89FC82CFD260AFD13165EFD3B%FFC99EC79EFD04C69E9E2CFD250A10FD121683FD38FFCEC79EFD09C69E9E%2CFD240A1010FD101639AEFD36FFC8C79EFD0DC69E2CFD080A04FD130A04%FD0C0A1010FD0A1664FD36FFC8FD11C69E2CFD2C0A1010FD0616AEFD35FF%9EFD0BC69EFD07C69E2CFD2F0A16161639AEFD33FFCEC7C6C6C6CCFD09C6%9EFD08C650FD300A1039FD33FFCF9EFD04C6CCCCCCFD08C69E9E9EFD06C6%56FD0A0A04FD270A58FD31FFC7FD06C6FD04CCFD07C6FD049EFD05C656FD%330A58FD2EFF9FFD08C6FD05CCFD06C6FD059EFD04C67AFD340A2DFD2CFF%FD0BC6CCCCCCFECCFD06C69EC69EFD05C67A562C322C322C2C2C322C2CFD%2B0AAEFD28FFC89EFD05C6CCFD0AC6CCFD09C6CCFD08C69EC6FD059E1004%FD070A04FD220AA8FD26FFC8FD07C6CCCCCCFD07C6CCCCCCFD08C6CCCCFD%0CC69E9EFD2D0AFD25FFC7FD08C6CCCCCCFD08C6CCCCCCFD07C6CCCCCCFD%0CC69E10FD2D0AFD23FFC7FD09C6FD05CCFD05C6FD05CCFD06C6FD04CCFD%0BC69EFD2E0A2DFD21FFC7FD0AC6FD04CCFD07C6FD05CCFD05C6FD05CCFD%0AC69E10FD2E0A33FD1FFFC8FD05C6CCFD0AC6CDCCFD09C6CCFD0AC69EFD%09C6FD300A83FD1DFFC7FD07C6CCFD09C6CECEC7FD08C6CCCCFD08C69E9E%9EFD08C610FD0D0A161016101610161016FD04100A10FD140AA8FD1BFFC8%FD07C6CCCCCCFD08C6CDCECEC7FD07C6CCCCCCFD08C69E9E9EFD07C6FD0D%0AFD13161010FD0F0A33FD1AFFC7FD09C6CCCCCCFD07C6CDCECECEC7FD06%C6FD04CCFD06C6FD059EFD06C610FD0B0A10FD16161010FD0D0A58FD18FF%C8FD09C6FD05CCFD06C6CDFD04CECCFD05C6FD05CCFD06C6FD049EFD06C6%FD0B0A10FD1C1633FD0A0AAEFD16FFC7FD0BC6CCC6CCC6CCFD05C6C8C7CD%C7CDC7FD06C6CCC6CCFD06C69EC69EC69EC69EFD04C6562C322C322C322C%322C3333895E893939FD18165883FD080A2DFD15FFC7FD06C69EFD0AC6CC%FD04C6CDCDC6C6C6CCCCCCFD08C69EFD0AC69EFD06C6FD089899FD08FFAE%8989393FFD111639AEFF832DFD060A83FD13FFC7FD07C69E9E9EFD08C6CC%CCC6C6C6CDCECDC6C6C6CCFD09C69E9E9EFD08C69E9E9EFD05C6FD0798C2%FD0EFF835EFD0F165EFFFFA858FD060AA8FD11FFC8FD08C69E9E9EFD08C6%CCCCCCC6C6CDCECECDC6FD05CCFD06C69E9E9EFD08C6FD049EFD05C6FD06%98A0FD11FFAE8939FD0C16AEFD04FF2DFD040A5EFD10FFC7FD09C6FD049E%FD07C6FD04CCC6FD04CECDC6FD04CCFD06C6FD049EFD07C6FD059EFD04C6%FD0698C9FD14FFAE8939FD0A16FD05FF58FD040AAEFD0EFFC8FD0AC69EC6%9EC69ECCFD05C6CCFECCCCCCC7CECDCECDCDCCCCFECCCCFD05C69EC69EC6%9ECCFD06C69EC69EFD05C69EFD0598CAFD18FF8939FD071639FD05FF830A%0A0A58FD0DFFC8FD06C6CCFD0AC6CCFD09C6CDC7FD09C6CCFD0AC6CCFD09%C69E9EC6C6C6FD0598CFFD1AFFA864FD06165EFD05FF7D0A0A0AA8FD0BFF%CFFD07C6CCCCCCFD07C6CCCCCCFD08C6CDCEC7FD08C6CCCCCCFD07C6CCCC%CCFD08C69E9EC6C69E9EFD0498FD1EFF833FFD0416AEFD05FFA80A0A58FD%0BFFFD08C6CCCCCCFD08C6CCCCCCFD07C6CDCECEC7FD07C6CCCCCCFD08C6%CCCCCCFD07C6FD079E989898FD20FFAE39161639FD06FF7D0A0AAEFD09FF%9EFD08C6FD05CCFD05C6FD05CCFD06C6CDCECECEC7FD06C6FD05CCFD05C6%FD05CCFD06C6FD069E989898C2FD22FFAE3F1689FD06FF580A58FD08FF9E%FD09C6FD04CCFD07C6FD05CCFD05C6CDFD04CEC7FD05C6FD04CCFD07C6FD%05CCFD05C6FD069E989898A0FD24FFAE39AEFD06FF2D0AFD07FFC9FD05C6%9EFD09C69EFD15C69EFD09C69EFD0AC6C0FD07C69E9E9E989898CFFD2EFF%0A83FD06FFFD05C69E9E9EFD08C69E9EFD09C69EFD09C69E9E9EFD08C69E%9EFD09C698C0FD05C69E9E9EFD0498FD2FFFA82DFD05FFC8FD06C69E9E9E%FD07C69E9E9EFD08C69E9EFD09C69E9E9EFD07C69E9E9EFD08C69898C0FD%04C6FD049E98989FFD30FF58AEFD04FF9EFD05C6FD059EFD06C6FD049EFD%07C69E9E9EFD07C6FD059EFD06C6FD049EFD07C6989898C0C6C6FD049E98%9898C9FD30FFA858FFFFFF9EFD07C6FD049EFD06C6FD059EFD06C6FD049E%FD07C6FD049EFD06C6FD059EFD06C6FD0498C0C6C69E9EFD0498CAFD31FF%58FFFFA0FD07C69EC69EC69EFD07C69EC69EC69EFD05C69EC69EC69EFD05%C69EC69EC69EFD07C69EC69EC69EFD05C69EC09EC09EC09E9E9E98989899%FD35FFC09EC6CCCCFD09C6CCFD09C6CCCCCCFD08C6CCCCFD09C6CCFD09C6%CCCCCCFD08C6989E9E9E989898C9FD35FF9EC6C6CCCCCCFD08C6CCCCFD09%C6CCFD09C6CCCCCCFD08C6CCCCFD09C6CCFD08C69EFD0798A8FD34FF9FC6%C6C6FD04CCFD07C6CCCCCCFD07C6FD05CCFD06C6FD04CCFD07C6CCCCCCFD%07C6FD05CCFD05C69E989898BA989899FD35FF9E9EC6C6FD05CCFD06C6FD%04CCFD07C6FD04CCFD06C6FD05CCFD06C6FD04CCFD07C6FD04CCFD04C69E%9EFD0698C9FD34FFC99EFD04C6CCCCCCFECCFD05C6CCFECCCCCCFD05C6CC%CCCCFECCCCFD06C6CCCCCCFECCFD05C6CCFECCCCCCFD05C6CCCCCCFECCCC%C6C6C69E9E989E9898989FFD35FF9E9E9EFD07C69EFD0AC69E9EFD09C69E%FD09C69EC0FD09C69E9EFD09C698C6FD049EFD0498A0FD35FFC19EFD09C6%9EFD09C69E9EFD09C69E9EFD08C6C098C0FD08C69E9EFD09C69898C09E9E%9EFD0498FD36FF9E9EFD08C6FD049EFD07C6FD049EFD07C69E9E9EFD07C6%9E98989EFD07C6FD049EFD07C69898989E9EFD0498A0FD36FF9E9EFD09C6%9E9E9EFD07C6FD049EFD07C6FD049EFD06C6C0989898C0FD06C6FD049EFD%06C69EFD04989EFD0498CFFD36FF9E9EFD08C6FD069EFD05C6FD069EFD05%C6FD059EFD05C69EFD04989EFD05C6FD069EC6C6C69E9EFD049892989898%9FFD37FF9E9EC6C6C6CCCCFD09C6CCFD09C6CCFD0AC6CCCCFD14C69EC6C6%FD059EFD0598FD38FF9E9EC6C6C6CCCCFD09C6CCCCFD09C6CCFD09C6CCCC%FD09C69EFD09C6FD089EFD0598C2FD38FF9E9EC6C6C6FECCCCFD08C6CCCC%CCFD07C6CCCCCCFD08C6FECCCCFD08C69E9EFD09C6FD079EFD04989FFD39%FF9E9E9EC6C6FD04CCFD07C6FD04CCFD07C6CCCCCCFD07C6FD04CCFD07C6%9E9E9EFD07C6FD069EFD0698A7FD39FF9E9EC6C6C6FD06CCFD05C6FD05CC%FD05C6FD05CCFD06C6FD06CCFD05C6FD049EFD05C6FD089EFD04989FFD3A%FF989E9EFD04C6CCC6CC9EFD06C6CCC6CCFD07C6CCC6CCC6CC9EFD06C6CC%C6CC9EFD05C69EC69EC69EC0C6C6FD079EFD0698FD3BFFC19EFD09C69EFD%09C69EFD0AC69EFD09C6C098FD09C698C0FD079EFD0698CFFD3BFF9E9E9E%FD07C69E9E9EFD08C69E9E9EFD08C69E9E9EFD07C69E9898FD08C69E9898%FD049EFD0798C9FD3CFFC99E9E9EFD07C69E9E9EFD07C69E9E9EFD08C6FD%049EFD06C6C0989898FD07C6989898C09E9E9EC0FD0598C9FD3DFFA19E9E%9EFD06C6FD059EFD06C6FD049EFD07C6FD059EFD05C69EFD0498FD05C69E%FD04989E9EFD0698C9FD3FFF9E9E9EFD07C69EC69EC69EFD05C69EC69EC6%9EFD07C69EC69EFD07C698C098C09EFD04C69E989E9898989EFD0598C9FD%40FF9F9E9E9EFD0BC6CCFD09C69EC0FD09C6CCFD0AC69EC6FD079EFD0698%C9FD41FFA69E9E9EFD0BC6CCCCCCFD07C6C098C0FD08C6CCCCFD09C69E9E%C0FD069EFD0598CAFD43FFFD049EFD0AC6CCCCCCFD07C69E98989EFD07C6%CCCCCCFD08C6FD079EFD0698C9FD44FFC19E9E9EFD0AC6FD05CCFD05C6C0%989898C0FD06C6FD04CCFD06C6FD079EFD0698C9FD45FFCAFD049EFD09C6%FD04CCFD06C69EFD04989EFD05C6FD05CCFD04C6FD069EFD0798C9FD47FF%9FFD049EC6C6C09EFD09C69EFD0AC6C0FD09C6C09EC6FD079EBAFD0598C9%FD48FFCA98FD049EC69E989EFD08C69E98FD09C698C0FD08C69E9898FD06%9EFD0698C9FD4AFFC898FD049EC098989EFD07C6989898FD08C69898C0FD%07C6C09898989E9E9EFD0798C9FD4BFFCA98989E9E9EFD04989EFD06C69E%989898FD07C6989898C0FD04C69E9EFD05989EFD0798C9FD4DFFCA98989E%9E9EFD0498C0FD05C6FD0598FD06C6FD0498C0C6C6FD049EFD0B98CAFD4F%FFA098989E989E989E98C09EFD04C6C09EC09EC098FD05C69EC09EC098FD%059E989E989EFD0798C9FD51FFA09898FD089EC69EFD06C6C098FD07C6FD%0A9EFD0798CFFD53FF9FFD0498FD0C9EC6989898C6FD0C9EFD089899CAFD%55FFA09898BA98FD0D9E989898FD0B9EFD08989FFD58FFA0FD0698FD099E%FD0598FD089EFD0998A0FD5AFFCA9FFD0598FD099E9898989E98FD059EFD%0998C1CAFD5CFFCAA0FD09989E989E989E989E989E989EFD0B98C2FD61FF%9FFD1B989FFD64FFCAA0FD17989FA7FD68FFA7C2FD119899A0FD6EFFA8C9%A09F99FD08989FA0CAFD59FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0314 0.0118 0.3961 0 1 1 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 7) Pc0.0314 0.0196 0.8078 0 1 1 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 9) Pc0.0078 0.1961 0.9373 0 1 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 16) Pc0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 58) Pc0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 64) Pc0.9569 0 1 0 0 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 196) Pc0.9333 0.2078 1 0.0745 0 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 208) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR278 446 m276 448 270.3999 446.3999 268.3999 444.3999 c267.6001 443.6001 268 444 266.3999 442.3999 c264.7998 440.8003 264 439.2002 264 438 c264 436 264.6001 434.6001 265.6001 433.6001 c266.6001 432.6001 268 432 270 432 c271.2002 432 272.7998 432.8003 274.3999 434.3999 c275.2002 435.2002 275.6001 435.6001 276.3999 436.3999 c278.3999 438.3999 280 444 278 446 cf0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa277.3003 442.7007 m277.3003 445.1001 L274.8999 445.1001 L275.3354 446.915 L272.8896 446.9741 269.7837 445.7837 268.3999 444.3999 c267.6001 443.6001 268 444 266.3999 442.3999 c264.7998 440.8003 264 439.2002 264 438 c264 436.9536 264.1719 436.0791 264.4717 435.3325 C264.6831 434.9897 264.9233 434.6768 265.2002 434.3999 c266.2002 433.3999 267.6001 432.8003 269.6001 432.8003 c270.7998 432.8003 272.3999 433.6001 274 435.2002 c274.7998 436 275.2002 436.3999 276 437.2002 c276.8906 438.0908 277.6987 439.6938 278.1455 441.375 C278.1001 441.6001 277.3003 442.7007 Yf0.0078 0.1961 0.9373 0 1 0.8 0 Xa269.2002 433.6001 m270.3999 433.6001 272 434.3999 273.6001 436 c274.3999 436.8003 274.7998 437.2002 275.6001 438 c276.2646 438.665 277.2217 440.0576 277.8076 441.9692 C277.5718 442.3262 277.1001 443.1001 Y276.6001 444.6001 L274.8999 445.1001 L274.4048 446.2964 274.1909 446.8521 V274.1909 446.8521 L271.9907 446.6025 269.5752 445.5752 268.3999 444.3999 c267.6001 443.6001 268 444 266.3999 442.3999 c264.7998 440.8003 264.3999 439.6001 264.3999 438 c264.3999 435.6001 266 433.6001 269.2002 433.6001 cf0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa266 439 m266 438 l267 438 l266 439 lf268 439 m268 438 l269 438 l268 439 lf270 439 m270 438 l271 438 l270 439 lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa272 439 m272 438 l273 438 l272 439 lf0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa274 439 m274 438 l275 438 l274 439 lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa276 439 m276 438 l277 438 l276 439 lf0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa266 437 m266 436 l267 436 l266 437 lf268 437 m268 436 l269 436 l268 437 lf270 437 m270 436 l271 436 l270 437 lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa272 437 m272 436 l273 436 l272 437 lf274 437 m274 436 l275 436 l274 437 lf0.0314 0.0196 0.8078 0 1 1 0.2 Xa265 438 m265 437 l266 437 l265 438 lf267 438 m267 437 l268 437 l267 438 lf269 438 m269 437 l270 437 l269 438 lf271 438 m271 437 l272 437 l271 438 lf0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa273 438 m273 437 l274 437 l273 438 lf275 438 m275 437 l275.8057 437.1943 l275 438 lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa266 435 m266 434 l267 434 l266 435 lf268 435 m268 434 l269 434 l268 435 lf270 435 m270 434 l271 434 l270 435 lf269 434 m269 433 l270 433 l269 434 lf272 435 m272 434 l273 434 l272 435 lf0.0314 0.0196 0.8078 0 1 1 0.2 Xa267 436 m267 435 l268 435 l267 436 lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa269 436 m269 435 l270 435 l269 436 lf0.0314 0.0196 0.8078 0 1 1 0.2 Xa271 436 m271 435 l272 435 l271 436 lf0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa273 436 m273 435 l273.7534 435.2466 l273 436 lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa277 440 m277 439 l277.8477 439.1523 l277 440 lf0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa266 441 m266 440 l267 440 l266 441 lf268 441 m268 440 l269 440 l268 441 lf270 441 m270 440 l271 440 l270 441 lf272 441 m272 440 l273 440 l272 441 lf274 441 m274 440 l275 440 l274 441 lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa276 441 m276 440 l277 440 l276 441 lf0.0314 0.0196 0.8078 0 1 1 0.2 Xa265 440 m265 439 l266 439 l265 440 lf267 440 m267 439 l268 439 l267 440 lf269 440 m269 439 l270 439 l269 440 lf271 440 m271 439 l272 439 l271 440 lf273 440 m273 439 l274 439 l273 440 lf275 440 m275 439 l276 439 l275 440 lf0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa268 443 m268 442 l269 442 l268 443 lf0.0314 0.0196 0.8078 0 1 1 0.2 Xa270 443 m270 442 l271 442 l270 443 lf272 443 m272 442 l273 442 l272 443 lf0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa274 443 m274 442 l275 442 l274 443 lf0.0314 0.0196 0.8078 0 1 1 0.2 Xa267 442 m267 441 l268 441 l267 442 lf269 442 m269 441 l270 441 l269 442 lf0.0314 0.0118 0.3961 0 1 1 0.6 Xa271 442 m271 441 l272 441 l271 442 lf0.0314 0.0196 0.8078 0 1 1 0.2 Xa273 442 m273 441 l274 441 l273 442 lf275 442 m275 441 l276 441 l275 442 lf270 445 m270 444 l271 444 l270 445 lf272 445 m272 444 l273 444 l272 445 lf269 444 m269 443 l270 443 l269 444 lf0.0314 0.0118 0.3961 0 1 1 0.6 Xa271 444 m271 443 l272 443 l271 444 lf271 443 m271 442 l272 442 l271 443 lf0.0314 0.0196 0.8078 0 1 1 0.2 Xa273 444 m273 443 l274 443 l273 444 lf271.0479 445.9521 m271 445 l272 445 l271.0479 445.9521 lf0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa277 442 m277 441 l278 441 l277 442 lf276 443 m276 442 l277 442 l276 443 lf275 444 m275 443 l276 443 l275 444 lf273 446 m273 445 l274 445 l273 446 lf0.0314 0.0196 0.8078 0 1 1 0.2 Xa274 445 m274 444 l275 444 l274 445 lf0.9569 0 1 0 0 0.8 0 Xa276 456 m277 454 277 448 v277 447.2549 277 445 y277 443 l277.7998 443 279 443 v282.5 443 286 441 y284 444 283 445 V286 447 288 449 v281 447 l283.5 450.1387 284 456 v279.5 448.3613 l279 453.5 276 456 vfu0.9333 0.2078 1 0.0745 0 0.4 0 Xa272 456 m274.7197 454 274.7197 448 v274.7197 447.2549 274.7998 445.8574 274.7998 445 C278 445 L278 449.2998 277.2002 451 v275.4121 454.8008 272 456 Yf283 448 m284.5 449.5 288 451.5 Y285.5 451 283 450 v280.1777 448.8711 277 445 Y277 443 L279 443 l281.5 446.5 283 448 vfU279 450.5 m279 448 276 447 v277.2002 445 l277.7998 444.4004 l281 445.0996 281 450.5 v281 453 279.6006 456 279 456 cF288 440 m286 446.5 281.5 446.5 v277.8496 443.8008 280 443.8008 v283.5 443.8008 286.5 443.1338 288 440 cfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF