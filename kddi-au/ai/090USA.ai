%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (090USA.ai)%%CreationDate: (7/30/03) (10:25 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 233 473.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 12452 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3FF827527DFD3EFFFD43F8277DFD3BFFFD45F827A8FD39FFFD47%F87DFD38FFFD48F852FD37FFFD05F8000028212800282128002821280028%212800282128002821280028212800282128002821280028212800282128%002821280028212800210000F800FD09F852FD36FFFD05F821FD3523FD06%2200FD08F87DFD35FFFD05F827FD3423FD08222100FD07F87DFD34FFFD05%F821FD0623A9FD09237854FD0923A2FD09237E4EFD0923A977232323FD09%2228FD07F852A8FD32FFFD05F827FD052378FF29FD08237EA8FD0923FF4D%FD0823FF78FD0923FFCB2323FD0B2251FD08F8275252A87DA87DA8A8FD29%FFFD06F823234E547EA9FFA27E4E2923234D7878FFFF7E54542323237878%A9FFA978782323235478A9FFFF78784D23232377A9A8FFFFA97E79FD0A22%A751FD12F827527DFD24FFFD05F821232323A9FD05FF7E2323234EA9FD05%FF292323237EFD05FF7E23232354FD05FFA84D2323237EFD06FF01FD0A22%A7A751FD15F82752FD21FFFD05F820FD0423A9FFFFFF7EFD05234EA9FFFF%FFFD062378FFFFFF7EFD05234DFFFFFFA24EFD052379FD04FF2323FD0A22%A7A7A752FD17F87DFD1FFFFD05F821FD04237EFFFFFF4DFD0623FD04FFFD%062378FFFFFF7EFD05234EFFFFFFA9FD0723FD04FF23FD0B226876A7A77D%26FD16F827A8FD1DFFFD05F820FD0423FF784EA2A3FD052378A9544DFF4E%FD0523A2A3237EA9FD05237EA9237EFF29FD0523A3FF7877FF5323FD0A22%68686FA7A7CFA87D27FD15F87DFD1CFFFD05F821FD13234DFD05234D2323%2329FD05234E2323234DFD0C23FD0B226868686FA7A7FD04FFA87DA87D52%527D525227FD0BF87DFD1BFFFD05F821FD3523FD0A22FD04686FCFFD0FFF%A85127FD08F87DFD1AFFFD05F827FD3423FD0B22FD05686FFD0FFFA8A7A7%7CFD08F8A8FD19FFFD05F800FD3523FD0A22FD056893BCFD0FFFFD04A727%FD06F852FD19FFFD05F827FD06234DFD0A234DFD092354FD09234EFD0E23%01FD0A22A7FD0568FCB5C3FD0CFFA8FD05A727FD06F8A8FD18FFFD05F821%FD05234DFFFD0923A37EFD0923FF4EFD0823A978FD0923A978232323FD0A%22A7A76E686893FD04FCB5BCBCC3C3FD06CAFFFD06A7FD06F827FD18FFFD%05F827FD0523A2FF54FD0823A8FFFD082353FF78FD0823FF7EFD0923FFFF%2323FD0B22A7A7A7686868FD0FFC686F6F9A7CA7A77CFD06F87DFD17FFFD%05F820232378FD06FFA94E23237EFD06FFA9232329FD07FF4E2323FD07FF%54232323A8FD06FF7EFD0A22FD04A76E93FD0FFCB5FD05689AA751FD05F8%52FD17FFFD05F8212323234EA9FFFFFFA2FD052378FD04FF7EFD0523A9FF%FFFFCBFD0523A2FD04FF4DFD052378FD04FF78FD0B22A0FD04A76FFD0FFC%FD08684AFD06F87DFD16FFFD05F820FD0423A2FFFFFF54FD0623A9FFFFFF%FD06234DFFFFFF78FD052329FFFFFFA2FD0723FD04FF2323FD0A226899A7%A7A7CFC3B5FD0DFCB5FD086820FD06F8A8FD15FFFD05F821FD0423A8FF78%FF78FD052329FF7EA8FF4EFD0523A2A87ECBA9FD052378FF7EA8FFFD0623%4DFF7EA9FF29FD0B2268686E7CA7A7FFFFC3BCB5FD0AFCFD0A68FD07F87D%FD14FFFD06F8FD0423A32323237EFD0523544D2323544DFD0523784E234E%7EFD0523544E2323784EFD0523784D2323782923FD0A22FD0468A0CFFD06%FFFD04CAC3CAC3C3BCBCFD096844FD07F827527D527D527D527D527D527D%527D527D527D52FD05F827FD342301FD0A22FD05687CFD0FFFA8A77675FD%076820FD1FF821FD3523FD0A22FD056899FD10FFFD04A79A93FD056820FD%1EF827FD3423FD0B226FFD0568B5CAFD0DFFA8FD06A7A0FD04684420FD1D%F821FD0623A3FD0923544DFD09237EFD09237E4EFD09237829232323FD0A%22A79A68686893FCFCBCCACAFD0BFFFD08A76EFD04684BFD1CF827FD0523%78FFFD09237EA8FD0923FF4DFD0823CB53FD0923A8A22323FD0B22A7A79A%686868FD06FCFD06B5BCBCC39AA0FD08A76FFD04686F5127FD19F8202323%4E4D54A8FF78544D4E23234D544DFFFF544D54232323544DA3FFA94D5429%2323544D7EFFFF4D544D2323234D5454FFFF544D4EFD0A22A7A7A7A06893%FD0FFCB568686E9AA0FD05A76FFD0468A0FD0FFF52FD0AF821232323CBFD%05FFA223232378A8FD05FF532323297EFD05FFA829232378FD05FFA84D23%232378FD06FF4CFD0A22FD04A7A068FD0FFCFD0768A0FD04A7FD0568CAFD%0EFF27FD0BF8FD0423A9FFFFFF7EFD05234EFD04FF29FD05237EFFFFFFA2%FD052354FFFFFFA84EFD052354FD04FF2323FD0A226EFD04A7C9FD0FFCB5%FD076893A1A7A7A768686893FCFD0EFF52FD0AF821FD04237EFFFFFF4DFD%0623FD04FFFD062378FFFFFF7EFD05234DFFFFFFA9FD0723FFFFFFA82301%FD0A226868A0A7A7A7FFB5FD0DFCFD0A687CA7A79A686868FCB5CAFD0CFF%27FD0AF820FD0423FF7E4EA8A9FD052354FF7854FF4DFD0523A2A94DA9A9%FD052378FF4D7EFF4EFD052378A95478FF4D23FD0A22686868A0A7CFFFFF%FFCABCBCB5BCB5FD06FCB5FD09686EA0A7A76F6893FCFCFCC3CAFD0AFF52%FD0AF827FD04234D2323234DFD05234DFD04234EFD05234E2323234EFD05%23542323234DFD062329FD04234DFD0B22FD0468A0A7FD0DFFCACA6F93FD%0A687CA77C6868FD06FCFD09B520FD0AF821FD3523FD0A22FD0568A0FD10%FFA7A7A099FD07686FA7A77593FD0FFC20FD0AF827FD3423FD0B22FD0668%CAFD0EFFA8FD05A76FFD06686FA7A76FFD0FFC20FD0AF821FD06234EFD09%234DFD1F234DFD0423FD0A22A06E68686893FCC3CAFD0DFFFD07A799FD05%68A0A7CFB5FD0EFC44FD0AF827FD05234DA8FD09235378FD0923CBFD0923%A229FD09237E542323FD0B22A7A0FD0468FCFCFCB5C3C3CAC3CAFD06FFA8%FD08A7A0FD0568A1A7FFB5FD0DFC20FD0BF8FD052378FFFD0923FFA9FD08%2354FF78FD07234EFF7EFD0923FFA2232323FD0A22A7A7A0686893FD0FFC%C36FA0A0FD06A7A0FD0568CFFFFFC3BCB5B5B5BCB5B5B5BCB5B5B54BFD0A%F8212323297EA2FFFFCB7E7E232323787EA9FFFFA2A25323232378A9A8FF%A8A9784D232378A8A8FFA9A97854232323787EA9FFFFA27E28FD0A22A7A7%A77C6868FD0FFCFD0568997CFD04A7A0FD04686EFD0FFF27FD0AF8202323%237EFD05FF54FD0423CBFD04FFA84E23232378FD05FF7E2323234EFD05FF%A9FD04234DCBFD04FFA84EFD0A22A0A7A7A7A09AFD0FFCB5FD06686FFD04%A79A68686893C3FD0EFF52FD0AF821FD042378FFFFFF4DFD0623FFFFFFA8%FD062354FFFFFF7EFD05234DFFFFFFA8FD0723FFFFFFA823FD0B226875FD%04A7BCFD0EFCFD09689AA7A7A06F686868FCC3FD0DFF27FD0AF820FD0423%A9FFFFFF78FD05234EFD04FFFD062378FFA9FF7EFD05234EFFA9FFA9FD06%234EFD04FF2323FD0A2268686FA7A7CFFFCABCB5FD0BFCB5FD096899A7A7%7C686893FCFCC3FD0CFF27FD0AF821FD0423A84E23787EFD05234DA92323%7E78FD0523A953234DA9FD05237E782323A9FD0623537E2329A24EFD0B22%FD0468A7A7FD04FFCAC3C3BCBCBCC3BCBCB5B5FD0B6899A7A76E6868FD04%FCC3C3FD09FF27FD0AF821FD3523FD0A22FD04686ECFFD10FFA09A6EFD08%68A0A7A76893FD0FFC44FD0AF827FD3423FD0B22FD05686FFD0FFFA8A7A7%A7A075FD0768A0A7A068FD0FFC20FD0AF800FD3523FD0A22FD056893BCFD%0FFFFD06A76FFD0668A7A7C9FD0FFC44FD0AF827FD342301FD0A22A7FD05%68FCFCC3CAFD0BFFA8FD07A77CFD05686EA7A7BCFD0EFC20FD0AF821FD35%23FD0A22A7A76F686893FD04FCB5BCBCC3BCC3BCC3C3CACAFFFD09A793FD%046875CFFFCAFD0DFC44FD0AF8216A706A706A706A706A706A706A706A70%6A706A706A706A706A706A706A706A706A706A706A706A706A706A706A70%6A706A706A70214C21FD0822A7A7A76F6868FD0FFC68686E7576FD05A7A1%6FFD046876FFFFFFC3C3BCC3BCC3BCC3BCC3BCC320FD0AF820FD34FCB5FD%05686AFD0422FD04A76F93FD0FFCB5FD056899A1FD04A7FD046893CAFD0E%FF27FD0AF820FD34FCFD0868202222A0FD04A775FD0FFCFD086875A7A7A7%76FD0468B5CAFD0DFF27FD0AF820FD34FCB5FD0968466893A0A7A7CFC3B5%FD0DFCB5FD08686EA7A7A76F686893FCBCFD0DFF52FD0AF820FD34FCFD0E%687CA7A7FFFFCABCB5FD0AFCFD0B68A7A7A7686868FCFCB5C3FD0BFF27FD%0AF820FD34FCB5FD0E68A0CFFD08FFCACAC3CACAC3BCC3FD0B68A7A7A068%93FD05FCBCBCC3BCC3BCC3BCC3BC4BFD0AF827FD34FFA8A7A7A77CA0756F%FD08687CFD0FFFA8A77C99FD0968A7A76F68FD0FFC20FD0AF827FD35FFFD%08A7756EFD056899FD10FFFD04A7A093FD066875A7A79AFD0FFC44FD0AF8%27FD34FFA8FD09A7A16FFD0568B5C3FD0DFFA8FD06A7A0FD06687CA7A7FD%0FFC20FD0AF827FD35FFFD0BA7A068686893FCFCB5C3CAFD0BFFFD08A76F%FD04686FA7CFCAB5FD0DFC20FD0AF827FD34FFA8FD0CA7A0686868FD06FC%FD08B5C393A07CFD07A76FFD04686FA7FFCAC3FD0CFC20FD0AF820FD34FC%B56868686F6F9A9AFD06A7A06893FD0FFCB568686899A0FD05A76FFD0468%9AFD0FFF52FD0AF820FD34FCFD09686F7CFD04A7A068FD0FFCFD0768A0FD%04A76EFD0468CAFD0EFF27FD0AF820FD34FCB5FD0A686EFD04A7CAFD0FFC%B5FD076893A0A7A7A768686893FCCAFD0DFF52FD0AF820FD34FCFD0D68A0%A7A7A7FFBCFD0DFCFD0A6876A7A79A686868FCFCCAFD0CFF27FD0AF820FD%34FCB5FD0D68A0A7CFFFFFFFCABCBCB5BCB5BCB5B5FCFCFCB5FD0A6876A7%A7936893FCFCFCBCCAFD0AFF52FD0AF827BCC3BCC3BCC3BCC3BCC3BCC3BC%C3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BC%C3BCC3BCC3BCC3BCC36F9A756F6EFD0A68A0A7FD0DFFCACA7699FD0A687C%A7A06868FD06FCFD09B520FD0AF827FD35FFFD06A79A93FD0768A0FD10FF%A7A7A19AFD0868A7A77593FD0FFC20FD0AF827FD34FFA8FD09A76EFD0668%CAFD0EFFA8FD05A7756EFD05686FA7A76FFD0FFC20FD0AF827FD35FFFD0A%A7A06E68686893FCC3CAFD0DFFFD07A79AFD05689AA7CFB5FD0EFC44FD0A%F827FD34FFA8FD0BA7A0FD0468FCFCFCB5C3C3CAC3CAFD06FFA8FD08A7A0%FD0568A0A7FFBCFD0DFC20FD0AF820C3BCC3BCC3BCC3BCC3BCC3BCC3BCC3%BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3%BCC3BCC3BCC3BCC9759A76A1A0FD07A7A0686893FD0FFCC36FA0A0FD07A7%FD0568CFFFFFC3BCB5B5B5BCB5B5B5BCB5B5B54BFD0AF820FD34FCFD0768%6F75FD05A77C6868FD0FFCFD0568997CFD04A7A0FD0568FD0FFF27FD0AF8%20FD34FCB5FD096899A0A7A7A7A09AFD0FFCB5FD06686FFD04A79A686868%93BCFD0EFF52FD0AF820FD34FCFD0C6875FD04A7BCFD0EFCFD09689AA7A7%A06F686868FCC3FD0DFF27FD0AF820FD34FCB5FD0D68A7A7CFFFCABCB5FD%0BFCB5FD096899A7A7A0686893FCFCBCFD0CFF27FD0AF820FD34FCFD0F68%A7A7FD04FFCAC3C3BCBCBCC3BCBCB5B5FD0B6899A7A76F6868FD04FCBCC3%CACAFD07FF27FD0AF827FD35CAA0A1A0A07593FD08686ECFFD10FFA09A6E%FD0868A0A7A76893FD0FFC44FD0AF827FD34FFA8FD07A7766FFD06686EFD%0FFFA8A7A7A7A075FD0768A0A7A168FD0FFC20FD0AF827FD35FFFD09A7A1%FD056893B5FD0FFFFD06A76FFD0668A7A7C9FD0FFC44FD0AF827FD34FFA8%FD0BA76FFD0468FCFCBCCAFD0BFFA8FD07A77CFD05686EA7A7C3FD0EFC20%FD0AF827FD35FFFD0CA76F686893FD05FCBCBCC3BCC3BCC3BCC3CACFFD09%A793FD046875CFFFCAFD0DFC44FD0AF820FD34B5686F6E6F6F9A76FD07A7%6F6868FD0FFC6868687575FD05A7A16FFD046876FFFFFFC3C3BCC3BCC3BC%C3BCC3BCC320FD0AF820FD34FCB5FD07686F75FD05A76F93FD0FFCB5FD05%6899A1FD04A7FD046893CAFD0EFF27FD0AF820FD34FCFD0B689AFD04A775%FD0FFCFD08686FA7A7A776FD0468B5CAFD0DFF27FD0AF820FD34FCB5FD0B%6893A0A7A7CFCABCFD0DFCB5FD08686EA7A7A76F686893FCBCFD0DFF52FD%0AF820FD34FCFD0E687CA7A7FFFFCABCB5FD0AFCFD0B68A1A7A7686868FC%FCB5C3FD0BFF27FD0AF820BCB5B5B5BCB5B5B5BCB5B5B5BCB5B5B5BCB5B5%B5BCB5B5B5BCB5B5B5BCB5B5B5BCB5B5B5BCB5B5B5BCB5B5B5BCB5B5B5BC%B5B5B5C36F93FD0C68A0CFFD0BFFCACACABCC3FD0B68A7A7A06893FD05FC%BCBCC3BCC3BCC3BCC3BC4BFD0AF827FD34FFA8FD04A7A1756FFD08687CFD%0FFFA8A7A0A0FD0968A7A76F68FD0FFC20FD0AF827FD35FFFD08A79A6FFD%056893FD10FFFD04A7A199FD066875A7A79AFD0FFC44FD0AF827FD34FFA8%FD09A7A175FD0568FCC3FD0DFFA8FD06A7A1FD066876A7A7FD0FFC20FD0A%F827FD35FFFD0BA7A068686893FCFCFCC3C3FD0BFFFD08A76FFD04686FA1%CFCAB5FD0DFC20FD0AF827FD34FFA87CFD0BA7A0686868FD09FCFD05B5BC%93A07CFD07A775FD04686FA7FFCAC3FD0CFC20FD44F8265152FD06A7A068%93FD0FFCB56868689976FD05A79AFD04689AFD0FFF52FD48F82751FD04A7%A06EFD0FFCFD07689AA1A7A7A76FFD0468C3FD0EFF27FD4BF8FD04A7CAFD%0FFCB5FD07686FA0A7A7A768686893FCCAFD0DFF52FD4CF852A7A7A7FFBC%B5FD0CFCFD0A6875A7A79A686868FCFCCAFD0CFF27FD4DF851A7CFFD04FF%C3C3B5BCB5BCB5BCFCFCFCB5FD0A6876A7A7936893FCFCFCBCC3FD0AFF52%FD05F8527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D52522727FD09F851A7FD0EFFCA769AFD0A687CA7A06868FD08FCFD%07B520FD05F8FD41FF5227FD07F87DFD10FFA7A7A7A0FD0868A0A79A93FD%0FFC20FD05F8FD42FFA852FD07F87DFD0EFFA8FD05A77C6EFD05686FA7A7%6FFD0FFC20FD05F8FD44FF52FD07F852A8FD0DFFFD07A79AFD05689AA7CF%BCFD0EFC44FD05F8FD45FF52FD08F8275252A87DA87DA8A8FFFFFFA8FD08%A7A0FD0568A0A7FFBCFD0DFC20FD05F8FD46FF52FD12F8275252FD09A7FD%0568CFFFFFCAC3B5B5B5BCB5B5B5BCB5B5B54BFD05F8FD47FF52FD15F827%51FD06A7A0FD0568FD0FFF27FD05F8FD48FF7DFD17F852FD05A79A686868%93BCFD0EFF52FD05F8FD49FFA827FD16F8267CFD04A76F686868FCBCFD0D%FF27FD05F8FD4BFFA87D27FD15F852A7A7A7A0686893FCFCBCFD0CFF27FD%05F8FD4FFFA87DA87D52527D525227FD0BF851A7A7A76F6868FD04FCBCC3%CAC3CAC3CAC3CAC3CA20FD05F8FD5AFFA87D27FD08F87CA7A7A76E93FD0F%FC44FD05F8FD5DFFA827FD07F87CA7A7A16EFD0FFC20FD05F8FD5FFF52FD%06F851A7A7A7C9FD0FFC44FD05F8FD60FF27FD06F87DA7A7A7C3FD0EFC20%FD05F8FD61FF27FD05F827A7A7CFFFCAB5FD0CFC44FD05F8FD61FFA8FD06%F87CA7A7FFFFFFCACAC3CAC3CAC3CAC3CAC3CA20FD05F8FD62FF52FD05F8%27A7CFFD0FFF27FD05F8FD62FFA8FD06F852A7FD0FFF27FD05F8FD63FF52%FD06F8A8FD0FFF52FD05F8FD64FFFD07F87DFD0EFF27FD05F8FD64FF7DFD%07F827527D527D527D527D527D527D5227FD05F8FD65FF27FD1AF8FD66FF%27FD19F8FD66FFA827FD18F8FD68FF7DFD17F8FD6AFF5227FD13F8F8%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0 0 0 0 1 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 5) Pc0.0118 0.9608 0.9137 0 1 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 39) Pc0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 47) Pc0.1882 0.1216 0.3372 0.0157 0.8 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 48) Pc0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 112) Pc0.8667 0.9412 0 0 0.2 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 181) Pc0.8353 0.9686 0.1608 0.0431 0.2 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 182) Pc0 0 0 1 0 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 220) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0 0 0 0 1 1 1 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR287.4585 450.5137 m285.1875 450.5137 284.6665 450.5137 v283.5835 450.5137 283.2017 451.4854 282.875 452.0972 c282.5415 452.7222 281.9165 453.6387 279.6665 453.6387 c278.7495 453.6387 278.0171 453.8472 277.5835 454.3887 c276.9165 455.2222 276.25 455.498 275.0313 455.498 c274.2393 455.498 264.5415 455.498 y264.5415 437.5 l274.2393 437.5 275.0313 437.5 v276.25 437.5 276.9165 437.2241 277.5835 436.3906 c278.0171 435.8491 278.7495 435.6406 279.6665 435.6406 c281.9165 435.6406 282.5415 434.7241 282.875 434.0991 c283.2017 433.4873 283.5835 432.5156 284.6665 432.5156 c285.1875 432.5156 287.4585 432.5156 y287.4585 450.5137 lf0.0118 0.9608 0.9137 0 1 0 0 Xa264.5415 440 m264.5415 439 L275.0313 439 L276.1094 439 276.9155 438.7544 277.5 438.0781 c278 437.5 278.5073 437.1406 279.6665 437.1406 c281.7524 437.1406 282.5557 436.4438 283 436 c283.4443 435.5562 284 434.0156 285 434.0156 C287.4585 434.0156 L287.4585 435.0156 L285.5 435.0156 L284.5 435.0156 284.3379 435.3613 283.4907 436.5093 c282.6436 437.6572 282.0469 438.1406 279.6665 438.1406 c278.8306 438.1406 278.2769 438.3247 277.9736 438.7031 c277.2173 439.6484 276.4199 440 275.0313 440 C264.5415 440 Lf264.5415 442 m264.5415 441 L275.0313 441 L276.1094 441 276.9155 440.7544 277.5 440.0781 c278 439.5 278.5073 439.1406 279.6665 439.1406 c281.7524 439.1406 282.5557 438.4438 283 438 c283.4443 437.5562 284 436.0156 285 436.0156 C287.4585 436.0156 L287.4585 437.0156 L285.5 437.0156 L284.5 437.0156 284.3379 437.3613 283.4907 438.5093 c282.6436 439.6572 282.0469 440.1406 279.6665 440.1406 c278.8306 440.1406 278.2769 440.3247 277.9736 440.7031 c277.2173 441.6484 276.4199 442 275.0313 442 C264.5415 442 Lf264.5415 443.9844 m264.5415 442.9844 L275.0313 442.9844 L276.1094 442.9844 276.9155 442.7388 277.5 442.0625 c278 441.4844 278.5073 441.125 279.6665 441.125 c281.7524 441.125 282.5557 440.4282 283 439.9844 c283.4443 439.5405 284 438 285 438 C287.4585 438 L287.4585 439 L285.5 439 L284.5 439 284.3379 439.3457 283.4907 440.4937 c282.6436 441.6416 282.0469 442.125 279.6665 442.125 c278.8306 442.125 278.2769 442.3091 277.9736 442.6875 c277.2173 443.6328 276.4199 443.9844 275.0313 443.9844 C264.5415 443.9844 Lf264.5415 445.9844 m264.5415 444.9844 L275.0313 444.9844 L276.1094 444.9844 276.9155 444.7388 277.5 444.0625 c278 443.4844 278.5073 443.125 279.6665 443.125 c281.7524 443.125 282.5557 442.4282 283 441.9844 c283.4443 441.5405 284 440 285 440 C287.4585 440 L287.4585 441 L285.5 441 L284.5 441 284.3379 441.3457 283.4907 442.4937 c282.6436 443.6416 282.0469 444.125 279.6665 444.125 c278.8306 444.125 278.2769 444.3091 277.9736 444.6875 c277.2173 445.6328 276.4199 445.9844 275.0313 445.9844 C264.5415 445.9844 Lf264.5415 447.9844 m264.5415 446.9844 L275.0313 446.9844 L276.1094 446.9844 276.9155 446.7388 277.5 446.0625 c278 445.4844 278.5073 445.125 279.6665 445.125 c281.7524 445.125 282.5557 444.4282 283 443.9844 c283.4443 443.5405 284 442 285 442 C287.4585 442 L287.4585 443 L285.5 443 L284.5 443 284.3379 443.3457 283.4907 444.4937 c282.6436 445.6416 282.0469 446.125 279.6665 446.125 c278.8306 446.125 278.2769 446.3091 277.9736 446.6875 c277.2173 447.6328 276.4199 447.9844 275.0313 447.9844 C264.5415 447.9844 Lf264.5415 449.9844 m264.5415 448.9844 L275.0313 448.9844 L276.1094 448.9844 276.9155 448.7388 277.5 448.0625 c278 447.4844 278.5073 447.125 279.6665 447.125 c281.7524 447.125 282.5557 446.4282 283 445.9844 c283.4443 445.5405 284 444 285 444 C287.4585 444 L287.4585 445 L285.5 445 L284.5 445 284.3379 445.3457 283.4907 446.4937 c282.6436 447.6416 282.0469 448.125 279.6665 448.125 c278.8306 448.125 278.2769 448.3091 277.9736 448.6875 c277.2173 449.6328 276.4199 449.9844 275.0313 449.9844 C264.5415 449.9844 Lf264.5415 451.9688 m264.5415 450.9688 L275.0313 450.9688 L276.1094 450.9688 276.9155 450.7231 277.5 450.0469 c278 449.4688 278.5073 449.1094 279.6665 449.1094 c281.7524 449.1094 282.5557 448.4126 283 447.9688 c283.4443 447.5249 284 445.9844 285 445.9844 C287.4585 445.9844 L287.4585 446.9844 L285.5 446.9844 L284.5 446.9844 284.3379 447.3301 283.4907 448.478 c282.6436 449.626 282.0469 450.1094 279.6665 450.1094 c278.8306 450.1094 278.2769 450.2935 277.9736 450.6719 c277.2173 451.6172 276.4199 451.9688 275.0313 451.9688 C264.5415 451.9688 Lf264.5415 453.9688 m264.5415 452.9688 L275.0313 452.9688 L276.1094 452.9688 276.9155 452.7231 277.5 452.0469 c278 451.4688 278.5073 451.1094 279.6665 451.1094 c281.7524 451.1094 282.5557 450.4126 283 449.9688 c283.4443 449.5249 284 447.9844 285 447.9844 C287.4585 447.9844 L287.4585 448.9844 L285.5 448.9844 L284.5 448.9844 284.3379 449.3301 283.4907 450.478 c282.6436 451.626 282.0469 452.1094 279.6665 452.1094 c278.8306 452.1094 278.2769 452.2935 277.9736 452.6719 c277.2173 453.6172 276.4199 453.9688 275.0313 453.9688 C264.5415 453.9688 Lf1 Ap0.1882 0.1216 0.3372 0.0157 0.8 0.8 0.6 Xa277.9893 436.5 m275.0356 437.5 L275.0356 455.457 L277.9893 454.5 L277.9893 436.5 Lf284 432.4932 m282.46 434.5972 L281.0415 435.4722 L281.0415 453.4302 L282.4585 452.4722 L284 450.5137 L284 432.4932 Lf0 Ap0 R0 0 0 1 0 0 0 XA0.75 w283.5938 432.4512 mS0.1882 0.1216 0.3372 0.0157 0.8 0.8 0.6 XA1 w [0.6 1.45 ]0 d275.5 452.7793 m275.5 445.7793 lSu0 O0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa[]0 d277.9736 438.7031 m277.2183 439.6475 276.4214 439.999 275.0356 439.9995 C275.0356 438.9995 L276.1113 438.999 276.9165 438.7534 277.5 438.0781 c277.6553 437.8989 277.8135 437.7437 277.9893 437.6104 C277.9893 438.689 L277.9849 438.6943 277.978 438.6978 277.9736 438.7031 cf277.9893 439.6104 m277.9893 440.689 L277.9849 440.6943 277.978 440.6978 277.9736 440.7031 c277.2183 441.6475 276.4214 441.999 275.0356 441.9995 C275.0356 440.9995 L276.1113 440.999 276.9165 440.7534 277.5 440.0781 c277.6553 439.8989 277.8135 439.7437 277.9893 439.6104 Cf277.9893 441.5947 m277.9893 442.6733 L277.9849 442.6787 277.978 442.6821 277.9736 442.6875 c277.2183 443.6318 276.4214 443.9834 275.0356 443.9839 C275.0356 442.9839 L276.1113 442.9834 276.9165 442.7378 277.5 442.0625 c277.6553 441.8833 277.8135 441.728 277.9893 441.5947 Cf277.9893 443.5947 m277.9893 444.6733 L277.9849 444.6787 277.978 444.6821 277.9736 444.6875 c277.2183 445.6318 276.4214 445.9834 275.0356 445.9839 C275.0356 444.9839 L276.1113 444.9834 276.9165 444.7378 277.5 444.0625 c277.6553 443.8833 277.8135 443.728 277.9893 443.5947 Cf277.9893 445.5947 m277.9893 446.6733 L277.9849 446.6787 277.978 446.6821 277.9736 446.6875 c277.2183 447.6318 276.4214 447.9834 275.0356 447.9839 C275.0356 446.9839 L276.1113 446.9834 276.9165 446.7378 277.5 446.0625 c277.6553 445.8833 277.8135 445.728 277.9893 445.5947 Cf277.9893 447.5947 m277.9893 448.6733 L277.9849 448.6787 277.978 448.6821 277.9736 448.6875 c277.2183 449.6318 276.4214 449.9834 275.0356 449.9839 C275.0356 448.9839 L276.1113 448.9834 276.9165 448.7378 277.5 448.0625 c277.6553 447.8833 277.8135 447.728 277.9893 447.5947 Cf277.9893 449.5791 m277.9893 450.6577 L277.9849 450.6631 277.978 450.6665 277.9736 450.6719 c277.2183 451.6162 276.4214 451.9678 275.0356 451.9683 C275.0356 450.9683 L276.1113 450.9678 276.9165 450.7222 277.5 450.0469 c277.6553 449.8677 277.8135 449.7124 277.9893 449.5791 Cf277.9893 451.5791 m277.9893 452.6577 L277.9849 452.6631 277.978 452.6665 277.9736 452.6719 c277.2183 453.6162 276.4214 453.9678 275.0356 453.9683 C275.0356 452.9683 L276.1113 452.9678 276.9165 452.7222 277.5 452.0469 c277.6553 451.8677 277.8135 451.7124 277.9893 451.5791 CfUu281.0415 438.0586 m281.0415 437.0156 L282.1411 436.7954 282.6709 436.3291 283 436 c283.2681 435.7324 283.5781 435.0693 284 434.5825 C284 435.8203 L283.855 436.0093 283.6934 436.2349 283.4907 436.5093 c282.8384 437.3936 282.3257 437.8799 281.0415 438.0586 Cf281.0415 440.0586 m281.0415 439.0156 L282.1411 438.7954 282.6709 438.3291 283 438 c283.2681 437.7324 283.5781 437.0693 284 436.5825 C284 437.8203 L283.855 438.0093 283.6934 438.2349 283.4907 438.5093 c282.8384 439.3936 282.3257 439.8799 281.0415 440.0586 Cf281.0415 442.043 m281.0415 441 L282.1411 440.7798 282.6709 440.3135 283 439.9844 c283.2681 439.7168 283.5781 439.0537 284 438.5669 C284 439.8047 L283.855 439.9937 283.6934 440.2192 283.4907 440.4937 c282.8384 441.3779 282.3257 441.8643 281.0415 442.043 Cf281.0415 444.043 m281.0415 443 L282.1411 442.7798 282.6709 442.3135 283 441.9844 c283.2681 441.7168 283.5781 441.0537 284 440.5669 C284 441.8047 L283.855 441.9937 283.6934 442.2192 283.4907 442.4937 c282.8384 443.3779 282.3257 443.8643 281.0415 444.043 Cf281.0415 446.043 m281.0415 445 L282.1411 444.7798 282.6709 444.3135 283 443.9844 c283.2681 443.7168 283.5781 443.0537 284 442.5669 C284 443.8047 L283.855 443.9937 283.6934 444.2192 283.4907 444.4937 c282.8384 445.3779 282.3257 445.8643 281.0415 446.043 Cf281.0415 448.043 m281.0415 447 L282.1411 446.7798 282.6709 446.3135 283 445.9844 c283.2681 445.7168 283.5781 445.0537 284 444.5669 C284 445.8047 L283.855 445.9937 283.6934 446.2192 283.4907 446.4937 c282.8384 447.3779 282.3257 447.8643 281.0415 448.043 Cf281.0415 450.0273 m281.0415 448.9844 L282.1411 448.7642 282.6709 448.2979 283 447.9688 c283.2681 447.7012 283.5781 447.0381 284 446.5513 C284 447.7891 L283.855 447.978 283.6934 448.2036 283.4907 448.478 c282.8384 449.3623 282.3257 449.8486 281.0415 450.0273 Cf283 449.9688 m283.2681 449.7012 283.5781 449.0381 284 448.5513 C284 449.7891 L283.855 449.978 283.6934 450.2036 283.4907 450.478 c282.8384 451.3623 282.3257 451.8486 281.0415 452.0273 C281.0415 450.9844 L282.1411 450.7642 282.6709 450.2979 283 449.9688 cfU0.8667 0.9412 0 0 0.2 0 0.6 Xa275.0313 454.998 m265.9482 454.998 265.0415 454.998 V265.0415 454.5449 265.0415 449.9673 265.0415 446 C265.9482 446 275.0313 446 Y275.9458 446 276.4609 445.8188 276.9375 445.3438 C276.9375 454.3418 L276.4609 454.8169 275.9458 454.998 275.0313 454.998 Cf0.8353 0.9686 0.1608 0.0431 0.2 0 0.4 Xa275 454.998 m275 446 L275.0063 446 275.0313 446 Y275.9458 446 276.4609 445.8188 276.9375 445.3438 C276.9375 454.3418 L276.4609 454.8169 275.9458 454.998 275.0313 454.998 C275.0063 454.998 275 454.998 Vfu0 0 0 0 1 1 1 Xa266.3145 454.4873 m266.5 454 L267.0205 453.9746 L266.6143 453.6475 L266.751 453.1445 L266.3145 453.4297 L265.8779 453.1445 L266.0146 453.6475 L265.6084 453.9746 L266.1299 454 L266.3145 454.4873 Lf268.3145 454.4873 m268.5 454 L269.0205 453.9746 L268.6143 453.6475 L268.751 453.1445 L268.3145 453.4297 L267.8779 453.1445 L268.0146 453.6475 L267.6084 453.9746 L268.1299 454 L268.3145 454.4873 Lf270.2939 454.4873 m270.4795 454 L271 453.9746 L270.5938 453.6475 L270.7305 453.1445 L270.2939 453.4297 L269.8574 453.1445 L269.9941 453.6475 L269.5879 453.9746 L270.1094 454 L270.2939 454.4873 Lf272.2061 454.4873 m272.3916 454 L272.9121 453.9746 L272.5059 453.6475 L272.6426 453.1445 L272.2061 453.4297 L271.7695 453.1445 L271.9063 453.6475 L271.5 453.9746 L272.0215 454 L272.2061 454.4873 Lf274.2939 454.4873 m274.4795 454 L275 453.9746 L274.5938 453.6475 L274.7305 453.1445 L274.2939 453.4297 L273.8574 453.1445 L273.9941 453.6475 L273.5879 453.9746 L274.1094 454 L274.2939 454.4873 Lf266.3145 452.3428 m266.5 451.8555 L267.0205 451.8301 L266.6143 451.5029 L266.751 451 L266.3145 451.2852 L265.8779 451 L266.0146 451.5029 L265.6084 451.8301 L266.1299 451.8555 L266.3145 452.3428 Lf268.3145 452.3428 m268.5 451.8555 L269.0205 451.8301 L268.6143 451.5029 L268.751 451 L268.3145 451.2852 L267.8779 451 L268.0146 451.5029 L267.6084 451.8301 L268.1299 451.8555 L268.3145 452.3428 Lf270.2939 452.3428 m270.4795 451.8555 L271 451.8301 L270.5938 451.5029 L270.7305 451 L270.2939 451.2852 L269.8574 451 L269.9941 451.5029 L269.5879 451.8301 L270.1094 451.8555 L270.2939 452.3428 Lf272.2061 452.3428 m272.3916 451.8555 L272.9121 451.8301 L272.5059 451.5029 L272.6426 451 L272.2061 451.2852 L271.7695 451 L271.9063 451.5029 L271.5 451.8301 L272.0215 451.8555 L272.2061 452.3428 Lf274.2939 452.3428 m274.4795 451.8555 L275 451.8301 L274.5938 451.5029 L274.7305 451 L274.2939 451.2852 L273.8574 451 L273.9941 451.5029 L273.5879 451.8301 L274.1094 451.8555 L274.2939 452.3428 Lf266.3145 450.3428 m266.5 449.8555 L267.0205 449.8301 L266.6143 449.5029 L266.751 449 L266.3145 449.2852 L265.8779 449 L266.0146 449.5029 L265.6084 449.8301 L266.1299 449.8555 L266.3145 450.3428 Lf268.3145 450.3428 m268.5 449.8555 L269.0205 449.8301 L268.6143 449.5029 L268.751 449 L268.3145 449.2852 L267.8779 449 L268.0146 449.5029 L267.6084 449.8301 L268.1299 449.8555 L268.3145 450.3428 Lf270.2939 450.3428 m270.4795 449.8555 L271 449.8301 L270.5938 449.5029 L270.7305 449 L270.2939 449.2852 L269.8574 449 L269.9941 449.5029 L269.5879 449.8301 L270.1094 449.8555 L270.2939 450.3428 Lf272.2061 450.3428 m272.3916 449.8555 L272.9121 449.8301 L272.5059 449.5029 L272.6426 449 L272.2061 449.2852 L271.7695 449 L271.9063 449.5029 L271.5 449.8301 L272.0215 449.8555 L272.2061 450.3428 Lf274.2939 450.3428 m274.4795 449.8555 L275 449.8301 L274.5938 449.5029 L274.7305 449 L274.2939 449.2852 L273.8574 449 L273.9941 449.5029 L273.5879 449.8301 L274.1094 449.8555 L274.2939 450.3428 Lf266.3145 448.3428 m266.5 447.8555 L267.0205 447.8301 L266.6143 447.5029 L266.751 447 L266.3145 447.2852 L265.8779 447 L266.0146 447.5029 L265.6084 447.8301 L266.1299 447.8555 L266.3145 448.3428 Lf268.3145 448.3428 m268.5 447.8555 L269.0205 447.8301 L268.6143 447.5029 L268.751 447 L268.3145 447.2852 L267.8779 447 L268.0146 447.5029 L267.6084 447.8301 L268.1299 447.8555 L268.3145 448.3428 Lf270.2939 448.3428 m270.4795 447.8555 L271 447.8301 L270.5938 447.5029 L270.7305 447 L270.2939 447.2852 L269.8574 447 L269.9941 447.5029 L269.5879 447.8301 L270.1094 447.8555 L270.2939 448.3428 Lf272.2061 448.3428 m272.3916 447.8555 L272.9121 447.8301 L272.5059 447.5029 L272.6426 447 L272.2061 447.2852 L271.7695 447 L271.9063 447.5029 L271.5 447.8301 L272.0215 447.8555 L272.2061 448.3428 Lf274.2939 448.3428 m274.4795 447.8555 L275 447.8301 L274.5938 447.5029 L274.7305 447 L274.2939 447.2852 L273.8574 447 L273.9941 447.5029 L273.5879 447.8301 L274.1094 447.8555 L274.2939 448.3428 LfU274.2939 454.4873 m274.4795 454 L275 453.9746 L274.5938 453.6475 L274.7305 453.1445 L274.2939 453.4297 L273.8574 453.1445 L273.9941 453.6475 L273.5879 453.9746 L274.1094 454 L274.2939 454.4873 Lf0 R0 0 0 1 0 0 0 XA287.4585 450.5137 m285.1875 450.5137 284.6665 450.5137 v283.5835 450.5137 283.2017 451.4854 282.875 452.0972 c282.5415 452.7222 281.9165 453.6387 279.6665 453.6387 c278.7495 453.6387 278.0171 453.8472 277.5835 454.3887 c276.9165 455.2222 276.25 455.498 275.0313 455.498 c274.2393 455.498 264.5415 455.498 y264.5415 437.5 l274.2393 437.5 275.0313 437.5 v276.25 437.5 276.9165 437.2241 277.5835 436.3906 c278.0171 435.8491 278.7495 435.6406 279.6665 435.6406 c281.9165 435.6406 282.5415 434.7241 282.875 434.0991 c283.2017 433.4873 283.5835 432.5156 284.6665 432.5156 c285.1875 432.5156 287.4585 432.5156 y287.4585 450.5137 lsLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF