%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (480\202\261\202\242\202\314\202\332\202\350.ai)%%CreationDate: (7/19/03) (5:35 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 241 471.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 15818 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD04FFCA7CFD0475A0A7FD76FFA87CFD0975FD74FFA87CFD0B75FD%73FF7CFD0D75FD71FFCAFD0E75A7FD70FF76FD06759A76FD0675A0FD70FF%FD0675FD049CFD0675FD70FFFD05759AFD049C76FD0575FD70FFFD057576%FD049C9BFD0575FD70FFFD0675FD049CFD0675FD70FFA0FD0675769BFD06%757CFD0AFFA9547E547E547E547E547E547E547E547E547E547E547E547E%547E547E547E547E547E547E547E547E547E547E547E547E547E547E547E%547E547E547E547E547E547E547E547E547E547E547E547E547E547E547E%547E547E547E547E547E547E547E547E54A1FD0E75A8FD0AFF53FD6502FF%FD0D75A0FD0BFF7EFD6502FFFFFD0C75A8FD0BFF54FD6502FFFFFFFD0975%A0CFFD0CFF7EFD6502FD04FFA1A0FD047576A7FD0EFF28FD6502FD05FF75%FD046E9AFD0EFF5229FD0502FD0643678BFD05FFAF8BFD0C43FD050F4343%433D37FD050F3D4343433DFD060F3D43434315FD060F4343433D37FD050F%37FD0443FD060F154343433D15FD050FFD05FF99FD046E75FD0CFFA85252%28FD0502FD05438BFD09FFAFFD0A431BFD050FFD054315FD040F15FD0443%3DFD050FFD0543FD060FFD04433DFD060FFD04433DFD050F3DFD044315FD%050FFD05FF75FD046E9AFD0CFF52525229FD0502FD0443AFFD0CFF67FD09%43FD050FFD0543FD050F3DFD04433DFD050F1BFD04433DFD050FFD0543FD%050F37FD0543FD050F15FD0543FD050FFD05FF75FD046E6FFD0AFFA8FD04%5201FD0502434343AFFD0EFFFD08431BFD050FFD054315FD040F15FD0443%3DFD050F3DFD044315FD050FFD0543FD060FFD0543FD050F3DFD04431BFD%050FFD05FF75FD046E9AFD0AFFFD055229FD050243438BFD10FFFD0843FD%050FFD04433DFD050F3DFD0443FD060F3D4343433D37FD050FFD04433DFD%050F37FD044315FD050F15FD044337FD040F37FD05FF99FD046E6FFD09FF%FD065228FD05024343AFFD05FFA852272752FD06FFAFFD06431B431B3D15%0F15150F150F3D1B431B150F3D15150F0F1B3D1B3D0F1515150F0F15431B%3D150F15150F150F3D1B431B150F3D15150F0F153D1B3D0F151537FD070F%A9FD05FF75FD046E99FD08FFFD075253FD0502438BFD05FFA827FD04F827%FD06FF67FD0A4315FD050F3DFD044315FD050FFD0543FD050F3DFD044315%FD050F3DFD044337FD050FFD0543FD090F5BFD06FF99FD046E75FD07FFFD%07527D53FD050243FD05FFA8FD07F827FD05FF8BFD05431BFD0543FD050F%3DFD044315FD050FFD054315FD040F15FD04433DFD050F3DFD044315FD05%0F1BFD044337FD070F85FD07FF75FD046E9AFD06FFFD07527DFF7EFD0502%8BFD05FF52FD08F8A8FD05FF59FD045259FD0543FD050F3DFD04433DFD05%0FFD0543FD050F3DFD04433DFD050F3DFD04433DFD050FFD054315FD040F%5BFD0AFF99FD046E75FD04FFA8FD07527DA8FF54FD05028BFD05FFFD09F8%52FD05FF84FD04522EFD04433DFD050FFD0543FD060FFD04431BFD050F15%FD044315FD050FFD0543FD060F1B4343433D15FD040F31FD0AFF75FD046E%9AFD04FFFD07527DFFFFFF7EFD0502AFFD04FF7DF82752FD07F8FD05FF59%FD0452593D431B370F3D15370F0F15433D3D0F3715370F150F431B43150F%153D15370F373D431B370F3D15370F0F15433D3D0F3715370F370F3D1B43%3D15FD050F5BFD0AFF75FD046E6FFFFFA8FD07527DA8FFFFFF53FD0502AF%FD04FF52A8FFFFFFFD06F8A8FD04FFA8FD04522EFD050FFD044315FD050F%154343431B15FD050F3D4343433DFD060FFD044315FD060FFD044315FD0A%0F31FD0AFF75FD046E9AFFFFFD07527DFD05FF7EFD0502FD05FF7DFD04FF%A8FD05F8A8FD04FF84FD045259FD050FFD0543FD050F3DFD04433DFD050F%3DFD04433DFD050FFD0543FD050F37FD0543FD0A0FAFFD0AFF99FD046E6F%FFFD07527DFD06FF54FD0502FD05FF7DFD04FF7DFD05F87DFD04FFA8FD04%522EFD050FFD054315FD040F15FD0543FD050F3DFD044315FD050FFD0543%15FD050FFD0543FD050F375B8585AFFD0BFF75FD046E99FD07527DFD07FF%7EFD0502FD05FF7DFD04FF7DFD05F8A8FD04FF84FD045259FD050FFD0543%FD050F3DFD04431BFD050F3DFD044337FD050FFD0543FD050F37FD04431B%FD050F5BFD0FFF99FD046E4AFD06527DA8FD07FF54FD0502AFFD04FF7D52%FFFF7DFD06F8A8FD04FFA8FD04522EFD050FFD0443FD060F153D1B3D1BFD%060F3D43431B3DFD060F1B3D1B3DFD070F3D1B3D1BFD060F85FD0FFF75FD%046E75FD05527DFD09FF7EFD0502AFFD04FFA8FD0AF8FD05FF7DFD045259%FFFFFFAFFD060FA9FFFFFF5BFD060FFFFFFFA937FD050F85FFFFFFA90F37%FD040FA9FFFFFF85FD0B0FAFFD0FFF99FD046E4AFD04527DA8FD09FF54FD%05028BFD05FFFD09F87DFD05FF59FD04522EFD04FFA9FD050FAFFD04FF31%FD050FFD04FFA9FD050F5BFD04FF85FD050FAFFD04FF5BFD090F7FFD10FF%75FD046E755252527DFD0BFF7EFD050267FD05FF7DFD07F827A8FD05FF2E%FD045259FD05FFFD050FA9FD04FF85FD050FFD05FF31FD040F85FD04FFA9%FD050FA9FD04FFAFFD070F5BA9FD11FF75FD046E4AFD04527DFD0AFF53FD%050243FD06FF27FD06F87DFD05FF6759FD04522EFD05FFFD050FA9FD04FF%5BFD050FFD05FF31FD040F5BFD04FFA9FD050FA9FD04FF5BFD080F31A9FD%10FF75FD046E75FD05527DFD09FF7EFD05024367FD06FF52FD04F87DFD06%FF6759FD045259FD04FF5BFD050FA9FFFFFFA937FD050FFD04FF85FD050F%85FD04FF31FD050FA9FFFFFFA937FD090F31FD10FF99FD046E4AFD06527D%FD08FF54FD05024343AFFD06FFA8527DA8FD06FF8B4359FD04522E855B37%0F0F1B3D1B3D0F5B5B37310F15431B3D150F5B5B31370F3D1B431B153185%5B370F0F1B3D1B3D0F5B5B5B310F0F431B3D15FD060FA9FD0FFF75FD046E%75FD07527DFD07FF7EFD0502434367FD0FFFAF4343FD055259FD050FFD05%43FD050F3DFD044315FD050F3DFD044315FD050FFD0543FD050F37FD0443%15FD050F5BFD0FFF99FD046E757DFD07527DFD06FF54FD05024343438BFD%0DFFAF43433CFD05522FFD050FFD054315FD040F15FD04433DFD050F3DFD%044315FD050FFD054315FD050FFD0543FD050F85FD0FFF75FD046E9AFFA8%FD0752A8FD05FF7EFD0502FD04438BFD0CFF43434367FD055236FD050FFD%054315FD040F3DFD04433DFD050F3DFD04433DFD050FFD0543FD050F37FD%0543FD090F31FD0BFF99FD046E75FFFF7DFD07527DFD04FF54FD0502FD05%4367AFFD08FF8BFD044335FD05520EFD050FFD04431BFD050F15FD044315%FD050FFD0543FD060FFD04431BFD060FFD04433DFD0A0F5BFD0AFF75FD04%6E9AFFFFFF7DFD07527DFFFFFF7EFD0502FD0743678BFD04AF6767FD0543%FD06523715370F370F431B431B0F153D15370F373D431B370F3D15370F0F%15433D3D0F3715370F150F431B43150F153D15370F373D431B370F371537%15FD060F5BFD0AFF75FD046E6FFD04FF7DFD07527DFFFF53FD0502FD1343%3CFD05522F0FFD044315FD050F3D4343433DFD060FFD044315FD050F1543%43431B15FD050F3D4343433DFD060F1B4343431BFD050F31FD0AFF75FD04%6E9AFD05FF7DFD07527DFF7EFD0502FD1343FD06520E37FD0543FD050F3D%FD04433DFD050FFD0543FD050F3DFD04433DFD050F3DFD04433DFD050FFD%054315FD040F5BFD0AFF99FD046E6FFD06FF7DFD07527D54FD0502FD1243%35FD05522E0F0FFD0543FD050F3DFD044315FD050FFD054315FD040F15FD%0543FD050F3DFD04431BFD050F1BFD04433DFD050F375BAFFD07FF75FD04%6E99FD07FF7DFD075253FD0502FD1243FD0652360F37FD04431BFD050F3D%FD044337FD050FFD0543FD050F3DFD04431BFD050F3DFD044337FD050FFD%0543FD090F85FD06FF99FD046E75FD08FF7DFD065228FD0502FD114359FD%0652080F0F3D1B3D1BFD060F3D43431B3DFD060F1B3D1B3DFD060F153D1B%3D1BFD060F3D1B3D1B3DFD060F153D1B3D15FD0A0FAFFD05FF75FD046E9A%FD09FFA8FD055229FD0502FD104360FD06522FFD080F4343433D37FD050F%3D4343433D0F37FD040F3D43434315FD060F4343433D37FD050F37FD0443%FD060F154343433D15FD040F5BFD05FF99FD046E75FD0AFF7DFD045228FD%0502FD0F433CFD06522EFD090FFD054315FD040F15FD04433DFD050FFD05%43FD060FFD04433DFD060FFD04433DFD050F3DFD044315FD040F37FD05FF%75FD046E9AFD0BFF7D52525229FD0502FD0E4360FD075231FD090FFD0543%FD050F3DFD04433DFD050F1BFD04433DFD050FFD0543FD050F37FD0543FD%050F15FD0543FD050FFD05FF75FD046E6FFD0CFF7D525201FD0502FD0D43%59FD07522FFD0A0FFD054315FD040F15FD04433DFD050F3DFD044315FD05%0FFD0543FD060FFD0543FD050F3DFD04431BFD050FFD05FF75FD046E9AFD%0DFF7D5229FD0502FD0B433C59FD075259FD0B0FFD04433DFD050F3DFD04%43FD060F3D4343433D37FD050FFD04433DFD050F37FD044315FD050F15FD%044337FD050FFD05FF99FD046E6FFD0EFF7D28FD05020708070807080708%012901290129012901290129020802080208020802080208020802080208%020802080208020802080208020802080208020802080208020802080208%02080208020802080208020802080208020802080208020802080208FD05%FF75FD046E99FD0FFF53FD6502FD05FF99FD046E75FD0FFF54FD6502FD05%FF75FD046E9AFD0FFF7EFD6502FD05FF99FD046E75FD0FFF54FD6502FD05%FF75FD046E9AFD0FFF7F292A2954292A2954292A29542929022A292A2954%292A2954292A2954292A2954292A2954292A2954292A2954292A2954292A%2954292A2954292A2954292A2954292A2954292A2954292A2954292A2954%292A2954292A2954292A2954292A2954292A295429FD05FF75FD046E6FFD%7AFF75FD046E9AFD7AFF99FD046E6FFD7AFF75FD046E99FD7AFF99FD046E%75FD7AFF75FD046E9AFD7AFF99FD046E75FD7AFF75FD046E9AFD7AFF75FD%046E6FFD7AFF75FD046E9AFD7AFF99FD046E6FFD0FFF7D6F4B6F4B6F4B6F%4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F%4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F%4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F4B6F%4B6F4B6FFD05FF75FD046E99FD0FFFA1FD6544FD05FF99FD046E75FD0FFF%76FD6544FD05FF75FD046E9AFD0FFFA1FD6544FD05FF99FD046E75FD0FFF%4BFD6544FD05FF75FD046E9AFD0EFF7D4BFD05446F45706F6F45706F9A76%A2A19A45706F6F45706F6F45706F6F456F44444468446F446F4444446844%44446F4469446F444444684444446F4469446844444468446F446F444444%684444446F4469446F444444684444446F446944684444446844FD05FF75%FD046E6FFD0DFF7D5220FD0544FD07C5FD07FFCBCBFD0AC59BFD0568FD04%C59BFD056894C5C5C59C93FD0568BEC5C5C5C4FD0668FD04C594FD056869%FD04C594FD05689BFD04C5FD0668FD05FF75FD046E9AFD0CFF7D52524BFD%0544FD05C5CBFD0AFFCBFD09C5C4FD0568FD05C569FD04689BFD04C59BFD%05689CFD04C59BFD0568FD05C5FD056894FD04C5C4FD056894FD04C5C4FD%0568FD05FF99FD046E6FFD0BFF7D5252524BFD0544C5C5C5CBFD0DFFCBFD%08C59BFD0568FD05C593FD046894FD04C5C4FD0568BEFD04C594FD0568FD%05C593FD046869FD05C5FD05689BFD04C59BFD0568FD05FF75FD046E99FD%0AFF7DFD04524BFD0544C5C5C5CBFD0EFFCBFD07C5C4FD0568FD05C569FD%04689BFD04C59BFD05689CFD04C594FD0568FD05C5FD056894FD04C59CFD%056894FD04C59BFD04686FFD05FF99FD046E75FD09FF7DFD05524BFD0544%C5C5CBFD10FFCBFD06C59BFD0568C5C5C5C469FD056894BE9BBE9BFD0668%BEC5C59C9BFD06689BBE9BBE69FD056869BE9BBE9BFD0668949BBE9BBEFD%05689AFD05FF75FD046E9AFD08FF7DFD06524BFD0544C5C5FD06FF7DF8F8%F852A8FD05FFCBFD0AC5C4FD06689CC5C5C594FD0668C5C5C5C493FD0568%9BC5C5C5BE6893FD04689CC5C5C59BFD0668C4C5C5C59AFD0A68CAFD05FF%99FD046E75FD07FF7DFD07524BFD0544C5FD06FF52FD06F8A8FD05FFFD06%C59CFD04C5BEFD0568C4FD04C569FD0568FD04C59CFD056894FD04C59BFD%0568C4FD04C594FD05689BFD04C593FD0868A1FD06FF75FD046E9AFD06FF%7DFD07527DA1FD0544CBFD05FFA8FD07F827FD06FF9CA277A277A2FD05C5%FD05689CFD04C59BFD0568FD05C56FFD04689BFD04C59CFD05689CFD04C5%C4FD0568C4FD04C594FD04686F6F9AA8FD07FF75FD046E6FFD05FF7DFD07%527DFF76FD0544CBFD05FF27FD08F87DFD05FF77FD04524CFD05C5FD0568%BEFD04C570FD0568FD05C569FD046894FD04C5BEFD0568BEFD04C594FD05%689BFD04C594FD04686FFD0AFF75FD046E9AFD04FF7DFD07527DFFFFA1FD%0544FD05FFA8FD09F827FD05FF7DFD04527DFD04C594FD05689CC5C5C59C%93FD0568FD04C59BFD05689BFD04C56FFD05689CC5C5C59C93FD0568C4C5%C5C5C4FD05689AFD0AFF99FD046E6FFFFFFF7DFD07527DFFFFFF76FD0544%CBFD04FF7D277D7D52FD06F8FD05FFA2FD05529B709368689CBE9B9B6894%949369686FC49C9C6F6894946993689B9BC49B6F699B709368689CBE9B9A%68949494696869C49C9C6F68709B6993FD06686FFD0AFF75FD046E99FFFF%7DFD07527DFD04FFA1FD0544FD05FF52FD04FF52FD05F8A8FD04FFA2FD04%5277FD0568FD05C5FD05689BFD04C594FD05689CFD04C593FD0568FD04C5%C4FD056894FD04C595FD0A689AFD0AFF99FD046E75FF7DFD07527DFD05FF%76FD0544FD05FF7DFD04FF7DFD05F87DFD04FFA8FD0552FD0568FD05C593%FD046894FD04C5BEFD0568BEFD04C594FD0568FD05C593FD046869FD05C5%FD09686FA8FD0AFF75FD046E9A7DFD07527DFD06FFA1FD0544FD05FF7DFD%04FFA8FD05F8A8FD04FFA2FD04527DFD0568FD05C56FFD04689BFD04C59C%FD05689CFD04C59BFD0568FD05C56FFD046894FD05C5FD05689AFD0FFF99%FD056EFD07527DFD07FF76FD0544FD05FF7DA8FFFFFF27FD05F87DFD04FF%A8FD0552FD0568FD04C59CFD056894FD04C594FD0568C4FD04C5FD0668FD%04C59BFD056869FD04C59BFD0568A1FD0FFF75FD046E75FD06527DFD08FF%A1FD0544FD05FF7D277DA827FD06F8FD05FF7DFD04527D9A9A6F9368C49C%C49B699AA16F9A689A9CC49B9A68A19A9A6F6895C49CBD699A9A9A6F9368%C49CC494699AA1939A68939CC49C9AFD0668A1FD0FFF75FD046E4AFD0552%7DFD09FF76FD0544CBFD04FFA8FD09F827FD05FFA2FD04524CFD04FF9AFD%0568CAFFFFFFCAFD0668FD04FF9AFD05689AFFFFFFA893FD0568CAFFFFFF%CAFD0B68FD10FF75FD046E75FD04527DFD0AFFA1FD0544CBFD05FF52FD08%F87DFD05FF77FD04527DFD04FFCAFD0568A8FD04FFA1FD0568FD05FFFD05%68A1FD04FFA1FD0568A8FD04FFC3FD08686FCAFD10FF99FD046E4AFD0452%FD0BFF76FD0544C5FD05FF7DFD08F8FD05FFCB77FD0552FD05FFFD0568CA%FD04FF9AFD0568FD05FF93FD04689AFD04FFCAFD0568CAFD04FFA1FD0768%6FCAFD11FF75FD046E6FFD0552FD0AFFA1FD0544C5CBFD05FF52FD06F8A8%FD05FFCB77FD04527DFD04FFA8FD0568A8FD04FF9AFD0568FD05FFFD0568%A1FD04FFA1FD0568A8FD04FF9AFD0968C3FD10FF99FD046E4AFD0652FD09%FF76FD0544C5CBFD06FF52F8F8F827A8FD06FFC577FD0552CAA1CAA1FD06%68CAFFFFA8A1FD0668A1CAA1CA6FFD05689ACAA1CAA1FD0668A1A1CAA1A1%FD0B68FD10FF75FD046E75FD0752FD08FFA1FD0544C5C5FD11FFC5C577FD%045277FD0568C5C5C5C494FD05689BC5C5C5BE6893FD04689CC5C5C594FD%0668C5C5C5C493FD056894C5C5C5C4FD0668A1FD0FFF99FD046E6FFD0852%FD07FF76FD0544C5C5C5FD0FFFCBC5C5FD05524CFD0568FD05C56FFD0468%94FD04C59BFD0568C4FD04C569FD0568FD04C59CFD056869FD04C5BEFD05%68A1FD0FFF75FD046E9AA8FD0852FD06FFA1FD0544FD04C5FD0DFFCBC5C5%C5FD055276FD0568FD05C56FFD04689BFD04C59CFD05689CFD04C59BFD05%68FD05C56FFD046894FD05C5FD05686FA19AA1A8FD0BFF75FD046E6FFFA8%FD0852FD05FF76FD0544FD05C5FD0BFFCBC5C5C577FD055244FD0568FD05%C56FFD046894FD04C5BEFD0568BEFD04C570FD0568FD05C569FD046869FD%05C5FD0A68A1FD0AFF75FD046E9AFFFFA87DFD0752FD04FFA1FD0544FD06%C5CBFD08FFFD05C57DFD05526FFD0568FD04C5BDFD05689BFD04C56FFD05%689CC5C5C59C93FD0568FD04C59BFD056894FD04C594FD0A689AFD0AFF99%FD046E6FFFFFFFA8FD0852FFFFFF76FD0544FD09C5CBCBCBFD08C5FD0652%69C49C9C6F6894946993689B9BC49B6F699B709368689CBE9B9A68949493%69686FC49C9C6F6894946993689B9BC49B93689B7093686895BE9B9BFD06%686FFD0AFF75FD046E99FD04FFA87DFD0752FFFFA1FD0544FD13C577FD05%524B94FD04C595FD05689CFD04C593FD0568FD04C5C4FD05689BFD04C594%FD05689CFD04C594FD0568C4FD04C569FD046893FD0AFF99FD046E75FD05%FFA8FD0852FF76FD0544FD12C5A2FD06526869FD05C5FD0568BEFD04C594%FD0568FD05C593FD046894FD04C5BEFD0568BEFD04C59BFD05689BFD04C5%94FD04686FFD0AFF75FD046E9AFD06FFA8FD0852A1FD0544FD12C57DFD05%52766894FD05C5FD05689CFD04C59BFD0568FD05C56FFD04689BFD04C59C%FD05689CFD04C5BDFD0568C4FD04C594FD0668939AFD07FF99FD046E75FD%07FFA8FD07524BFD0544FD11C5A2FD0652446869FD04C59BFD0568C4FD04%C5FD0668FD04C59BFD056894FD04C594FD0568C4FD04C569FD05689BC5C5%C59C6FFD086876FD06FF75FD046E9AFD08FFA8FD06524BFD0544FD11C5FD%07526868939CC49C9A689B9494696895C49CBD699494946F9368C49CC494%69949B6F94689A9CC49B9A689B9494696895C49CBD6F9394946F93689B9C%C49B936F9B9394FD0668A8FD05FF75FD046E6FFD09FFA8FD055220FD0544%FD10C577FD06526FFD0868FD04C59BFD056894C5C5C59C93FD0568BEC5C5%C5C4FD0668FD04C594FD056869FD04C594FD05689BFD04C5FD05689AFD05%FF75FD046E9AFD0AFFA87D5252524BFD0544FD0FC577FD065276FD0968FD%05C569FD04689BFD04C59BFD05689CFD04C59BFD0568FD05C5FD056894FD%04C5C4FD056894FD04C5C4FD0568FD05FF99FD046E6FFD0BFFA85252524B%FD0544FD0EC577FD0752FD0A68FD05C593FD046894FD04C5C4FD0568BEFD%04C594FD0568FD05C593FD046869FD05C5FD05689BFD04C59BFD0568FD05%FF75FD046E99FD0CFFA87D524BFD0544FD0DC5FD0852FD0B68FD05C569FD%04689BFD04C59BFD05689CFD04C594FD0568FD05C5FD056894FD04C59CFD%056894FD04C59BFD0568FD05FF99FD046E75FD0DFFA8524BFD0544FD09C5%A27777FD085244FD0B68C5C5C5C469FD056894BE9BBE9BFD0668BEC5C59C%9BFD06689BBE9BBE69FD056869BE9BBE9BFD0668949BBE9BBEFD0668FD05%FF75FD046E9AFD0EFFA84BFD6544FD05FF99FD046E75FD0FFF76FD6544FD%05FF75FD046E9AFD0FFFA1FD6544FD05FF75FD046E6FFD0FFF76FD6544FD%05FF75FD046E9AFD0FFFA1FD6544FD05FF99FD046E6FFD0FFFA1A176A176%A176A176A176A176A14B7676A176A176A176A176A176A176A176A176A176%A176A176A176A176A176A176A176A176A176A176A176A176A176A176A176%A176A176A176A176A176A176A176A176A176A176A176A176A176A176A176%A176A176A176A1FD05FF75FD046E99FD7AFF99FD046E75FD7AFF75FD046E%9AFD7AFF99FD046E75FD7AFF75FD046E9AFD7AFF75FD046E6FFD7AFF75FD%046E9AFD7AFF99FD046E6FFD7AFF75FD046E99FD7AFF99FD046E75FD74FF%FF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0 0 0 0 1 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 5) Pc0.0235 0.4078 0 0 1 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 17) Pc0.1765 0.5843 0.0039 0 0.8 0.4 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 60) Pc0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 99) Pc0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 106) Pc0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 112) Pc0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 134) Pc0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 148) Pc0.7686 0 0.0078 0 0.2 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 149) Pc0.9176 0.4353 0 0 0 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 203) Pc0.9647 0.9451 0 0 0 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 217) Pc0 0 0 1 0 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 220) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 R0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 XA800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR269.5 453 m266 449.5 l269.5 446 lS0 O0.9176 0.4353 0 0 0 0.4 1 Xa286 450.5 m287 450.5 287 450.5 287 451.5 C288 451.5 288 452.5 288 453 c288 453.5 288 453.5 Y283.5 453.5 L269.5 453.5 L269.5 445.5 L283.5 445.5 L288 445.5 L288 445.5 288 446 v288 446.5 288 447.5 287 447.5 C287 448.5 287 448.5 286 448.5 C286 449 286 449.5 285 449.5 c286 449.5 286 450 286 450.5 Cf0.7686 0 0.0078 0 0.2 1 1 Xa275 449.5 m275 450.332 275 451.8589 275 453.5 C269.5 453.5 L269.5 445.5 L272.9023 445.5 L274.4395 446.417 275 448.3779 275 449.5 cf1 Ap275.9756 451.5 m275.9756 451.2373 275.7627 451.0249 275.5 451.0249 c275.3711 451.0249 275.0244 451 y275.0244 451.3667 275.0244 451.5 v275.0244 451.6313 275.0244 452 y275.3687 451.9751 275.5 451.9751 v275.7627 451.9751 275.9756 451.7627 275.9756 451.5 cf0 0 0 0 1 1 1 Xa275.9756 449.5 m275.9756 449.2373 275.7627 449.0249 275.5 449.0249 c275.3711 449.0249 275.0244 449 y275.0244 449.3667 275.0244 449.5 v275.0244 449.6313 275.0244 450 y275.3687 449.9751 275.5 449.9751 v275.7627 449.9751 275.9756 449.7627 275.9756 449.5 cf0.7686 0 0.0078 0 0.2 1 1 Xa275.9756 447.5 m275.9756 447.2373 275.7627 447.0249 275.5 447.0249 c275.3711 447.0249 275.0244 447 y275.0244 447.3667 275.0244 447.5 v275.0244 447.6313 275.0244 448 y275.3687 447.9751 275.5 447.9751 v275.7627 447.9751 275.9756 447.7627 275.9756 447.5 cf276.9756 448.5 m276.9756 448.2373 276.7627 448.0249 276.5 448.0249 c276.3711 448.0249 276.0244 448 y276.0244 448.3667 276.0244 448.5 v276.0244 448.6313 276.0244 449 y276.3687 448.9751 276.5 448.9751 v276.7627 448.9751 276.9756 448.7627 276.9756 448.5 cf276.9756 446.5 m276.9756 446.2373 276.7627 446.0249 276.5 446.0249 c276.3711 446.0249 276.0244 446 y276.0244 446.3667 276.0244 446.5 v276.0244 446.6313 276.0244 447 y276.3687 446.9751 276.5 446.9751 v276.7627 446.9751 276.9756 446.7627 276.9756 446.5 cf276.9756 450.5 m276.9756 450.2373 276.7627 450.0249 276.5 450.0249 c276.3711 450.0249 276.0244 450 y276.0244 450.3667 276.0244 450.5 v276.0244 450.6313 276.0244 451 y276.3687 450.9751 276.5 450.9751 v276.7627 450.9751 276.9756 450.7627 276.9756 450.5 cf276.9756 452.5 m276.9756 452.2373 276.7627 452.0249 276.5 452.0249 c276.3711 452.0249 276.0244 452 y276.0244 452.3667 276.0244 452.5 v276.0244 452.6313 276.0244 453 y276.3687 452.9751 276.5 452.9751 v276.7627 452.9751 276.9756 452.7627 276.9756 452.5 cf277.9512 451.5 m277.9512 451.2373 277.7383 451.0249 277.4756 451.0249 c277.3467 451.0249 277 451 y277 451.3667 277 451.5 v277 451.6313 277 452 y277.3442 451.9751 277.4756 451.9751 v277.7383 451.9751 277.9512 451.7627 277.9512 451.5 cf0 0 0 0 1 1 1 Xa277.9512 449.5 m277.9512 449.2373 277.7383 449.0249 277.4756 449.0249 c277.3467 449.0249 277 449 y277 449.3667 277 449.5 v277 449.6313 277 450 y277.3442 449.9751 277.4756 449.9751 v277.7383 449.9751 277.9512 449.7627 277.9512 449.5 cf0.7686 0 0.0078 0 0.2 1 1 Xa277.9512 447.5 m277.9512 447.2373 277.7383 447.0249 277.4756 447.0249 c277.3467 447.0249 277 447 y277 447.3667 277 447.5 v277 447.6313 277 448 y277.3442 447.9751 277.4756 447.9751 v277.7383 447.9751 277.9512 447.7627 277.9512 447.5 cf278.9512 448.5 m278.9512 448.2373 278.7383 448.0249 278.4756 448.0249 c278.3467 448.0249 278 448 y278 448.3667 278 448.5 v278 448.6313 278 449 y278.3442 448.9751 278.4756 448.9751 v278.7383 448.9751 278.9512 448.7627 278.9512 448.5 cf278.9512 446.5 m278.9512 446.2373 278.7383 446.0249 278.4756 446.0249 c278.3467 446.0249 278 446 y278 446.3667 278 446.5 v278 446.6313 278 447 y278.3442 446.9751 278.4756 446.9751 v278.7383 446.9751 278.9512 446.7627 278.9512 446.5 cf278.9512 450.5 m278.9512 450.2373 278.7383 450.0249 278.4756 450.0249 c278.3467 450.0249 278 450 y278 450.3667 278 450.5 v278 450.6313 278 451 y278.3442 450.9751 278.4756 450.9751 v278.7383 450.9751 278.9512 450.7627 278.9512 450.5 cf278.9512 452.5 m278.9512 452.2373 278.7383 452.0249 278.4756 452.0249 c278.3467 452.0249 278 452 y278 452.3667 278 452.5 v278 452.6313 278 453 y278.3442 452.9751 278.4756 452.9751 v278.7383 452.9751 278.9512 452.7627 278.9512 452.5 cf279.9512 451.5 m279.9512 451.2373 279.7383 451.0249 279.4756 451.0249 c279.3467 451.0249 279 451 y279 451.3667 279 451.5 v279 451.6313 279 452 y279.3442 451.9751 279.4756 451.9751 v279.7383 451.9751 279.9512 451.7627 279.9512 451.5 cf0 0 0 0 1 1 1 Xa279.9512 449.5 m279.9512 449.2373 279.7383 449.0249 279.4756 449.0249 c279.3467 449.0249 279 449 y279 449.3667 279 449.5 v279 449.6313 279 450 y279.3442 449.9751 279.4756 449.9751 v279.7383 449.9751 279.9512 449.7627 279.9512 449.5 cf0.7686 0 0.0078 0 0.2 1 1 Xa279.9512 447.5 m279.9512 447.2373 279.7383 447.0249 279.4756 447.0249 c279.3467 447.0249 279 447 y279 447.3667 279 447.5 v279 447.6313 279 448 y279.3442 447.9751 279.4756 447.9751 v279.7383 447.9751 279.9512 447.7627 279.9512 447.5 cf280.9512 448.5 m280.9512 448.2373 280.7383 448.0249 280.4756 448.0249 c280.3467 448.0249 280 448 y280 448.3667 280 448.5 v280 448.6313 280 449 y280.3442 448.9751 280.4756 448.9751 v280.7383 448.9751 280.9512 448.7627 280.9512 448.5 cf280.9512 446.5 m280.9512 446.2373 280.7383 446.0249 280.4756 446.0249 c280.3467 446.0249 280 446 y280 446.3667 280 446.5 v280 446.6313 280 447 y280.3442 446.9751 280.4756 446.9751 v280.7383 446.9751 280.9512 446.7627 280.9512 446.5 cf280.9512 450.5 m280.9512 450.2373 280.7383 450.0249 280.4756 450.0249 c280.3467 450.0249 280 450 y280 450.3667 280 450.5 v280 450.6313 280 451 y280.3442 450.9751 280.4756 450.9751 v280.7383 450.9751 280.9512 450.7627 280.9512 450.5 cf280.9512 452.5 m280.9512 452.2373 280.7383 452.0249 280.4756 452.0249 c280.3467 452.0249 280 452 y280 452.3667 280 452.5 v280 452.6313 280 453 y280.3442 452.9751 280.4756 452.9751 v280.7383 452.9751 280.9512 452.7627 280.9512 452.5 cf281.9512 451.5 m281.9512 451.2373 281.7383 451.0249 281.4756 451.0249 c281.3467 451.0249 281 451 y281 451.3667 281 451.5 v281 451.6313 281 452 y281.3442 451.9751 281.4756 451.9751 v281.7383 451.9751 281.9512 451.7627 281.9512 451.5 cf0 0 0 0 1 1 1 Xa281.9512 449.5 m281.9512 449.2373 281.7383 449.0249 281.4756 449.0249 c281.3467 449.0249 281 449 y281 449.3667 281 449.5 v281 449.6313 281 450 y281.3442 449.9751 281.4756 449.9751 v281.7383 449.9751 281.9512 449.7627 281.9512 449.5 cf0.7686 0 0.0078 0 0.2 1 1 Xa281.9512 447.5 m281.9512 447.2373 281.7383 447.0249 281.4756 447.0249 c281.3467 447.0249 281 447 y281 447.3667 281 447.5 v281 447.6313 281 448 y281.3442 447.9751 281.4756 447.9751 v281.7383 447.9751 281.9512 447.7627 281.9512 447.5 cf282.9512 448.5 m282.9512 448.2373 282.7383 448.0249 282.4756 448.0249 c282.3467 448.0249 282 448 y282 448.3667 282 448.5 v282 448.6313 282 449 y282.3442 448.9751 282.4756 448.9751 v282.7383 448.9751 282.9512 448.7627 282.9512 448.5 cf282.9512 446.5 m282.9512 446.2373 282.7383 446.0249 282.4756 446.0249 c282.3467 446.0249 282 446 y282 446.3667 282 446.5 v282 446.6313 282 447 y282.3442 446.9751 282.4756 446.9751 v282.7383 446.9751 282.9512 446.7627 282.9512 446.5 cf284.9756 446.5 m284.9756 446.2373 284.7627 446.0249 284.5 446.0249 c284.3711 446.0249 284.0244 446 y284.0244 446.3667 284.0244 446.5 v284.0244 446.6313 284.0244 447 y284.3687 446.9751 284.5 446.9751 v284.7627 446.9751 284.9756 446.7627 284.9756 446.5 cf283.9756 447.5 m283.9756 447.2373 283.7627 447.0249 283.5 447.0249 c283.3711 447.0249 283.0244 447 y283.0244 447.3667 283.0244 447.5 v283.0244 447.6313 283.0244 448 y283.3687 447.9751 283.5 447.9751 v283.7627 447.9751 283.9756 447.7627 283.9756 447.5 cf282.9512 450.5 m282.9512 450.2373 282.7383 450.0249 282.4756 450.0249 c282.3467 450.0249 282 450 y282 450.3667 282 450.5 v282 450.6313 282 451 y282.3442 450.9751 282.4756 450.9751 v282.7383 450.9751 282.9512 450.7627 282.9512 450.5 cf283.9756 451.5 m283.9756 451.2373 283.7627 451.0249 283.5 451.0249 c283.3711 451.0249 283.0244 451 y283.0244 451.3667 283.0244 451.5 v283.0244 451.6313 283.0244 452 y283.3687 451.9751 283.5 451.9751 v283.7627 451.9751 283.9756 451.7627 283.9756 451.5 cf0 0 0 0 1 1 1 Xa283.9756 449.5 m283.9756 449.2373 283.7627 449.0249 283.5 449.0249 c283.3711 449.0249 283.0244 449 y283.0244 449.3667 283.0244 449.5 v283.0244 449.6313 283.0244 450 y283.3687 449.9751 283.5 449.9751 v283.7627 449.9751 283.9756 449.7627 283.9756 449.5 cf0.7686 0 0.0078 0 0.2 1 1 Xa282.9512 452.5 m282.9512 452.2373 282.7383 452.0249 282.4756 452.0249 c282.3467 452.0249 282 452 y282 452.3667 282 452.5 v282 452.6313 282 453 y282.3442 452.9751 282.4756 452.9751 v282.7383 452.9751 282.9512 452.7627 282.9512 452.5 cf284.9756 452.5 m284.9756 452.2373 284.7627 452.0249 284.5 452.0249 c284.3711 452.0249 284.0244 452 y284.0244 452.3667 284.0244 452.5 v284.0244 452.6313 284.0244 453 y284.3687 452.9751 284.5 452.9751 v284.7627 452.9751 284.9756 452.7627 284.9756 452.5 cf284.9756 448.5 m284.9756 448.2373 284.7627 448.0249 284.5 448.0249 c284.3711 448.0249 284.0244 448 y284.0244 448.3667 284.0244 448.5 v284.0244 448.6313 284.0244 449 y284.3687 448.9751 284.5 448.9751 v284.7627 448.9751 284.9756 448.7627 284.9756 448.5 cf287 446.5 m287 446.2373 286.7871 446.0249 286.5244 446.0249 c286.3955 446.0249 286.0488 446 y286.0488 446.3667 286.0488 446.5 v286.0488 446.6313 286.0488 447 y286.3931 446.9751 286.5244 446.9751 v286.7871 446.9751 287 446.7627 287 446.5 cf286 447.5 m286 447.2373 285.7871 447.0249 285.5244 447.0249 c285.3955 447.0249 285.0488 447 y285.0488 447.3667 285.0488 447.5 v285.0488 447.6313 285.0488 448 y285.3931 447.9751 285.5244 447.9751 v285.7871 447.9751 286 447.7627 286 447.5 cf284.9756 450.5 m284.9756 450.2373 284.7627 450.0249 284.5 450.0249 c284.3711 450.0249 284.0244 450 y284.0244 450.3667 284.0244 450.5 v284.0244 450.6313 284.0244 451 y284.3687 450.9751 284.5 450.9751 v284.7627 450.9751 284.9756 450.7627 284.9756 450.5 cf286 451.5 m286 451.2373 285.7871 451.0249 285.5244 451.0249 c285.3955 451.0249 285.0488 451 y285.0488 451.3667 285.0488 451.5 v285.0488 451.6313 285.0488 452 y285.3931 451.9751 285.5244 451.9751 v285.7871 451.9751 286 451.7627 286 451.5 cf287 452.5 m287 452.2373 286.7871 452.0249 286.5244 452.0249 c286.3955 452.0249 286.0488 452 y286.0488 452.3667 286.0488 452.5 v286.0488 452.6313 286.0488 453 y286.3931 452.9751 286.5244 452.9751 v286.7871 452.9751 287 452.7627 287 452.5 cf0 Ap0 R0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 XA274.5 451.5 m274.5 449.6973 274.5 450.4141 274.5 449 c274.5 448 273.5 445.5 271.5 445.5 cS1 Ap0.9647 0.9451 0 0 0 0 0.6 XA288 445.5 m269.5 445.5 L269.5 453.5 L288 453.5 LS0 O0 0 0 0 1 1 1 Xa274.0244 450.5 m274.0244 449.1191 273.1289 448 272.0244 448 c270.9199 448 270.0244 449.1191 270.0244 450.5 c270.0244 451.8809 270.9199 453 272.0244 453 c273.1289 453 274.0244 451.8809 274.0244 450.5 cf0 0 0 1 0 0 0 Xa273.0244 450.5 m273.0244 449.6714 272.5771 449 272.0244 449 c271.4717 449 271.0244 449.6714 271.0244 450.5 c271.0244 451.3286 271.4717 452 272.0244 452 c272.5771 452 273.0244 451.3286 273.0244 450.5 cf0 0 0 0 1 1 1 Xa272 450.5 m272 450.2373 271.7871 450.0249 271.5244 450.0249 c271.2617 450.0249 271.0488 450.2373 271.0488 450.5 c271.0488 450.7627 271.2617 450.9751 271.5244 450.9751 c271.7871 450.9751 272 450.7627 272 450.5 cf0 Ap0 R0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 XA269.5 442 m266 438.5 l269.5 435 lS0 O0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa286 439.5 m287 439.5 287 439.5 287 440.5 C288 440.5 288 441.5 288 442 c288 442.5 288 442.5 Y283.5 442.5 L269.5 442.5 L269.5 434.5 L283.5 434.5 L288 434.5 L288 434.5 288 435 v288 435.5 288 436.5 287 436.5 C287 437.5 287 437.5 286 437.5 C286 438 286 438.5 285 438.5 c286 438.5 286 439 286 439.5 Cf0.0235 0.4078 0 0 1 0.6 1 Xa275 438.5 m275 439.332 275 440.8589 275 442.5 C269.5 442.5 L269.5 434.5 L272.9023 434.5 L274.4395 435.417 275 437.3779 275 438.5 cf1 Ap275.9756 440.5 m275.9756 440.2373 275.7627 440.0249 275.5 440.0249 c275.3711 440.0249 275.0244 440 y275.0244 440.3667 275.0244 440.5 v275.0244 440.6313 275.0244 441 y275.3687 440.9751 275.5 440.9751 v275.7627 440.9751 275.9756 440.7627 275.9756 440.5 cf0 0 0 0 1 1 1 Xa275.9756 438.5 m275.9756 438.2373 275.7627 438.0249 275.5 438.0249 c275.3711 438.0249 275.0244 438 y275.0244 438.3667 275.0244 438.5 v275.0244 438.6313 275.0244 439 y275.3687 438.9751 275.5 438.9751 v275.7627 438.9751 275.9756 438.7627 275.9756 438.5 cf0.0235 0.4078 0 0 1 0.6 1 Xa275.9756 436.5 m275.9756 436.2373 275.7627 436.0249 275.5 436.0249 c275.3711 436.0249 275.0244 436 y275.0244 436.3667 275.0244 436.5 v275.0244 436.6313 275.0244 437 y275.3687 436.9751 275.5 436.9751 v275.7627 436.9751 275.9756 436.7627 275.9756 436.5 cf276.9756 437.5 m276.9756 437.2373 276.7627 437.0249 276.5 437.0249 c276.3711 437.0249 276.0244 437 y276.0244 437.3667 276.0244 437.5 v276.0244 437.6313 276.0244 438 y276.3687 437.9751 276.5 437.9751 v276.7627 437.9751 276.9756 437.7627 276.9756 437.5 cf276.9756 435.5 m276.9756 435.2373 276.7627 435.0249 276.5 435.0249 c276.3711 435.0249 276.0244 435 y276.0244 435.3667 276.0244 435.5 v276.0244 435.6313 276.0244 436 y276.3687 435.9751 276.5 435.9751 v276.7627 435.9751 276.9756 435.7627 276.9756 435.5 cf276.9756 439.5 m276.9756 439.2373 276.7627 439.0249 276.5 439.0249 c276.3711 439.0249 276.0244 439 y276.0244 439.3667 276.0244 439.5 v276.0244 439.6313 276.0244 440 y276.3687 439.9751 276.5 439.9751 v276.7627 439.9751 276.9756 439.7627 276.9756 439.5 cf276.9756 441.5 m276.9756 441.2373 276.7627 441.0249 276.5 441.0249 c276.3711 441.0249 276.0244 441 y276.0244 441.3667 276.0244 441.5 v276.0244 441.6313 276.0244 442 y276.3687 441.9751 276.5 441.9751 v276.7627 441.9751 276.9756 441.7627 276.9756 441.5 cf277.9512 440.5 m277.9512 440.2373 277.7383 440.0249 277.4756 440.0249 c277.3467 440.0249 277 440 y277 440.3667 277 440.5 v277 440.6313 277 441 y277.3442 440.9751 277.4756 440.9751 v277.7383 440.9751 277.9512 440.7627 277.9512 440.5 cf0 0 0 0 1 1 1 Xa277.9512 438.5 m277.9512 438.2373 277.7383 438.0249 277.4756 438.0249 c277.3467 438.0249 277 438 y277 438.3667 277 438.5 v277 438.6313 277 439 y277.3442 438.9751 277.4756 438.9751 v277.7383 438.9751 277.9512 438.7627 277.9512 438.5 cf0.0235 0.4078 0 0 1 0.6 1 Xa277.9512 436.5 m277.9512 436.2373 277.7383 436.0249 277.4756 436.0249 c277.3467 436.0249 277 436 y277 436.3667 277 436.5 v277 436.6313 277 437 y277.3442 436.9751 277.4756 436.9751 v277.7383 436.9751 277.9512 436.7627 277.9512 436.5 cf278.9512 437.5 m278.9512 437.2373 278.7383 437.0249 278.4756 437.0249 c278.3467 437.0249 278 437 y278 437.3667 278 437.5 v278 437.6313 278 438 y278.3442 437.9751 278.4756 437.9751 v278.7383 437.9751 278.9512 437.7627 278.9512 437.5 cf278.9512 435.5 m278.9512 435.2373 278.7383 435.0249 278.4756 435.0249 c278.3467 435.0249 278 435 y278 435.3667 278 435.5 v278 435.6313 278 436 y278.3442 435.9751 278.4756 435.9751 v278.7383 435.9751 278.9512 435.7627 278.9512 435.5 cf278.9512 439.5 m278.9512 439.2373 278.7383 439.0249 278.4756 439.0249 c278.3467 439.0249 278 439 y278 439.3667 278 439.5 v278 439.6313 278 440 y278.3442 439.9751 278.4756 439.9751 v278.7383 439.9751 278.9512 439.7627 278.9512 439.5 cf278.9512 441.5 m278.9512 441.2373 278.7383 441.0249 278.4756 441.0249 c278.3467 441.0249 278 441 y278 441.3667 278 441.5 v278 441.6313 278 442 y278.3442 441.9751 278.4756 441.9751 v278.7383 441.9751 278.9512 441.7627 278.9512 441.5 cf279.9512 440.5 m279.9512 440.2373 279.7383 440.0249 279.4756 440.0249 c279.3467 440.0249 279 440 y279 440.3667 279 440.5 v279 440.6313 279 441 y279.3442 440.9751 279.4756 440.9751 v279.7383 440.9751 279.9512 440.7627 279.9512 440.5 cf0 0 0 0 1 1 1 Xa279.9512 438.5 m279.9512 438.2373 279.7383 438.0249 279.4756 438.0249 c279.3467 438.0249 279 438 y279 438.3667 279 438.5 v279 438.6313 279 439 y279.3442 438.9751 279.4756 438.9751 v279.7383 438.9751 279.9512 438.7627 279.9512 438.5 cf0.0235 0.4078 0 0 1 0.6 1 Xa279.9512 436.5 m279.9512 436.2373 279.7383 436.0249 279.4756 436.0249 c279.3467 436.0249 279 436 y279 436.3667 279 436.5 v279 436.6313 279 437 y279.3442 436.9751 279.4756 436.9751 v279.7383 436.9751 279.9512 436.7627 279.9512 436.5 cf280.9512 437.5 m280.9512 437.2373 280.7383 437.0249 280.4756 437.0249 c280.3467 437.0249 280 437 y280 437.3667 280 437.5 v280 437.6313 280 438 y280.3442 437.9751 280.4756 437.9751 v280.7383 437.9751 280.9512 437.7627 280.9512 437.5 cf280.9512 435.5 m280.9512 435.2373 280.7383 435.0249 280.4756 435.0249 c280.3467 435.0249 280 435 y280 435.3667 280 435.5 v280 435.6313 280 436 y280.3442 435.9751 280.4756 435.9751 v280.7383 435.9751 280.9512 435.7627 280.9512 435.5 cf280.9512 439.5 m280.9512 439.2373 280.7383 439.0249 280.4756 439.0249 c280.3467 439.0249 280 439 y280 439.3667 280 439.5 v280 439.6313 280 440 y280.3442 439.9751 280.4756 439.9751 v280.7383 439.9751 280.9512 439.7627 280.9512 439.5 cf280.9512 441.5 m280.9512 441.2373 280.7383 441.0249 280.4756 441.0249 c280.3467 441.0249 280 441 y280 441.3667 280 441.5 v280 441.6313 280 442 y280.3442 441.9751 280.4756 441.9751 v280.7383 441.9751 280.9512 441.7627 280.9512 441.5 cf281.9512 440.5 m281.9512 440.2373 281.7383 440.0249 281.4756 440.0249 c281.3467 440.0249 281 440 y281 440.3667 281 440.5 v281 440.6313 281 441 y281.3442 440.9751 281.4756 440.9751 v281.7383 440.9751 281.9512 440.7627 281.9512 440.5 cf0 0 0 0 1 1 1 Xa281.9512 438.5 m281.9512 438.2373 281.7383 438.0249 281.4756 438.0249 c281.3467 438.0249 281 438 y281 438.3667 281 438.5 v281 438.6313 281 439 y281.3442 438.9751 281.4756 438.9751 v281.7383 438.9751 281.9512 438.7627 281.9512 438.5 cf0.0235 0.4078 0 0 1 0.6 1 Xa281.9512 436.5 m281.9512 436.2373 281.7383 436.0249 281.4756 436.0249 c281.3467 436.0249 281 436 y281 436.3667 281 436.5 v281 436.6313 281 437 y281.3442 436.9751 281.4756 436.9751 v281.7383 436.9751 281.9512 436.7627 281.9512 436.5 cf282.9512 437.5 m282.9512 437.2373 282.7383 437.0249 282.4756 437.0249 c282.3467 437.0249 282 437 y282 437.3667 282 437.5 v282 437.6313 282 438 y282.3442 437.9751 282.4756 437.9751 v282.7383 437.9751 282.9512 437.7627 282.9512 437.5 cf282.9512 435.5 m282.9512 435.2373 282.7383 435.0249 282.4756 435.0249 c282.3467 435.0249 282 435 y282 435.3667 282 435.5 v282 435.6313 282 436 y282.3442 435.9751 282.4756 435.9751 v282.7383 435.9751 282.9512 435.7627 282.9512 435.5 cf284.9756 435.5 m284.9756 435.2373 284.7627 435.0249 284.5 435.0249 c284.3711 435.0249 284.0244 435 y284.0244 435.3667 284.0244 435.5 v284.0244 435.6313 284.0244 436 y284.3687 435.9751 284.5 435.9751 v284.7627 435.9751 284.9756 435.7627 284.9756 435.5 cf283.9756 436.5 m283.9756 436.2373 283.7627 436.0249 283.5 436.0249 c283.3711 436.0249 283.0244 436 y283.0244 436.3667 283.0244 436.5 v283.0244 436.6313 283.0244 437 y283.3687 436.9751 283.5 436.9751 v283.7627 436.9751 283.9756 436.7627 283.9756 436.5 cf282.9512 439.5 m282.9512 439.2373 282.7383 439.0249 282.4756 439.0249 c282.3467 439.0249 282 439 y282 439.3667 282 439.5 v282 439.6313 282 440 y282.3442 439.9751 282.4756 439.9751 v282.7383 439.9751 282.9512 439.7627 282.9512 439.5 cf283.9756 440.5 m283.9756 440.2373 283.7627 440.0249 283.5 440.0249 c283.3711 440.0249 283.0244 440 y283.0244 440.3667 283.0244 440.5 v283.0244 440.6313 283.0244 441 y283.3687 440.9751 283.5 440.9751 v283.7627 440.9751 283.9756 440.7627 283.9756 440.5 cf0 0 0 0 1 1 1 Xa283.9756 438.5 m283.9756 438.2373 283.7627 438.0249 283.5 438.0249 c283.3711 438.0249 283.0244 438 y283.0244 438.3667 283.0244 438.5 v283.0244 438.6313 283.0244 439 y283.3687 438.9751 283.5 438.9751 v283.7627 438.9751 283.9756 438.7627 283.9756 438.5 cf0.0235 0.4078 0 0 1 0.6 1 Xa282.9512 441.5 m282.9512 441.2373 282.7383 441.0249 282.4756 441.0249 c282.3467 441.0249 282 441 y282 441.3667 282 441.5 v282 441.6313 282 442 y282.3442 441.9751 282.4756 441.9751 v282.7383 441.9751 282.9512 441.7627 282.9512 441.5 cf284.9756 441.5 m284.9756 441.2373 284.7627 441.0249 284.5 441.0249 c284.3711 441.0249 284.0244 441 y284.0244 441.3667 284.0244 441.5 v284.0244 441.6313 284.0244 442 y284.3687 441.9751 284.5 441.9751 v284.7627 441.9751 284.9756 441.7627 284.9756 441.5 cf284.9756 437.5 m284.9756 437.2373 284.7627 437.0249 284.5 437.0249 c284.3711 437.0249 284.0244 437 y284.0244 437.3667 284.0244 437.5 v284.0244 437.6313 284.0244 438 y284.3687 437.9751 284.5 437.9751 v284.7627 437.9751 284.9756 437.7627 284.9756 437.5 cf287 435.5 m287 435.2373 286.7871 435.0249 286.5244 435.0249 c286.3955 435.0249 286.0488 435 y286.0488 435.3667 286.0488 435.5 v286.0488 435.6313 286.0488 436 y286.3931 435.9751 286.5244 435.9751 v286.7871 435.9751 287 435.7627 287 435.5 cf286 436.5 m286 436.2373 285.7871 436.0249 285.5244 436.0249 c285.3955 436.0249 285.0488 436 y285.0488 436.3667 285.0488 436.5 v285.0488 436.6313 285.0488 437 y285.3931 436.9751 285.5244 436.9751 v285.7871 436.9751 286 436.7627 286 436.5 cf284.9756 439.5 m284.9756 439.2373 284.7627 439.0249 284.5 439.0249 c284.3711 439.0249 284.0244 439 y284.0244 439.3667 284.0244 439.5 v284.0244 439.6313 284.0244 440 y284.3687 439.9751 284.5 439.9751 v284.7627 439.9751 284.9756 439.7627 284.9756 439.5 cf286 440.5 m286 440.2373 285.7871 440.0249 285.5244 440.0249 c285.3955 440.0249 285.0488 440 y285.0488 440.3667 285.0488 440.5 v285.0488 440.6313 285.0488 441 y285.3931 440.9751 285.5244 440.9751 v285.7871 440.9751 286 440.7627 286 440.5 cf287 441.5 m287 441.2373 286.7871 441.0249 286.5244 441.0249 c286.3955 441.0249 286.0488 441 y286.0488 441.3667 286.0488 441.5 v286.0488 441.6313 286.0488 442 y286.3931 441.9751 286.5244 441.9751 v286.7871 441.9751 287 441.7627 287 441.5 cf0 Ap0 R0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 XA274.5 440.5 m274.5 438.6973 274.5 439.4141 274.5 438 c274.5 437 273.5 434.5 271.5 434.5 cS1 Ap0.3725 0.9451 0.9098 0.3608 0.4 0 0 XA288 434.5 m269.5 434.5 L269.5 442.5 L288 442.5 LS0 O0 0 0 0 1 1 1 Xa274.0244 439.5 m274.0244 438.1191 273.1289 437 272.0244 437 c270.9199 437 270.0244 438.1191 270.0244 439.5 c270.0244 440.8809 270.9199 442 272.0244 442 c273.1289 442 274.0244 440.8809 274.0244 439.5 cf0 0 0 1 0 0 0 Xa273.0244 439.5 m273.0244 438.6714 272.5771 438 272.0244 438 c271.4717 438 271.0244 438.6714 271.0244 439.5 c271.0244 440.3286 271.4717 441 272.0244 441 c272.5771 441 273.0244 440.3286 273.0244 439.5 cf0 0 0 0 1 1 1 Xa272 439.5 m272 439.2373 271.7871 439.0249 271.5244 439.0249 c271.2617 439.0249 271.0488 439.2373 271.0488 439.5 c271.0488 439.7627 271.2617 439.9751 271.5244 439.9751 c271.7871 439.9751 272 439.7627 272 439.5 cf0.1765 0.5843 0.0039 0 0.8 0.4 0.8 Xa266.5 454.5 m266.5 453.9478 266.0522 453.5 265.5 453.5 c264.9478 453.5 264.5 453.9478 264.5 454.5 c264.5 455.0522 264.9478 455.5 265.5 455.5 c266.0522 455.5 266.5 455.0522 266.5 454.5 cf0 R0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 XA266.5 454.5 m266.5 453.9478 266.0522 453.5 265.5 453.5 c264.9478 453.5 264.5 453.9478 264.5 454.5 c264.5 455.0522 264.9478 455.5 265.5 455.5 c266.0522 455.5 266.5 455.0522 266.5 454.5 cs0 Ap0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 XA265.5 453 m265.5 432 lSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF