%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (781\223V\202\314\220\354.ai)%%CreationDate: (7/28/03) (11:42 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 241 473.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 10194 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD4401FD0F03FD132A2BFD08557FFD10A9FD430102FD0F03FD122A%2BFD08557FFD11A9FD4301FD0F03FD122AFD09557FFD12A9FD420102FD0E%03FD122AFD09557FFD13A9FD4201FD0E03FD122AFD08557FFD15A9FD4101%02FD0E03FD112AFD09557FFD15A9FD4101FD0F03FD102AFD0955FD17A9FD%4101FD0E03FD102AFD09557FFD17A9FD2C01525128FD1101FD0E03FD102A%FD09557FFD18A9FD2B0127515151FD100102FD0E03FD0F2AFD09557FFD0D%A9A8FFA8FD09A9FD2B01FD045127FD0F01FD0F03FD0E2AFD09557FFD0CA9%FFFD04CFFD09A9FD2A0100517AFE5051FD0F01FD0E03FD0E2AFD09557FFD%0DA9FD04CFA8FD09A9FD2A015251FEFECC5128FD0D01FD0E03FD0E2AFD08%557FFD0DA9FFFD05CFFFFD09A9FD2A0127A5FEFEFE7B27FD0C0102FD0D03%FD0E2AFD09557FFD0CA9FFFD05CFFD0BA9FD2A0151FD04FEA451FD0C01FD%0D03FD0E2AFD0955FD0DA9FFFD05CFFFFD0AA955FD2801275150FD05FE51%5127FD090102FD0E03FD0C2AFD09557FFD0CA9FFFD05CFFD0BA95555FD24%01282751517BA4CCFD05FECC7A7B515227FD0601FD0D03FD0D2AFD09557F%FD0CA9FFFD05CFFFFD0AA9555555FD23012751517AFD0CFEA45051512801%010102FD0D03FD0C2AFD09557FFD0DA9FD05CFFD0BA9FD0455FD22012851%517AFD0FFE515151280102FD0D03FD0C2AFD09557FFD0CA9FFFD05CFFD0B%A9FD0555FD220100515151A4FD0DFE7A515151010102FD0C03FD0C2AFD09%557FFD0DA9FD04CFA8FD0BA9FD0655FD24012851517BA5FD08FEA4A55151%5128010101FD0C03FD0C2AFD08557FFD0DA9FFFD05CFFFFD0AA9FD0755FD%2601002827517AFD05FE5151272800FD0401FD0D03FD0C2AFD08557FFD0C%A9FFFD05CFFD0BA9FD0855FD29012851FD04FEA451FD070102FD0C03FD0B%2AFD0955FD0DA9FFFD05CFFD0BA9FD0955FD2A0151A4FEFEFE7B27FD0701%02FD0C03FD0B2AFD08557FFD0CA9FFFD04CFA8FD0BA9FD0A55FD2A01527A%FEFEFE5128FD060102FD0C03FD0A2A2BFD08557FFD0CA9FFFD05CFFFFD0A%A9FD0B55FD2A010051A4FE7A5100FD0601FD0C03FD0B2AFD08557FFD0DA9%FD05CFFD0BA9FD0C55FD2A0128517B7A5127FD0601FD0C03FD0B2AFD0855%7FFD0CA9FFFD05CFFFFD0AA9FD0D55FD2B012751515128FD050102FD0B03%FD0B2A2BFD0855FD0DA9FD05CFFFFD0AA9FD0E55FD2C01515152FD0601FD%0B03FD0A2A2BFD0955FD0CA9FFFD05CFFFFD0AA9FD0F55FD2C01002800FD%050102FD0A03FD0C2AFD0855FD0CA9FFFD06CFFD0AA9FD1055FD3401FD0B%03FD0A2AFD0955FD0CA9FFFD06CFFD0AA9FD1155FD3301FD0B03FD0B2AFD%08557FFD0BA9FFFD06CFA8FD09A9FD1255FD320102FD0A03FD0A2AFD0955%7FFD0BA9FFFD07CFFFFD08A97FFD1255FD310102FD0B03FD092A2BFD0955%FD0BA9FD09CFFD08A97FFD11552B2AFD3101FD0B03FD092AFD0A55FD0BA9%FFCFCFCEFD05CFFD08A97FFD12552A2AFD300102FD0A03FD0A2AFD09557F%FD09A9A8CFC8C7C6C6C6C7C9CFCFFD07A97FFD1155FD042AFD2F0102FD0A%03FD082AFD0C55FD0AA9CFC7FD06C6C7CEFFFD07A97FFD1155FD042AFD2F%01FD0A03FD092AFD0B55FD09A9A8CFC9FD08C6C7A8FD06A97FFD1055FD06%2AFD2E01FD0A03FD082AFD0C55FD09A9CFCFCFCDFD09C6CEFD06A9FD1155%FD062AFD2D01FD0A03FD092AFD0B557FFD08A9A8CFCFCFFD0AC6A6FD05A9%FD1055FD082AFD2C01FD0A03FD082AFD0C557FFD08A9FD05CFCCFD09C6CE%FD04A97FFD1155FD062A03FD2B0102FD0903FD082AFD0D557FFD07A9FD06%CFC7FD09C6A7FD04A9FD1055FD072A0303FD2A0102FD0903FD082AFD0D55%7FFD07A9FD07CFCEFD09C6FD04A97FFD1055FD062A030303FD290102FD09%03FD082AFD0E55FD07A9FD09CFC7FD07C6CFFD04A9FD0F55FD072AFD0403%FD2801FD0A03FD082AFD0E55FD06A9FFFD0BCFCEFD04C6C7CFFD04A97FFD%0F55FD072AFD0403FD2701FD0B03FD072AFD0E557FFD05A9FFFD0ECFCECE%CECFA8FD04A9FD0F55FD062AFD0603FD2601FD0A03FD082AFD0F557FFD04%A9FFFD13CFFD04A97FFD0E55FD072AFD0603FD2501FD0B03FD072AFD1055%FD04A9FD14CFFD05A9FD0E55FD062AFD0803FD22010202FD0A03FD082AFD%1055FD04A9FFFD13CFFFFD04A97FFD0D55FD072A2BFD0703FD210102FD0B%03FD082AFD10557FA9A9A8FD14CFFFFD05A97FFD0C55FD072AFD0903FD20%01FD0C03FD072A2BFD11557FA9A9FD0DCFCEFD06CFFFFD06A9FD0C55FD08%2AFD0903FD1D010202FD0C03FD082AFD1255A9A9FD0BCFC8C7C6C6C6C7C9%CFCFCFFD06A97FFD0B55FD072AFD0B03FD1C01FD0E03FD062A2BFD1355A9%A9FFFD0ACFC7FD06C6C7CECFFD07A97FFD0A55FD082AFD0B03FD19010202%FD0E03FD072AFD1455A9A9A8FD09CFC9FD08C6C7A8FD07A9FD0A55FD082A%FD0C03FD170102FD1003FD072AFD14557FA9A9FFFD09CFCDFD09C6C9FD06%A97FFD0A55FD072AFD0C0302FD150102030302FD0C03FD092AFD1555A9A9%A9FD0ACFFD0AC6A6FD06A97FFD0955FD072AFD0C03FD1401020303032A51%5202FD0A032BFD072AFD1655FD04A9FD0ACFCCFD09C6C9FD06A9FD0A55FD%062AFD0C0302FD110102FD060327515152FD0903FD092AFD15557FA9A9A9%FFFD0ACFC7FD09C6A7FD05A97FFD0955FD062AFD0C03FD0E010202FD0903%02FD04512AFD0503FD0A2AFD1755FD05A9FD0ACFCEFD09C6FD06A97FFD08%55FD072AFD0B03FD0A0102010202FD0C032850FEA45128FD0403FD0A2AFD%17557FFD05A9FD0BCFC7FD07C6A8FD06A9FD0855FD062AFD0C03FD060102%02FD130351A5FEFEA452030303FD0A2AFD17557FFD05A9A8FD0CCFCEFD04%C6C7CFFD06A97FFD08552BFD062AFD0A03FD0701FD14030251A4FEFEFE51%29FD0B2AFD1855FD06A9FFFD0ECFCECECECFFD07A97FFD0855FD062AFD0A%0302FD0701FD1403297BFD04FE7B28FD082AFD1A55FD07A9A8FD12CFFD07%A9FD0855FD062AFD0A0302FD0801FD1203012827A5FD04FE7A51282929FD%042AFD1A55FD08A9FFFD12CFFD06A97FFD0755FD062AFD0B03FD0901FD0F%032952517B7ACCFD06FEA4A551512854FD1B55FD09A9FD12CFA8FD06A97F%FD0855FD052A2BFD090302FD0901FD0D032A275150A5FD0CFEA451515254%FD18557FFD09A9FD12CFFD07A9FD0855FD062AFD0A03FD0A01FD0D032751%51FD0FFEA4515152FD1755FD0BA9FD11CFFFFD06A97FFD0755FD062AFD0A%0302FD0A01FD0D032951517AFD0DFEA47B515129FD16557FFD0BA9FD11CF%A8FD05A97FFD0855FD052AFD0A0302FD0B01FD08032A032B2A2A2A545251%51A5A4FD08FEA57A7B515354FD1655FD0DA9FD10CFFD07A97FFD0855FD06%2AFD090302FD0B01FD05032A03FD0A2A29275151A4FD04FEA451515253FD%1855FD0EA9FD0FCFA8FD07A9FD0855FD062AFD0A03FD0C01FD122A552A53%7BFD04FE7B52FD1A55FD0FA9FD0ECFA8FD07A97FFD0955FD052AFD0903FD%0D01FD112A5555552951FD04FE5153FD1955FD10A9FD0DCFA8FD08A9FD09%55FD062AFD080302FD0D01FD0C2AFD095551A5FEFEA451FD18557FFD11A9%FD0BCFFFFD09A97FFD0955FD052AFD090302FD0D01FD092A552BFD0A5552%50FEFE7B52FD17557FFD12A9FD0BCFA8FD09A9FD0A55FD052AFD080302FD%0E01FD062AFD0F5553517B7B5154FD15557FFD14A9FD09CFFFFD0AA97FFD%0955FD062AFD0803FD0F012A2B2AFD135527515151FD15557FFD15A9FD07%CFA8FD0BA97FFD0A55FD052AFD080302FD0F01FD165554515154FD1455FD%17A9FD05CFFFFD0DA97FFD0A55FD062AFD070302FD0F01FD17555453FD14%55FD0EA9A8A6C9A6FD06A9CFCFFFA8FD0FA9FD0B55FD052AFD0803FD1001%FD2B557FFD0EA9C7FD05C6C9A9A9A9FFCFFFFD10A9FD0C55FD062AFD0603%FD1101FD29557F7FFD0EA9C7FD07C6C9A9A9CFFFFD10A97FFD0B552BFD05%2AFD060302FD1101FD2855FD10A9CEFD09C6CFCFFFFD11A9FD0D55FD052A%2BFD050302FD1101FD2755FD0FA9A8CFC7FD09C6C8CFFD11A97FFD0C55FD%062AFD0603FD1201FD24557F7FFD0FA9A8CFCFCCFD09C6CEFD11A97FFD0E%55FD052AFD050302FD1201FD23557FFD10A9A8CFCFCFC7FD09C6A5FD11A9%FD0E55FD062AFD040302FD1301FD21557FFD11A9FD05CFCDFD09C6FFFD10%A9FD1055FD052AFD040302FD1301FD1F557FFD12A9A8FD05CFCEFD08C6C7%FD10A9FD1055FD062AFD0403FD1401FD1D557FFD13A9FD08CFCEFD06C6C7%FD10A97FFD1155FD052A03030302FD1401FD1B557F7FFD13A9A8FD09CFCE%C8C6C7C7A7FD10A97FFD1155FD062A030303FD1501FD18557F7FFD14A9FF%CFCEC7CCC7CDCEFD08CFFFFD10A97FFD11555351282A2A2AFD0403FD1501%FD1755FD16A9FFCEC7FD06C6C9FD06CFFFFD11A9FD115554515151282A2A%030303FD1601FD14557FFD14A9A8FFA8CFCFCCFD07C6C7CEFD04CFFFFD11%A97FFD115553515151522A2A030302FD1601FD11557F7FFD13A9A8FD06CF%CEFD09C6CDFD04CFFD11A9FD1355517BFEA5512903030302FD1601FD0E55%7F7FFD14A9FFFD08CFC8FD09C6C7CFCFFFFD11A97FFD12555451A4FEFE7B%282B0303FD1701FD0B557F7FFD15A9A8FD0ACFCDFD09C6C7CFCFA8FD10A9%7FFD1355537AFEFEFE7A510303FD1801FD08557F7FFD16A9FFFD0CCFC8FD%09C6C7CFFD11A97FFD145551A5FD04FE512A02FD1801FD05557F7FFD19A9%A8FD0DCFFD09C6CDA8FD10A97FFD12552A542851A4FD04FE7B272800FD17%017F7FFD1CA9FFFD0FCFCDFD07C6CCA8FD11A9FD115554515151A5A4FD05%FEA4A551515128FD1501FD1CA9A8FD12CFCDFD05C6C7A7FD10A97FFD1055%5351517BA4FD0BFEA47B515127FD1301FD1CA9FD15CFC8CDC8CFA8FD11A9%FD10555451517BFD0FFEA5515127FD1201FD1AA9A8FD19CFA8FD10A97FFD%1255515151A4FD0EFE505151FD1301FD19A9A8FD1ACFFD11A9FD14552852%517BA4CCFD07FECCA47B515127FD1401FD18A9FD1ACFA8FD10A97FFD1455%FD042A2852517BFD05FE7B51512728FD1601FD17A9FD1ACFFD12A9FD1455%FD082A51CCFD04FE5128FD1901FD16A9FD1ACFA8FD10A97FFD1455FD082A%03527AFEFEFEA451FD1A01FD14A9FFFD19CFFFFD11A97FFD1455FD072A2B%0303287BFEFEFE7B27FD1A01FD14A9FD18CFA8FD12A97FFD1355FD092AFD%040351A5FEFE5128FD1A01FD12A9FFFD17CFFFFD13A97FFD1255FD0A2AFD%05035251A55151FD1B01FD12A9FD16CFA8FD14A9FD1355FD0A2AFD050302%0051515127FD1B01FD10A9FFFD15CFFFFD15A97FFD1255FD0A2AFD060301%01275151FD1C01FD0FA9FFFD06CFC8CDC8CEFD09CFFFA8FD15A97FFD1155%FD0A2AFD0803FD04012728FD1C01FD0EA9FFFD05CFCEFD05C6C7CEFD04CF%FFFD18A97FFD1155FD0A2AFD080302FD2201FD0EA9FD05CFCEFD08C6A7FF%A8FD19A9FD10552A2BFD0A2AFD080302FD2301FD0CA9FFFD06CFC7FD08C6%CDFD1AA9FD1055FD0C2AFD090302FD2301FD0CA9A8FD05CFCEFD0AC6FD19%A9FD1055FD0A2AFD0B0302FD2401FD0BA9A8FD06CFCEFD0AC6A7FD17A9FD%1055FD0A2AFD0C03FD2501FD0AA9A8FD07CFC9FD0AC6A8FD15A97FFD1055%FD082AFD0E03FD2601FD0AA9FFFD08CFFD09C6C7FD15A97FFD1055FD082A%FD0E03FD2701A9A9A9A8A6C9A6A9A9FFFD09CFCDFD08C6A6FD13A97FFD11%55FD082AFD0E0302FD2701A9A9C7FD05C6CEFD0BCFC8FD06C6A6FD13A97F%FD1155FD082AFD0F03FD2801A9C7FD07C6CDFD09CFA9A9A8A5C7A5C8A7FD%13A9FD1255FD072AFD100302FD2801C9FD09C6FD09CFFD1AA9FD1255FD08%2AFD0F0302FD2901A5FD09C6C8FD07CFA8FD18A97FFD1255FD072AFD1103%FD2A01C7FD09C6CDFD07CFFFFD16A97F7FFD1255FD072AFD1103FD2B01A5%FD09C6C7FD07CFA8FD15A97FFD1355FD082AFD100302FD2B01C8FD09C6FD%08CFFD15A9FD1555FD072AFD1103FD2C01A8FD08C6C7FD08CFFD13A97FFD%15552BFD062AFD110302FD2C01A9A8C7FD05C6CCFD08CFA8FD11A97F7FFD%1655FD062AFD110302FD2D01A9A9A8C8A5C7C7CEFD09CFFD11A9FD1855FD%062AFD1203FD2D0101%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0392 0.0118 0.1961 0 1 1 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 6) Pc0.0314 0.0196 0.9137 0 1 1 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 10) Pc0.0078 0.1961 0.9373 0 1 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 16) Pc0.1882 0.1451 0 0 0.8 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 46) Pc0.6196 0.5059 0 0 0.4 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 131) Pc0.4941 0.3569 0.7294 0.2078 0.4 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 135) Pc0.8588 0.7294 0 0 0.2 0.2 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 174) Pc0.9608 0.9608 0 0 0 0 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 216) Pc0.9725 0.9569 0.1569 0.0471 0 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 218) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 O0.9725 0.9569 0.1569 0.0471 0 0 0.4 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 Lf0 Ap0.9608 0.9608 0 0 0 0 0.8 Xa279.228 432 m280.6108 434.0029 282.4111 436.6162 283 437.5 c283.7427 438.6138 285.6265 443.6265 287 445 c287.3062 445.3062 287.6577 445.6084 288 445.8857 C288 456 L276.8213 456 L275.7939 453.8032 273.7739 449.7739 272 448 c269.9404 445.9404 266.5381 444.9111 264 444.6084 C264 432 L279.228 432 Lf0.8588 0.7294 0 0 0.2 0.2 0.8 Xa275.9541 432 m276.6514 432.9868 277.3716 433.8174 277.9473 434.1055 c280.021 435.1426 283.5 437.3521 283.5 440.5 c283.5 442.2153 283.8984 443.5449 284.832 444.9453 c285.3774 445.7632 286.8433 447.3501 288 448.5562 C288 456 L279.6221 456 L279.063 454.957 278.5063 453.8418 277.5 452.5 C274 447.5 271.293 445.707 v269.0298 444.208 267.0244 443.2896 264 442.7422 C264 432 L275.9541 432 Lf0.6196 0.5059 0 0 0.4 0.4 1 Xa274.7451 432 m275.5791 433.2632 276.5903 434.5449 277.5 435 c279.5 436 282.5 438 282.5 440.5 c282.5 442.5 283 444 284 445.5 c284.7666 446.6504 286.9985 448.9707 288 449.9932 C288 456 L283.5 456 L281.5 454.5 278.5 451 277.5 450 c276.5 449 273 446 272 445 c271.1235 444.1235 267.5601 442.48 264 441.75 C264 432 L274.7451 432 Lf0.1882 0.1451 0 0 0.8 0.8 1 Xa270.2026 432 m273.8911 434.2808 276.8252 436.8901 279 439.5 c281.5 442.5 282.1836 445.5513 282.5 446.5 c283 448 284 449.5 285 450.5 c286.3994 451.8994 286.5176 452.0176 288 453.5 C288 456 L285 456 L283.1382 454.1382 281.188 452.188 280.5 451.5 c279.75 450.75 277.5874 447.9683 277 446.5 c276 444 274.1973 442.7729 272.5 441.5 c270.9395 440.3296 267.5513 438.5552 264 437.8301 C264 432 L270.2026 432 Lf0.0392 0.0118 0.1961 0 1 1 0.8 Xa269 435 m271 435.5 272.5 436 274 437.5 c275.5 439 277 441.5 277.5 441.5 c278 441.5 280.5 442.9189 280.5 444.5 c280.5 446.5 282.5 447 282.5 449 c282.5 450.5811 285.5 453 286 453.5 c286.5 454 286.5 454.5 285.5 454 C282.5 451 282 450.5 v281.5 450 278 447 277.5 446.5 c277 446 277 443.5 277 442 c277 440.5 276 441 275 441 c274 441 273 439 272 439 c270.5859 439 267.7905 436.2905 267 435.5 c266.4844 434.9844 265.2495 433.4082 265 432 C267.2017 432 L267.4321 433.5254 267.9268 434.7314 269 435 cf0.4941 0.3569 0.7294 0.2078 0.4 0.4 0.2 Xa273.168 453.1201 m272.8682 454.5 272.5 454.5 v272.1328 454.5 271.834 453.1201 Y270.5 452.8428 270.5 452.4961 v270.5 452.1514 271.834 451.8711 Y272.1328 450.5 272.5 450.5 v272.8682 450.5 273.168 451.8711 Y274.501 452.1514 274.501 452.4961 v274.501 452.8428 273.168 453.1201 Yf1 Ap0.0078 0.1961 0.9373 0 1 0.8 0 Xa282.4512 448.5 m282.4512 447.9746 282.0254 447.5498 281.5 447.5498 c280.9746 447.5498 280.5488 447.9746 280.5488 448.5 c280.5488 449.0254 280.9746 449.4502 281.5 449.4502 c282.0254 449.4502 282.4512 449.0254 282.4512 448.5 cf280.9512 445.5 m280.9512 444.9746 280.5254 444.5498 280 444.5498 c279.4746 444.5498 279.0488 444.9746 279.0488 445.5 c279.0488 446.0254 279.4746 446.4502 280 446.4502 c280.5254 446.4502 280.9512 446.0254 280.9512 445.5 cf276.4512 440.5 m276.4512 439.9746 276.0254 439.5498 275.5 439.5498 c274.9746 439.5498 274.5488 439.9746 274.5488 440.5 c274.5488 441.0254 274.9746 441.4502 275.5 441.4502 c276.0254 441.4502 276.4512 441.0254 276.4512 440.5 cf274.4512 438.5 m274.4512 437.9746 274.0254 437.5498 273.5 437.5498 c272.9746 437.5498 272.5488 437.9746 272.5488 438.5 c272.5488 439.0254 272.9746 439.4502 273.5 439.4502 c274.0254 439.4502 274.4512 439.0254 274.4512 438.5 cf269.4512 434.5 m269.4512 433.9746 269.0254 433.5498 268.5 433.5498 c267.9746 433.5498 267.5488 433.9746 267.5488 434.5 c267.5488 435.0254 267.9746 435.4502 268.5 435.4502 c269.0254 435.4502 269.4512 435.0254 269.4512 434.5 cf265.9512 433 m265.9512 432.4746 265.5254 432.0498 265 432.0498 c264.4746 432.0498 264.0488 432.4746 264.0488 433 c264.0488 433.5254 264.4746 433.9502 265 433.9502 c265.5254 433.9502 265.9512 433.5254 265.9512 433 cf0 Ap0.0314 0.0196 0.9137 0 1 1 0 Xa272.9805 452.9463 m272.7656 453.9395 272.501 453.9395 v272.2354 453.9395 272.0215 452.9463 Y271.0605 452.7471 271.0605 452.4971 v271.0605 452.249 272.0215 452.0479 Y272.2354 451.0605 272.501 451.0605 v272.7656 451.0605 272.9805 452.0479 Y273.9404 452.249 273.9404 452.4971 v273.9404 452.7471 272.9805 452.9463 Yf0.4941 0.3569 0.7294 0.2078 0.4 0.4 0.2 Xa269.168 444.124 m268.8682 445.5039 268.5 445.5039 v268.1328 445.5039 267.834 444.124 Y266.5 443.8467 266.5 443.5 v266.5 443.1553 267.834 442.875 Y268.1328 441.5039 268.5 441.5039 v268.8682 441.5039 269.168 442.875 Y270.501 443.1553 270.501 443.5 v270.501 443.8467 269.168 444.124 Yf0.0314 0.0196 0.9137 0 1 1 0 Xa268.9814 443.9502 m268.7656 444.9434 268.501 444.9434 v268.2354 444.9434 268.0215 443.9502 Y267.0605 443.75 267.0605 443.501 v267.0605 443.252 268.0215 443.0508 Y268.2354 442.0635 268.501 442.0635 v268.7656 442.0635 268.9814 443.0508 Y269.9404 443.252 269.9404 443.501 v269.9404 443.75 268.9814 443.9502 Yf0.4941 0.3569 0.7294 0.2078 0.4 0.4 0.2 Xa283.1602 438.1123 m282.8604 439.4922 282.4922 439.4922 v282.125 439.4922 281.8262 438.1123 Y280.4922 437.835 280.4922 437.4883 v280.4922 437.1436 281.8262 436.8633 Y282.125 435.4922 282.4922 435.4922 v282.8604 435.4922 283.1602 436.8633 Y284.4932 437.1436 284.4932 437.4883 v284.4932 437.835 283.1602 438.1123 Yf0.0314 0.0196 0.9137 0 1 1 0 Xa282.9727 437.9385 m282.7578 438.9316 282.4932 438.9316 v282.2275 438.9316 282.0127 437.9385 Y281.0527 437.7393 281.0527 437.4893 v281.0527 437.2402 282.0127 437.0391 Y282.2275 436.0527 282.4932 436.0527 v282.7578 436.0527 282.9727 437.0391 Y283.9326 437.2402 283.9326 437.4893 v283.9326 437.7393 282.9727 437.9385 YfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF