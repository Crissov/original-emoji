%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (398\211\324\221\251.ai)%%CreationDate: (7/15/03) (6:48 PM)%%BoundingBox: 263 431 288 456%%HiResBoundingBox: 263.9502 431.9468 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 241 471.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 13072 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD22FFAE0A0A2D587DFD20FFCFC2C2C1C8CAFD2CFFAEA8FD26FF83%FD060A3383FD1CFFC2FD06BAC2FD27FF8358FD040A83FD26FFFD090A83FD%19FFC9FD08BAC2FD23FF8358FD070AA8FD26FFFD0A0A2D83FD12FFCFCDCE%CDCEFD0ABAC8CECDCECEFD1CFF83FD0A0AA8FD26FF33FD0B0A58FD10FFCE%FD04CDC7FD0ABAC8FD04CDCEFD1AFF58FD0A0A2DFD27FF83FD0C0A33FD0E%FFCEFD05CDC7FD0ABAC1FD06CDFD17FFA8FD0C0A58FD27FFA8FD0D0A2DFD%0CFFCFFD06CDC1FD0ABAC7FD06CDCFFD15FF83FD0D0A83FD28FFFD0E0A33%FD0BFFCEFD06CDC7FD0ABAC0FD06CDCEFD14FF7DFD0E0AFD29FF83FD0E0A%58FD0AFFCEFD06CDC1FD0ABAC7FD06CDCEFD13FFA833FD0D0A58FD29FFA8%FD0F0AA8FD09FFCEFD06CDC7FD0ABAC1FD06CDCEFD12FFAE2DFD0E0AA8FD%2AFF512CFD0D0A335E835E8383AEFFFFFFCFC7C7C1C7C1C7FD04BAC0C7C1%C1BABABAC1C1C7C1C7C1C7CEFD12FF83FD0E0A2DFD28FFC9C1BABABA982C%FD080AFD0B10339FFD09BAC1C8FD05CDFD0ABAC2FD10FFA8FD0F0AAEFD27%FFC9FD07BA50FD040AFD0E107AFD09BAC1FD08CDC0FD09BA74FD050A335E%83FD07FF33FD0E0A83FD25FFCFFFC9FD09BA2C0A2C32FD0D1032FD0ABAC7%FD09CDFD0ABAFD090A58A8FFFFFFA8FD0E0A33FD23FFCECECDCDCDC1FD09%BAC1FD04CD5DFD0B1074FD09BAC0FD0ACDC1FD09BA74FD0A0A33AEFF8310%1010FD0A0A33AEFD1CFFFD04AF8BAFADFD05CDFD0BBAFD05CD81FD0A1098%FD09BAC1FD0ACDC0FD09BA74FD0C0A5804101010FD0A0AA8FD1AFF8B67FD%064389FD06CDFD0BBAFD06CD5DFD091098FD09BAC1FD0ACDC1FD09BA98FD%0D0AFD0510FD070A33AEFD19FFAFFD0943CEFD06CDFD0BBAFD07CDFD0910%56FD09BAC1FD0ACDFD0ABA50FD0C0AFD0710FD050A58A8FD19FF8BFD0943%67FD07CDFD0BBAFD07CD39FD081032FD0ABAFD09CDC7FD0ABA2CFD070A10%0A100AFD09100A0A0AA8FD1AFF67FD0A4366FD07CDFD0BBAFD07CD32FD09%1050FD0ABAFD07CDC7C0FD09BA50FD050AFD07100AFD07100A0A58FD1BFF%AFFD0B4367FD07CDFD0BBAFD07CD39FD0A1032C1FD09BAFD05CDC7C1FD08%BA98500A0A0AFD09100AFD0910AEFD1CFFFD0C435FC1FD09BAC7C7C8C7C7%FD09BAC12CFD0A10185ECDC7C8C7C8C7C7FD05BAC1FD05BAC8C7C8C7C8C7%5D0A0A0AFD0A1033FD08102C9ABDC4CAFD18FF8BFD0B435FFD0ABAFD07CD%FD0ABA583B1117113A183B194343ADFD06CDC1FD0ABAC7FD06CD81FD0D10%11FD0610338EFD05B1BDFD17FF67FD0A435FFD0ABAFD09CDFD0ABA5FFD09%43ACFD06CDC7FD0ABAC0FD06CDACFD1310328DFD07B1BDFD16FFFD0B43C1%FD09BAC7FD09CDC7FD09BAC1FD0943AEFD06CDC1FD0ABAC7FD06CD5DFD0C%103A1033337C57576FFD09B1CBCACAFD12FFAFFD0B43FD0ABAC7FD09CDC7%FD0ABA67FD084342FD06CDC7FD0ABAC1FD06CD32FD0C101157A1FD04C3FD%0AB1BDFD05C3FD0FFFAFFD0A435FFD0ABAFD0BCDFD0ABA5F434343424219%3B194389FD05CDC1FD0ABAC7FD05CD87FD0D105FFD06C3FD0BB1FD06C3FD%0EFF8BFD0B43FD0ABAC7FD09CDC7FD0ABA421312FD050A12434389FD04CD%C7FD0ABAC7FD04CD81FD0D1018A1FD05C3BCFD0AB1B6FD06C3CAFD0EFFFD%0B43C1FD09BAC7FD09CDC8FD09BABBFD080A12434343428A898A66C1FD09%BA8A5D815D39FD0E105FFD07C3FD0AB1B6FD06C3CAFD0EFF67FD0A435FFD%0ABAFD09CDFD0ABA2CFD080A3BFD04431A4218182CFD08BA6011FD121084%FD06C3BCFD0AB1B6FD07C3FD0EFF67FD0B437CFD0ABAFD07CDFD0ABA74FD%090A3C433C3B11FD051050C1FD05BA8318FD12103B84FD07C3FD0AB1B6FD%07C3FD0EFFAFFD0C433BC1FD09BAC7C7CDC7C7FD09BAC12CFD0A0A3B11FD%09103C837C7C59431AFD1210111A60BCBDBCBDBCBDB6B1B0B1B1B7B0B1B1%B1B0B6BCBDBCBDBCBDC3FD0FFF67FD0C43FD07CDFD0BBAFD07CD32FD090A%33FD0B10FD06433AFD10100A100A2D8DFD09B1B7FD05BEFD09B1B7C4FD0E%FFAFFD0B4366FD07CDFD0BBAFD07CD2CFD070AFD0D1017FD054342FD0E10%FD050A2D8EFD09B1B7FD07BEFD0AB1BDFD0EFF67FD0A4367FD07CDFD0BBA%FD07CD33FD050AFD0F1018FD054311FD0B100A10FD060A8DFD09B1B7FD09%BEFD0AB1CAFD0EFFFD0B43FD07CDFD0BBAFD07CDFD050AFD101042FD0443%1AFD0B10FD080A26FD0AB1FD0ABEB7FD09B1BDFD0FFFFD0A4389FD06CDFD%0BBAFD06CD57FD040AFD1110FD05433BFD0A10FD090A6FFD09B1B7FD0ABE%B7FD0AB1FD0FFFAFFD0A43ACFD05CDFD0BBAFD05CDA5FD040AFD11101143%43605A60FD0A10FD0A0A4BFD0AB1FD0ABEB7FD0AB1FD11FFFD0A4389CECD%CDCDC1FD09BAC1FD04CD57FD040AFD1210425AB7FD04B16F32FD0710FD0A%0A51FD0AB1FD0ABEB7FD09B1B6FD12FFFD0B4367663A2CFD09BA2C2C2C33%FD050AFD12101159FD07B18DFD0810FD090A04FD0AB1B7FD09BEFD0AB1C4%FD11FFAFFD0D43101074FD07BA7410FD070AFD101057335734B6FD08B16F%333357FD0610FD080A4BFD0AB1FD09BEFD09B1B7FD11FF8BFD0E43101010%2CFD05BA2C10FD080AFD0E1057FD04C3BDFD0AB1FD04C37C3310181A4312%FD070A4AFD0AB1FD06BEB7FD09B1B7CBFD10FF8BFD0E4342FD0510322C32%FD0410FD070AFD0D107CFD05C3B6FD0AB1FD06C367FD0443423BFD060A2C%BDB6BDB6BDB6BDB1B1B1FD05B7B1B1B1BDB6BDB6BDB6C4FD11FF8BFD0F43%19FD0C10FD060AFD0D1032FD06C3B6FD0AB1BCFD05C3A1FD07431A3B1111%0A57FD06C3BCFD0AB1B6FD07C3FD10FFAF67FD0F4342FD0C10FD050AFD0E%10A1FD06C3B6FD0AB1FD07C367FD0B4384FD07C3FD0AB1B6FD07C3FD10FF%67FD104319FD0C10FD050AFD0E10A0FD06C3B6FD0AB1BCFD06C384FD0B43%84FD06C3BCFD0AB1B6FD07C3FD0FFFAFFD1243FD0C10FD050AFD0E10FD07%C3B6FD0AB1FD07C384FD0B433CFD07C3FD0AB1B6FD06C3CAFD0FFFFD1343%FD0B10FD050AFD0F107CFD06C3B6FD0AB1BCFD06C360FD0C437DFD05C3BC%FD0AB1B6FD06C3CAFD0EFF8BFD1343111010336FB6B1946F3310100A0A0A%FD0F102C94FD09B1FD05BEB7FD08B1B64C6642FD0943193A7CFD05C3FD0A%B1B6FD05C3CAFD0FFF67FD13431810338EFD05B18D2DFD050AFD0D1026FD%0AB1FD07BEB7FD09B18D2C0B3B1A4343431A3AFD041032A07CA176FD0AB1%C4C3CAC3CAFD11FFFD14433B33FD09B12D0A0A123AFD0C102CFD0AB1FD09%BEB7FD09B1690A0A0A114211FD09100A0A27FD08B194105E83FD12FFAFFD%1043677DC3C3A86FFD09B169A1C3C37B33FD0B106FFD09B1B7FD0ABEFD0A%B1040A0AFD0D100A0A4AFD06B18E04FD04105E83FD0FFFAFFD0F438BFD05%C3B6FD09B1B7FD05C357FD08100A108EFD09B1B7FD0ABEFD0AB1750AFD0F%100A0A0A948D948D510AFD08105EA8FD0CFFAFFD0E4360FD06C3FD0BB1FD%06C357FD04100A100A0A0AFD0AB1B7FD0ABEFD0AB14BFD0F10FD0A0AFD0B%1083FD0AFFAFFD0E43A1FD06C3FD0BB1FD06C3A1101010FD060A8DFD09B1%B7FD0ABEFD0AB14BFD1010FD090AFD0A103983FD0BFFFD0D433CFD07C3FD%0BB1FD07C3FD090A6FFD09B1B7FD0ABEFD0AB1040A0AFD0E10FD080AFD09%1058AEFD0DFF67FD0C4367FD07C3FD0BB1FD07C357FD090AB6FD09B1FD09%BEFD0AB14BFD040AFD0E10FD070AFD0510395EAEFD10FF8BFD0C433CFD07%C3FD0BB1FD07C3FD0A0A26FD0AB1B7FD06BEFD0AB169FD080AFD0B10FD07%0A1010335883FD14FF67FD0C439AB7B6B6B1B7B6FD04B1B7B7B7FD04B1B6%B6B1B7B6B79A2DFD0B0A9AB6B6B1B7B6B6B1B1B1B7B7BEB7B7B1B1B1B6B1%B7B6B6B1B726FD0A0AFD0B10FD050A5E83AEFD17FFAFFD0A43618EFD09B1%B7FD05BEB7FD09B18D2DFD0A0AA0FD06C3B6FD0AB1BCFD06C357FD0D0A10%0AFD04101111170A0A0AFD1CFFAF67FD074367FD0AB1B7FD07BEB7FD0AB1%2DFD090AFD07C3B6FD0AB1FD07C351FD110A13FD04433B0A8AFD1DFFAF67%FD064370FD0AB1FD09BEFD0AB18E11FD070A10A0FD06C3B6FD0AB1BCFD06%C358FD120A1AFD044342AFFD1FFFAF67FD0443FD0AB1FD0BBEFD0AB14343%193B123B123B107CFD06C3B6FD0AB1FD07C319FD120A3BFD0543AFFD21FF%61431B60FD0AB1B7FD0ABEFD0AB160FD0643181010FD06C3B6FD0AB1BCFD%05C37D430BFD120AFD05438BFD21FF8B1B1B37FD0AB1FD0BBEFD0AB160FD%06433A101057FD05C3B6FD0AB1FD05C3A16743430BFD110A13FD0443AFFD%21FF851B1B1B8EFD09B1B7FD09BEB7FD09B18EFD07431110101032A0C3C3%C3BCFD0AB1A0C3C3C3573B43434342FD110A11FD0443AFFD21FF8B1B1B1B%78FD09B1B7FD09BEB7FD09B17EFD074311FD0910B6FD08B151FD06104243%434342FD110AFD0443AFFD21FF61FD041B95FD09B1B7FD07BEB7FD09B195%FD0843FD0A100AFD07B16FFD0810FD044342FD060A2692FCFCFC6E040A0A%0A12434343AFFD21FF8BFD051B7EFD09B1B7FD05BEB7FD09B17EFD0943FD%0C109AB1B1B19451FD091018FD05430B0A0A0A4AFD07FC260A0A34434343%AFFD21FF85FD061BC3BCBDBCBDBCBDFD05B1B7FD05B1BDBCBDBCBDBCC3FD%0A43FD0C1018FD0F103CFD0543120A26FD09FC040A0A434343AFFD21FF8B%FD051B67FD07C3FD0BB1FD07C367FD09433AFD0B104318FD0E103A43435F%C1BABABAB5FD09FC92BABABA9F5FAFFD21FF85FD051B14FD07C3FD0BB1FD%07C36043193C193C1943434311FD0B10434311FD0E104399FD05BAFD0BFC%FD05BAA0FD21FF8BFD051B43FD07C3FD0BB1FD07C311FD070A0B113AFD0A%101143434311FD0D1057FD06BAFD0AFCB4FD06BACAFD20FF85FD061BA8FD%06C3FD0BB1FD06C37CFD0B0AFD0A103B43434342FD0D10FD07BAFD0BFCFD%06BAC1FD20FF8BFD051B4343FD06C3FD0BB1FD06C3FD0C0AFD0A1042FD05%4311FD0A1056FD07BAFD0AFCB4FD07BAFD20FF61FD061B433CA8FD04C38E%FD09B18DFD04C3A0FD0D0AFD0A10FD0743FD0A102CFD07BAFD0BFCFD07BA%FD20FF8BFD051BFD0443678484607EFD09B176517C5133FD0F0AFD081041%FD0743330AFD081056FD07BAFD0AFCB4FD07BAFD20FF85FD061BFD084395%FD07B194FD110A2C4A6E4A50FD06101AFD07430A0A0AFD07100AB4FCB4FC%B4FCB4FCFCFCB4B4BAB4B4FCFCFCB4FCB4FCB4FCB40A39338383FD1BFF8B%FD051BFD0A4378FD05B194FD110A6EFD05FCB42C10101012FD07433BFD06%0A1010104AFD0AFCFD07BAFD0AFC2CFD04105EAEFD18FF85FD061BFD0A43%3D537E533D433BFD0F0A6EFD08FC0A1010FD08433BFD080A26FD0AFCFD09%BAFD0AFC0AFD051033AEFD16FF8BFD051BFD12434211FD080A2C50745050%FD09FC9250837C83FD064312FD080AFD0AFCFD0ABAB4FD09FC98FD07105E%FD15FF85FD061BFD13431311FD050A98FD04BAFD0BFCFD05BA5FFD044311%FD070A2CFD0AFCB4FD09BAB4FD0AFCFD08103383FD13FF8BFD051BFD1543%15140C0B0AFD06BAB4FD0AFCFD06BA5F4343430BFD070A26FD0AFCFD0BBA%FD0AFCFD0A1083FD12FF61FD061BFD1343FD05157CFD06BAFD0BFCFD06BA%BB43434311FD070A26FD0AFCFD0ABAB4FD0AFCFD0A1033FD12FF8BFD051B%FD1343FD061598FD06BAB4FD0AFCB4FD06BA67434312FD080AFD0AFCFD0A%BAB4FD09FC92FD09105EFFB7B2B2B2B7B8B7BEBEC4CAFD07FF85FD061BFD%1143FD0715FD07BAFD0BFCFD07BA5943433BFD080A44FD0AFCFD09BAFD0A%FC2CFD081083FFFFBEFD0AB2B7C4FD05FF8BFD051BFD1143FD0815FD07BA%B4FD0AFCB4FD06BA6043433BFD090A8CFD09FCB4FD07BAFD0AFC4AFD0710%58FD04FFB7FD0DB2BEFFFFFF85FD061BFD0F43FD091599B4B4B4BAB4B4FD%05FCB4FD05FCB4B4BAB4B4B4BA3C434343FD0A0A44FD0AFCB4BABABAB4FD%09FCB42CFD06105EA8FD05FFBEFD0EB2BEFFFF8BFD051BFD0F43FD091577%FD09FCB4FD05BAB4FD09FC9A3C4343330A0A0AFD06105EFD07BAFD0AFCB4%FD07BA101010335EA8FD08FFB7FD0FB2B7FF85FD061BFD0D43FD091570FD%09FCB4FD08BAFD0AFC3C4312100AFD071034FD07BAFD0BFCFD07BA83FD0D%FFC4BEC4BEB8B7B7FD0AB2C48BFD051BFD0D43FD091553FD09FCB4FD09BA%B4FD09FC931811FD091060FD07BAFD0AFCB4FD07BAFD16FFC4BEFD08B260%FD061BFD0B43FD0A158CFD09FCB4FD09BAB4FD0AFC32FD0910113CFD07BA%FD0BFCFD06BABBFD19FFC4B7FD05B28BFD051BFD0B43FD0B15FD0AFCFD0B%BAFD0AFC2CFD091019437CFD06BAFD0AFCB4FD06BAC9FD1AFFCAB2B2B28F%8F4DFD061BFD0943FD0C15FD0AFCB4FD0ABAFD0AFC50FD091042434398FD%05BAFD0BFCFD05BA99FD1CFFBEB28F8F8F7FFD051BFD0943FD0D15B5FD09%FCB4FD0ABAFD0AFC2CFD081011FD04437CFD04BAB4FD09FCB4BABABABB7C%AFFD1CFFC4FD048F4DFD061BFD0743FD0E154CFD0AFCFD09BAB4FD09FC8C%FD091018FD05433C605F6044FD09FC262C3B603C438BFD1CFFBEFD048F7F%FD051BFD0743FD0F15378DFD09FCB4FD08BAFD0AFC56FD0910FD0A430A8C%FD07FC4A0A0AFD0443AFFD1CFFBEFD048F4DFD061BFD0543FD121569FD09%FCB4FD05BAB4FD09FC8C50FD09103BFD0A430A0A6EFD05FC260A0A0AFD04%43AFFD1CFF95FD058FFD051BFD0543FD14156EFD07B4FCFCFCB4B4B4FD05%FCFD06B456FD09101142FD0A43FD040A502650FD050AFD0443AFFD1CFF95%FD058FFD061B434343FD1515FD07BAFD0BFCFD07BA2CFD091019FD0B43FD%0C0AFD0443AFFD1CFF95FD058F3DFD041B434343FD1615FD07BAB4FD0AFC%B4FD06BA56FD081018FD0C4334FD0A0A11FD0443AFFD1CFFC4FD058F7FFD%051B43FD1715FD07BAFD0BFCFD07BA2CFD071011FD0D4312FD0A0A34FD04%43AFFD1CFFC4FD068F431B1B1B43FD181576FD06BAB4FD0AFCB4FD06BAFD%071011FD0E433CFD0A0A19FD0443AFFD0FFFA9AF85AF85AF85AF85AF85AF%85AFFD068F4D1B1B1BFD19153798FD05BAFD0BFCFD06BA56FD061011FD10%43FD0A0AFD05438BFD0FFF67FD0D1B96FD058FB23D1B1B1BFD191536FD05%BAB4FD0AFCFD05BA7AFD061018FD114312FD080A34FD0543AFFD0FFF3DFD%0C1B435AFD068FB2141BFD1C15529999996FFD09FC927474987432FD0510%171AFD12433CFD080A19FD0543AFFD0FFF43FD0D1B43FD068FB2B2141BFD%20158DFD08FC60FD0810113BFD154334FD060A0BFD0643AFFD0FFF3DFD0C%1B434361FD078FB27137FD20158CFD05FC8C7D1AFD0610181AFD174319FD%060A3CFD0643AFFD0FFF67FD0D1B434378FD078FB2B2A3373DFD1E155394%939A76674343113A184142FD1B4311FD040A34FD0743FD10FF3DFD0C1BFD%044372FD0C8F4D554D544D8B858B858B858B858B858B858B858B858B858B%858B858B858B85AFAFAF8BFD2343FD040A42FD064367FD10FF67FD0D1BFD%044396FD108FB2B8CAFD1BFF67FD1543AFFFFD0B433C0A0A19FD07438BFD%10FF3DFD0C1BFD05431572FD0F8FB2B2B2C4FD1AFFAFFD14438BFFFFAFFD%0B433B12FD0843FD11FF67FD0D1B4343431B15155BFD0D8FFD05B2C4FD1A%FF67FD12438BFD05FFFD1343AFFD11FF3DFD0C1B4343431BFD05153071FD%098FFD07B2CAFD19FFAFFD1143AFFD06FFAFFD11438BFD12FF43FD0D1B43%433DFD07158BA2C495B895BEBEC4BDFD06B2B8FD1AFFAFFD0E4367AFFD09%FF67FD0E438BFD13FF3DFD0C1B434343FD081537FD09FFC4FD06B2CBFD1A%FFAF67FD0B438BFD0CFF8B67FD0B43AFFD14FF67FD0D1B43FD09158BFD0A%FFB8FD05B2BEFD1CFFAF67FD06438BAFFD10FFAF6767FD0543678BFD16FF%3DFD0C1B43FD0A1537FD0AFFCBFD05B2B7FD1FFFFD04AFFD17FFAFAFAFFD%19FF67FD0D1BFD0A158BFD0BFFB8FD05B2CBFD55FF61FD0C1BFD0B1537FD%0BFFBDFD05B2C4FD56FFFD0C1BFD0B158BFD0BFFCBFD05B2C4FD56FF3DFD%0A1BFD0C155BFD0CFFFD05B2B7FD56FFAFFD091BFD0D158BFD0CFFFD05B2%BEFD57FF61FD071BFD0E155BFD0CFFB7FD04B2B7FD58FF61FD071BFD0D15%8BFD0CFFB7FD04B2BEFD59FF61FD041BFD0F155BFD0CFFC4FD05B2FD5AFF%AF431B1BFD0F158BFD0CFFBEFD05B2FD5CFFAF371BFD0E157FFD0CFFC4B7%B7B7B8B7FD54FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0235 0.0118 0.6 0 1 1 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 8) Pc0.0157 0.4039 0.2471 0 1 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 19) Pc0.0157 0.6157 0 0 1 0.4 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 24) Pc0.0196 0.5961 0.9137 0 1 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 28) Pc0.0039 0.949 0.0078 0 1 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 36) Pc0 0.9686 0.2157 0 1 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 37) Pc0.0118 0.9608 0.9137 0 1 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 39) Pc0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 73) Pc0.7686 0 0.0078 0 0.2 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 149) Pc0.9216 0 0 0 0 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 191) Pc0.8941 0.1373 0 0 0 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 197) Pc0.9373 0 1 0 0 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 202) Pc0.9333 0.2078 1 0.0745 0 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 208) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 O0.9216 0 0 0 0 0.8 1 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR268.5 436.5 m264 436.5 L264 434.999 264 433.9995 v264 433 265 432 266 432 c267 432 268.5 432 Y268.5 436.5 Lf0 Ap0.7686 0 0.0078 0 0.2 1 1 Xa266.5 433.5 m268.5 433.5 L268.5 436.5 L266.5 436.5 L266.5 433.5 Lf0.8941 0.1373 0 0 0 0.6 1 Xa268.5 435.5 m268 436 L265.5459 432.0732 L265.6953 432.0303 265.8467 432 266 432 c267 432 268.5 432 Y268.5 435.5 Lf0 R0.0039 0.949 0.0078 0 1 0 0.6 XA264 439.5 m265 439.5 267 439.5 267 438 c267 436.5 268.5 435 270 435 c271.5 435 271.5 432.6597 271.5 432 cS0 O0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa267.5 437.5 m267.5 437.6958 267.5 438.0415 267.5 438.4917 C267.4888 438.4922 267.4746 438.5 267.4639 438.5 c266.9941 438.5 266.5488 438.0859 266.4854 437.5034 c266.4185 436.8896 266.6431 436.0117 267.3438 435.3105 c268.0273 434.627 268.9063 434.4043 269.4941 434.4785 c270.0825 434.5522 270.5 435 270.5 435.5 C270.0215 435.5 269.6724 435.5 269.5 435.5 c268.125 435.5 267.5 435.8262 267.5 437.5 cf0.7686 0 0.0078 0 0.2 1 1 Xa275.5 443.5 m267.5 451.5 L267.5 440.832 267.5 438 v267.5 436.3262 268.625 435.5 270 435.5 c272.7153 435.5 283.5 435.5 Y275.5 443.5 Lf0.8941 0.1373 0 0 0 0.6 1 Xa273.5 441.5 m268.1821 436.1821 L268.6392 435.73 269.2832 435.5 270 435.5 c271.1436 435.5 273.8257 435.5 275.5 435.5 C273.5 441.5 Lf0.9216 0 0 0 0 0.8 1 Xa268.5 435.9268 m268.5 445 L267.5 445 L267.5 442.9951 267.5 439.3862 267.5 438 c267.5 437.0132 267.897 436.3286 268.5 435.9268 Cf0.7686 0 0.0078 0 0.2 1 1 Xa281 453 m268 453 L266.8999 453 266 452.1001 266 451 c266 449.5 267.5 448.5 Y266 447.5 266 446 v266 444 268.5864 443.979 269.0239 443.5415 c269.1611 443.4043 272.0176 442.9824 273.5 441.5 c275.1265 439.874 275.3911 437.1748 275.5415 437.0239 c275.979 436.5864 276 434 278 434 c279.5 434 280.5 435.5 Y281.5 434 283 434 v284.1001 434 285 434.8999 285 436 C285 449.0142 L285 450.0044 282.1001 453 281 453 Cfu0.9333 0.2078 1 0.0745 0 0.4 0 Xa281.0752 443.501 m279.5898 444.9863 279.5903 446.9658 y281.5703 446.9658 283.0552 445.4814 v284.54 443.9961 284.5 442 y282.5601 442.0166 281.0752 443.501 vf/BBAccumRotation (4.712389) XTUu272.0352 449.5151 m273.5205 451.0005 275.5 451 y275.5 449.02 274.0156 447.5352 v272.5303 446.0503 270.5342 446.0903 y270.5508 448.0303 272.0352 449.5151 vf/BBAccumRotation (3.141593) XTUu0.9373 0 1 0 0 0.6 0 Xa283.8003 444.7598 m282.1196 444.7598 281 445.8799 y282.1201 446.999 283.7998 447 v285.4795 447 288 445.8477 y285.4795 444.7598 283.8003 444.7598 vf/BBAccumRotation (-0.785399) XTUu0.9333 0.2078 1 0.0745 0 0.4 0 Xa275.1255 444.2598 m273.4448 444.2598 272.3252 445.3799 y273.4453 446.499 275.125 446.5 v276.8047 446.5 277.9126 445.3477 y276.8047 444.2598 275.1255 444.2598 vf/BBAccumRotation (-0.785399) XTUu274.2129 440.2598 m272.5322 440.2598 271.4126 441.3799 y272.5327 442.499 274.2124 442.5 v275.8921 442.5 277 441.3477 y275.8921 440.2598 274.2129 440.2598 vf/BBAccumRotation (-0.785399) XTUu280.7402 440.5005 m280.7402 438.8198 279.6201 437.7002 y278.501 438.8203 278.5 440.5 v278.5 442.1797 279.6523 443.2876 y280.7402 442.1797 280.7402 440.5005 vf/BBAccumRotation (0.785397) XTUu284.2402 437.8003 m284.2402 436.1196 283.1201 435 y282.001 436.1201 282 437.7998 v282 439.4795 283.1523 440.5874 y284.2402 439.4795 284.2402 437.8003 vf/BBAccumRotation (0.785397) XTUu286 447.3003 m286 445.6196 284.8799 444.5 y283.7607 445.6201 283.7598 447.2998 v283.7598 448.9795 284.9121 450.0874 y286 448.9795 286 447.3003 vf/BBAccumRotation (0.785397) XTUu286.0903 453.0923 m284.9019 451.9038 283.3179 451.9043 y283.3188 453.4878 284.5054 454.6763 v285.6938 455.8638 287.2915 455.8325 y287.2778 454.2793 286.0903 453.0923 vf/BBAccumRotation (-0.000001) XTUu281.2134 451.5 m279.5322 451.499 278.4126 452.6201 y279.5327 453.7383 281.2119 453.7402 v282.8926 453.7393 284 452.5879 y282.8916 451.499 281.2134 451.5 vf/BBAccumRotation (-0.785399) XTUu273.2397 454.7979 m274.4282 453.6104 274.4277 452.0264 y272.8447 452.0273 271.6563 453.2139 v270.4683 454.4014 270.5 456 y272.0522 455.9854 273.2397 454.7979 vf/BBAccumRotation (1.570796) XTUu0.9373 0 1 0 0 0.6 0 Xa285.0879 450.7129 m285.0879 449.0322 283.9678 447.9126 y282.8486 449.0327 282.8477 450.7124 v282.8477 452.3921 284 453.5 y285.0879 452.3921 285.0879 450.7129 vf/BBAccumRotation (0.785397) XTUu274.3003 451.7598 m272.6196 451.7598 271.5 452.8799 y272.6201 453.999 274.2998 454 v275.9795 454 277.0874 452.8477 y275.9795 451.7598 274.3003 451.7598 vf/BBAccumRotation (-0.785399) XTUu285.2129 439.2598 m283.5322 439.2598 282.4126 440.3799 y283.5327 441.499 285.2124 441.5 v286.8921 441.5 288 440.3477 y286.8921 439.2598 285.2129 439.2598 vf/BBAccumRotation (-0.785399) XTUu275.2598 443.1997 m275.2598 444.8804 276.3799 446 y277.499 444.8799 277.5 443.2002 v277.5 441.5205 276.3477 440.4126 y275.2598 441.5205 275.2598 443.1997 vf/BBAccumRotation (-2.356195) XTUu269.7598 447.6997 m269.7598 449.3804 270.8799 450.5 y271.999 449.3799 272 447.7002 v272 446.0205 270.8477 444.9126 y269.7598 446.0205 269.7598 447.6997 vf/BBAccumRotation (-2.356195) XTUu278.2603 442.2021 m277.0718 443.3906 277.0723 444.9746 y278.6553 444.9736 279.8438 443.7861 v281.0317 442.5986 281 441 y279.4478 441.0146 278.2603 442.2021 vf/BBAccumRotation (-1.570797) XTUu279.2979 436.7603 m278.1094 435.5718 276.5254 435.5723 y276.5264 437.1553 277.7139 438.3438 v278.9014 439.5317 280.5 439.5 y280.4854 437.9478 279.2979 436.7603 vf/BBAccumRotation (-0.000001) XTUu274.0352 449.0151 m275.5205 450.5005 277.5 450.5 y277.5 448.52 276.0156 447.0352 v274.5303 445.5503 272.5342 445.5903 y272.5508 447.5303 274.0352 449.0151 vf/BBAccumRotation (3.141593) XTUu279.5352 451.0151 m281.0205 452.5005 283 452.5 y283 450.52 281.5156 449.0352 v280.0303 447.5503 278.0342 447.5903 y278.0508 449.5303 279.5352 451.0151 vf/BBAccumRotation (3.141593) XTUu0.9333 0.2078 1 0.0745 0 0.4 0 Xa282.8008 447.7598 m281.1196 447.7588 280 448.8799 y281.1201 449.998 282.7993 450 v284.48 449.999 285.5874 448.8477 y284.479 447.7588 282.8008 447.7598 vf/BBAccumRotation (-0.785399) XTU0 R0.0157 0.4039 0.2471 0 1 0.6 0.6 XA1 J 2 w283.6802 450.376 m286.4028 447.6533 lS/BBAccumRotation (0.785398) XT283.6802 447.6533 m286.4038 450.375 lS/BBAccumRotation (2.356194) XT0 0.9686 0.2157 0 1 0 0.4 XA285.0415 450.9395 m285.0415 447.0889 lS283.1167 449.0137 m286.9663 449.0137 lS/BBAccumRotation (1.570796) XT1 Ap0 O0.0157 0.6157 0 0 1 0.4 0.8 Xa0 J 1 w286.0317 449.0137 m286.0317 448.4673 285.5879 448.0239 285.0415 448.0239 c284.4946 448.0239 284.0518 448.4673 284.0518 449.0137 c284.0518 449.5605 284.4946 450.0044 285.0415 450.0044 c285.5879 450.0044 286.0317 449.5605 286.0317 449.0137 cfu0 Ap0 R0.0196 0.5961 0.9137 0 1 0.4 0 XA1 J 2 w281.6387 441.8345 m284.3604 439.1118 lS/BBAccumRotation (0.785398) XT281.6387 439.1118 m284.3613 441.8335 lS/BBAccumRotation (2.356194) XT0.0118 0.9608 0.9137 0 1 0 0 XA283 442.397 m283 438.5474 lS281.0742 440.4722 m284.9248 440.4722 lS/BBAccumRotation (1.570796) XT1 Ap0 O0.0196 0.5961 0.9137 0 1 0.4 0 Xa0 J 1 w283.9897 440.4722 m283.9897 439.9258 283.5464 439.4829 283 439.4829 c282.4531 439.4829 282.0093 439.9258 282.0093 440.4722 c282.0093 441.019 282.4531 441.4629 283 441.4629 c283.5464 441.4629 283.9897 441.019 283.9897 440.4722 cfUu0 Ap0 R0.0196 0.5961 0.9137 0 1 0.4 0 XA1 J 2 w274.1812 439.8613 m276.9028 437.1387 lS/BBAccumRotation (0.785398) XT274.1812 437.1387 m276.9038 439.8613 lS/BBAccumRotation (2.356194) XT0.0118 0.9608 0.9137 0 1 0 0 XA275.5415 440.4248 m275.5415 436.5752 lS273.6167 438.5 m277.4673 438.5 lS/BBAccumRotation (1.570796) XT1 Ap0 O0.0196 0.5961 0.9137 0 1 0.4 0 Xa0 J 1 w276.5322 438.5 m276.5322 437.9531 276.0884 437.5103 275.5415 437.5103 c274.9951 437.5103 274.5522 437.9531 274.5522 438.5 c274.5522 439.0469 274.9951 439.4897 275.5415 439.4897 c276.0884 439.4897 276.5322 439.0469 276.5322 438.5 cfUu0 Ap0 R0.0157 0.4039 0.2471 0 1 0.6 0.6 XA1 J 2 w276.6387 447.3345 m279.3604 444.6118 lS/BBAccumRotation (0.785398) XT276.6387 444.6118 m279.3613 447.3335 lS/BBAccumRotation (2.356194) XT0 0.9686 0.2157 0 1 0 0.4 XA278 447.8979 m278 444.0474 lS276.0742 445.9722 m279.9248 445.9722 lS/BBAccumRotation (1.570796) XT1 Ap0 O0.0157 0.6157 0 0 1 0.4 0.8 Xa0 J 1 w278.9897 445.9722 m278.9897 445.4253 278.5464 444.9824 278 444.9824 c277.4531 444.9824 277.0093 445.4253 277.0093 445.9722 c277.0093 446.5195 277.4531 446.9629 278 446.9629 c278.5464 446.9629 278.9897 446.5195 278.9897 445.9722 cfUu0 Ap0 R0.0157 0.4039 0.2471 0 1 0.6 0.6 XA1 J 2 w269.6387 445.376 m272.3604 442.6533 lS/BBAccumRotation (0.785398) XT269.6387 442.6533 m272.3623 445.375 lS/BBAccumRotation (2.356194) XT0 0.9686 0.2157 0 1 0 0.4 XA271 445.9395 m271 442.0889 lS269.0752 444.0137 m272.9248 444.0137 lS/BBAccumRotation (1.570796) XT1 Ap0 O0.0157 0.6157 0 0 1 0.4 0.8 Xa0 J 1 w271.9893 444.0137 m271.9893 443.4673 271.5464 443.0239 270.9995 443.0239 c270.4531 443.0239 270.0093 443.4673 270.0093 444.0137 c270.0093 444.5605 270.4531 445.0044 270.9995 445.0044 c271.5464 445.0044 271.9893 444.5605 271.9893 444.0137 cfUu0 Ap0 R0.0235 0.0118 0.6 0 1 1 0.4 XA1 J 2 w276.6812 454.375 m279.4028 451.6523 lS/BBAccumRotation (0.785398) XT276.6812 451.6523 m279.4038 454.375 lS/BBAccumRotation (2.356194) XT0.0196 0.5961 0.9137 0 1 0.4 0 XA278.0415 454.9385 m278.0415 451.0889 lS276.1167 453.0137 m279.9673 453.0137 lS/BBAccumRotation (1.570796) XT1 Ap0 O0.0235 0.0118 0.6 0 1 1 0.4 Xa0 J 1 w279.0322 453.0137 m279.0322 452.4668 278.5884 452.0239 278.0415 452.0239 c277.4951 452.0239 277.0522 452.4668 277.0522 453.0137 c277.0522 453.5605 277.4951 454.0034 278.0415 454.0034 c278.5884 454.0034 279.0322 453.5605 279.0322 453.0137 cfUu0 Ap0 R0.0235 0.0118 0.6 0 1 1 0.4 XA1 J 2 w269.6387 452.375 m272.3604 449.6533 lS/BBAccumRotation (0.785398) XT269.6387 449.6533 m272.3623 452.375 lS/BBAccumRotation (2.356194) XT0.0196 0.5961 0.9137 0 1 0.4 0 XA271 452.9385 m271 449.0889 lS269.0752 451.0137 m272.9248 451.0137 lS/BBAccumRotation (1.570796) XT1 Ap0 O0.0235 0.0118 0.6 0 1 1 0.4 Xa0 J 1 w271.9893 451.0142 m271.9893 450.4673 271.5464 450.0244 270.9995 450.0244 c270.4531 450.0244 270.0093 450.4673 270.0093 451.0142 c270.0093 451.5605 270.4531 452.0044 270.9995 452.0044 c271.5464 452.0044 271.9893 451.5605 271.9893 451.0142 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF