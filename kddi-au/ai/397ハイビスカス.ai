%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (397\203n\203C\203r\203X\203J\203X.ai)%%CreationDate: (7/15/03) (4:52 PM)%%BoundingBox: 264 431 289 456%%HiResBoundingBox: 264 431.9668 288.0117 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 249 471.8887 12 1009 717 18 0 0 7 43 0 0%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 12202 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD13FFA1C36F93686FFD0F686F689A6FC3FD27FFC3A19A6F6F686F%FD0D686F6FA1A8FD23FFA86F6FFD1D686F6FFD1DFFA19AFD1C6844A1FD1E%FFCA6F6FFD23686F76FD17FF9A6FFD2068446F76FD1AFF76FD2A686F7DFD%11FF6FFD2568444444A8FD17FFFD2E686FFD0DFFA193FD2A68449AFD14FF%A144FD0E688C688C688C688C688C688C688C688C688CFD1168A1FD0AFFFD%1B688C688C688C688C688C688C688C688C688C6844446FA8FD11FF7644FD%1068FD178CFD0B689AFD07FF9AFD13688C68FD1B8C446FA1FD0FFF7644FD%0768FD0D446868FD138C688CFD09689AFD04FF7DFD10688C68FD218C4444%7DFD0DFFA14444FD0668FD104468FD11B08CB08C8C688CFD0768FFFFFFA1%6FFD0C688CFD05B08CB0FD208C4444A1FD0BFFA1444444FD0468FD14448D%FD14B08CB0FD066844FFA1FD0C68FD0CB0FCFD1E8C4444A1FD0AFF444444%FD0468FD1644FD17B0FD06686FFD0A68B0FCFD0FB08CB0FD1B8C68444BA8%FD08FF76444444686868FD174468FD17B0FD0F68FD15B0FD1A8C6844444B%A8FD07FF6F444444686868FD07447474C09EC69EC098984AFD07448DFD17%B0FD0C688CFD19B0FD188C44444476FD06FFA144444468688CFD0744FD0B%C69E6EFD05448DFD17B0FD056844FD04688CFD1CB0FD188C444444A1FD05%FF4BFD044468FD06446EFD0DC69EFD054468FD17B08CFD08688CFD1EB0FD%168C6868444444FD04FFA8FD04446868FD0644C0C0FD0DC6FD05448DFD18%B0FD0868FD20B0FD168C684444446FFFFFFFA8FD0444688CFD05446EC0FD%0EC6FD054468FD19B0FD04684468FD22B0FD158C6868444444CAFFFF76FD%04446868FD05446EC0C0FD0DC6FD0644FD18B0FD0768FD23B0FD148C6868%44444476FFFF6FFD04446868FD05449EC0FD0EC698FD05448DFD18B0FD05%68FD25B0FD138C686868444444FFFFFD05448C68FD054498C0C0FD0DC698%FD0644FD17B08CFD05688CFD24B0FD138C6868FD044476FFFD05448C68FD%0544C0C0C0FD0EC6FD06448CFD17B0FD0568FD22B0B6B6FD07BDB6BC93B5%FD098C6868684444446FFFFD05448C68FD054498C0C0FD0EC698FD06448C%FD15B08CFD0568FD1FB0FD05BDB6B68CB5FD078CB5FD088C6868FD0544CA%FD05448C68FD0544FD04C0FD0EC6FD0644688DFD15B0FD0568FD12B0B5B0%FD08B6FD05BDB6B5FD158C686868FD04447DFD05448C68FD05446EFD04C0%FD0DC698FD07448CFD13B08CFD0568FD0FB0B6B0FD0AB6BDBDBDB6B0B0B0%FD168C6868FD054476FD0544688CFD054498FD04C0FD0EC66EFD07448DFD%13B0FD0568FD0CB0FD0CB6FD05BDB6B5B0B0FD168CFD0468FD04446FFD05%448C8CFD0644FD08C0FD0BC6FD08448CFD11B08CFD0568FD09B0FD0EB6BD%BDBDB6B6B6B0B0FD198C6868FD0B44688CFD064498FD0AC0FD09C6FD0844%8DFD11B0FD0568FD06B0FD0EB6B7FD04BDB6B6B6B0FD1A8CFD0468FD0A44%688C68FD05446E98FD0CC0FD07C6FD08448CFD0FB08CFD0568FD05B0FD0E%B6FD05BDB6B6B0B0FD1B8C686868FD06444BFD0444688C8CFD0A449898FD%08C0FD07C64AFD0644698DFD0FB0FD0568B0B0B5B0FD0EB6FD05BDB6B6B6%B5FD1C8CFD0468FD05444BFD0444688C8CFD0D449898FD06C0FD07C6FD08%448CFD0DB08CFD0568B0B0B0FD0EB6BDBDBDB7B6B6B6B5B0FD1C8CFD0468%FD05446F76FD05448C8C8CFD0E4498FD06C0FD07C64AFD0644688DFD0DB0%FD0568FD0FB6FD04BDFD05B6B0FD1D8CFD0468FD05444B76FD0544FD048C%FD0F44FD06C0FD07C6FD08448CFD0BB08CFD0568B0FD0DB6FD04BDFD04B6%B0B0FD1E8CFD0468FD054476CAFD0544FD058C68FD0E44FD06C0FD07C64A%FD07448DFD0BB0FD0568FD0CB6FD06BDFD04B6B0FD1E8CFD0568FD054476%A8FD054468FD048CB08C8D688DFD0B44FD06C0FD07C6FD08448CFD09B08C%FD0568FD0BB6FD05BDFD05B6B0FD1F8CFD0568FD0544A1FFFD054468FD04%8CFD07B08DFD0944FD06C0FD07C6FD08448DFD09B0FD0568FD0AB6FD05BD%B7FD04B6B0FCFD1F8CFD0468FD0644A8FF76FD0544FD048CFD09B068FD08%44FD06C0FD07C6FD08448CFD07B08CFD0568FD09B6FD05BDFD05B6B0FCFD%1F8CFD0568FD0644FFFFA1FD054468FD048CFD09B08D69FD0744FD06C0FD%07C64AFD0644698DFD07B0FD0568FD08B6FD05BDFD06B6B0B0FD1E8CFD06%68FD054476FFFFFFFD054468FD048CFD0AB08CFD0844FD06C0FD07C6FD08%448CFD05B08CFD0568FD07B6FD05BDFD05B6B0B0B0FD1E8CFD0668FD0644%7DFFFFFF76FD0544FD048CFD0BB08D68FD0744FD06C0FD07C64AFD064468%8DFD05B0FD0568FD06B6FD05BDFD06B6B0B0FD1E8CFD0768FD0644FD04FF%7DFD054468FD048CFD0BB08CFD0844FD06C0FD07C6FD08448CB0B0B08CFD%0568FD05B6FD05BDFD06B6B0B0FD1E8CFD0768FD064476FD05FFFD054468%FD048CFD0CB08DFD0844FD06C0FD07C64AFD07448DB0B0B0FD0568FD04B6%FD06BDFD05B6B0B0B0FD158C688CFD0E68FD0644A1FD05FFA1FD0544688C%8C8CFD0DB08CFD0844FD06C0FD07C6FD08448CB08CFD0568B6B6B6FD06BD%FD05B6B0B0B0FD0F8C688CFD1468FD0744FD07FF4BFD0544FD048CFD0DB0%8DFD0844FD06C0FD07C6FD08448DB0FD0568B6B6FD06BDFD05B6FD04B0FD%0E8CFD1668FD0744A1FD07FF76FD0644FD048CFD0DB08CFD0844FD06C0FD%07C6FD0844FD0668B6FD06BDB7FD04B6FD04B0FD0C8CFD1868FD07446FFD%09FFFD0644688C8CFD0FB08D69FD0744FD06C0FD07C64AFD064469FD0568%FD07BDFD05B6FD04B0FD0B8CFD16684468FD07446FA8FD09FFA1FD06448C%8C8CFD0FB08CFD0844FD06C0FD07C6FD0844FD0468FD06BDFD05B6B5B0B0%B0FD0A8CFD0D684468446844684468FD0C447DFD0BFF6FFD0544688C8C8C%FD0FB08D68FD0744FD06C0FD07C64AFD0744686868FD05BDFD06B6FD04B0%FD088CFD0C68FD164476FD0CFFA8FD0644688C8C8CFD0FB08CFD0844FD06%C0FD07C6FD094468FD04BDFD06B6FD04B0FD088CFD0A68FD184476FD0EFF%A1FD0644688C8C8CFD0FB08DFD0844FD06C0FD07C64AFD074468BDBDBDFD%06B6FD05B0FD078CFD0A68FD17444BA1FD10FF6FFD0644688C8C8CFD0FB0%8CFD0844FD06C0FD07C6FD084494BDFD06B6FD05B0FCFD068CFD0868FD19%44A1CAFD12FF4BFD064468688CFD0FB0B693FD0844FD06C0FD07C6FD0844%93FD07B6FD04B0FD068CFD0868FD0B446F6F6F4B766F6F4B766F6F76A1A8%FD16FFFD0844688C8CFD0EB0B68DFD0844FD06C0FD07C6FD08448DFD05B6%FD04B0FD068CFD0868FD07447676A8A8FD26FF4BFD08448C8CFD0CB0B6B6%B6936FFD0744FD06C0FD07C64AFD06446FFD04B6FD05B0FD058CFD0868FD%05446F76FD2CFF76FD08446868FD0CB0B6B6B68DFD0844FD06C0FD07C6FD%074469B6B6FD06B08C8CFD0A68FD054476A8FD2EFF76FD0A448DFD09B0FD%05B69368FD0744FD06C0FD07C64AFD064494B6B6FD04B0688CFD0A68FD05%44A1FD31FFA14BFD0B448C8CB08CFD04B0FD05B68DFD0844FD06C0FD06C6%C0FD0744B6FD1068FD0544A8FD34FFA1FD2144FD06C0FD06C69EFD0644FD%1068FD0544CAFD37FF4BFD2044FD06C0FD06C674FD0544FD0F6844684444%76FD3AFFA876FD1F44FD06C0FD06C6FD0644FD13686FA1A1FD3AFF7D6FFD%1D44FD06C0FD05C66EFD06448C688C688CFD11686F6FA1A8FD38FFA1A16F%4BFD1944FD06C0FD04C6C0FD0544FD0D8C688CFD0C686FC3CAFD35FFA16F%684468448D688D8C8D8C8D8C8D8C8D8C8D8C9468FD0844FD08C0C66EFD05%44688C8C8DFD0E8C688CFD0A686FA1A8FD30FF766F686868FD10B0B6B6B6%9368FD074498FD06C098FD0644FD05B6FD04B08CB0FD0C8CFD0A6876CAFD%2CFF9AFD0568FD12B0B6B6B68DFD08446E98C0C0C098FD064469FD06B6FD%08B0FD0C8CFD09686FA1FD28FF9A6F686868FD14B0FD05B694FD09446EC0%6EFD074493FD07B6FD0AB0FCB0FD0A8C688CFD0768CAFD25FF44FD0468FD%14B0FD07B68DFD1244BDFD08B6FD0DB0FCFD0A8CFD076893A8FD21FF9AFD%0568FD14B0FD09B693FD1044BDBDBDFD08B6FD10B0FD0A8CFD06689AFD1E%FF7D6FFD0568FD16B0FD08B6BD946FFD0D44FD05BDFD08B6FD10B0FD0A8C%FD06686FCAFD1BFFA16FFD0468FCFD16B0FD08B6FD04BD9AFD0B44FD07BD%FD08B6FD12B08CFCFD078CFD0668FD1AFFA1FD05688CFD16B0FD08B6FD07%BD8D69FD0544698DB6B6B6B7FD05BDFD07B6FD15B0FD078CFD0668A1FD17%FF76FD0568FD17B0B5FD07B6FD07BDFD04B64444686868FD06B6FD06BDFD%06B6FD17B0FD068CFD0568C3FD15FF6FFD05688CFD18B0FD06B6B7FD06BD%FD04B68D4444686868FD07B6FD05BDFD07B6FD17B0FD058CFD0668A1FD13%FF9AFD05688CFD18B0FD06B6FD07BDFD06B64444686868FD08B6FD07BDFD%05B6B5FD18B0FD048CFD0568C3FD11FF7DFD05688CFD18B0FD07B6FD06BD%FD06B68D4444686868B0FD09B6FD06BDFD04B6FD1AB0FD048CFD0568CAFD%0FFFA1FD05688CFD19B0FD06B6FD06BDFD08B64444686868B0B0FD09B6B7%FD05BDFD04B6FD1AB0FD048CFD0568FD0EFF7DFD0668FD1AB0FD06B6FD05%BDFD08B68D44446868688CB0B0B5B0FD08B6FD05BDFD04B6FD1AB08C8CFD%0768FD0DFF6FFD0568FCFD19B0FD06B6FD05BDFD0AB644446868688DFD05%B0FD08B6FD05BDFD04B6FD1AB08CB08CFD056876FD0BFF9AFD05688C8CFD%19B0FD05B6FD05BDFD0AB68D4444FD0468FD06B0FD08B6FD05BDFD04B6FD%1AB08C8CFD0668A8FD09FFCAFD05688C8CFD19B0FD05B6FD05BDFD0CB644%44446868688CFD08B0FD06B6FD05BDFD04B6FD1AB0FC8CFD056893FD09FF%44FD04688C8CFD1AB0FD04B6FD05BDFD0CB68D444444FD04688CFD08B0FD%08B6BDBDBDFD04B6FD1AB08CFD0668A1FD07FF6FFD04688C8C8CFD19B0FD%04B6FD06BDFD0CB6B0444444FD0568FD09B0FD08B6FD04BDB6B6B6FD1AB0%8CFD0668FD06FFC3FD06688C8CFD19B0B6B6B6FD05BDFD0CB6B0B08CFD04%44FD04688CFD0BB0FD06B6BDBDBDFD04B6FD1AB0FD066876FD05FF9AFD05%688C8CFD19B0B6B6B6FD06BDFD0BB6FD04B0444444FD06688DFD0BB0B5FD%05B6FD05BDB6B6FD1AB0FD0668FD05FF44FD04688C8C8CFD19B0FD04B6BD%BDBDFD0AB6FD06B08CFD0444FD06688DFD0DB0FD05B6BDBDBDB7B6FD19B0%8CFD0668A8FFFFFF76FD0468FD048CFD18B0B6B6B6FD05BDFD09B6FD08B0%FD0544FD0668FD0EB0FD05B6FD04BDB6B6FD18B0FD06686FFFFFFFFD0668%8C8CFD19B0B6B6B6FD04BDFD07B6FD0AB08CFD0544FD07688DFD0FB0FD04%B6BDBDBDFD19B08CFD0668FFFFFFFD05688C8C8CFD19B0B6B6FD05BDFD06%B6FD0CB0FD0544FFFD0768FD10B0FD04B6BDBDBDFD18B08CFD0668A8FF6F%FD05688C8C8CFD18B0B6B6FD04BDFD05B6FD0EB08CFD0544FFC3FD07688D%FD11B0B6B6BDBDBDFD18B0FD0768FF93FD05688C8C8CFD17B0B6B6FD04BD%B7FD04B6FD10B0FD0544FFFFCAFD0768FD12B0B6B6BDBDBDFD17B0FD0668%6FFF44FD0468FD048CFD17B0B6FD04BDFD05B6FD10B08CFD0544FFFFFFA1%FD07688DFD12B0B5B6BDBDFD16B0FD0768CAFD06688C8C8CFCFD16B0FD05%BDB6B6FD14B0FD0544FD04FFCAFD0768FD14B0B6BDBDB6FD14B0FD07689A%FD0568FD048CFD16B0FD04BDB7B6B6FD14B08CFD0544FD05FFA144FD0668%FD15B0B6BDB6FD13B0FD07689AFD0568FD048CFD15B0FD05BDB6FD17B0FD%0544FD07FFFD0768FD14B0B5B6BDB6B6FD11B0FD07686FFD0568FD048CFD%15B0B7BDBDB6FD18B08CFD0544FD07FFC3FD0768FD16B0BDB6FD11B0FD07%686FFD0568FD048CFD13B0B5FD04BDFD1AB0FD0544FD08FFCAFD0768FD16%B0BDB7B6FD0FB0FD0D68FD048CFD13B0B6BDBDB6FD1AB08CFD0544FD09FF%C3FD0768FD16B0B6B6B5FD0EB0FD0D68FD048CFD12B0B6BDBDBDFD1CB0FD%0544FD0AFFCAFD06688CFD16B0B6BDB6FD0DB0FD0D68FD048CFD12B0BDBD%B6FD1CB08CFD0544FD0BFF9AFD06688CFD16B0B6BDB6FD0CB0FD0D68FD05%8CFD10B0BDBDBDFD1DB08DFD0544FD0CFF9AFD0668FD17B0B5BDB6FD0BB0%FD076844FD0568FD048CFD10B0BDBDBDFD1EB068FD04446FFD0DFFFD0668%8CFD18B0B6B6FD0AB0FD076844FD0568FD058CFD0EB0BDBDBDFD1FB069FD%04446FFD0DFFA1FD0668FD19B0B6BDFD08B08CFD076844FD0568FD058CFD%0DB0B6BDBDFD20B0FD0544A1FD0EFFFD0768FD1AB0BDFD08B0FD0768446F%FD0568FD048CFD0CB0B6BDBDFD21B0FD0544A1FD0FFFFD0668FD1BB0BDFD%06B0FD08684444FD0468FD058CFD0BB0B5BDBDFD21B08DFD0544FD10FF9A%FD0668FD1BB0B6FD05B0FD0768446F6FFD0568FD048CFD0AB0B6BDBDFD22%B068FD044476FD11FF6FFD0568FD1CB0B6FD04B0FD08686F6FFD0568FD05%8CFD09B0B6BDFD23B0FD0544A1FD11FF76FD0668FD1CB0B6B0B08CFD0768%44769AFD0568FD048CFD09B0B6BDFD23B08DFD0544FD13FFFD0768FD1CB0%B6B0B0FD066844447676FD0568FD058CFD08B0BDFD24B0FD054476FD13FF%A1FD06688CFD1DB0FD07684444A1FFFD0568FD058CFD07B0BDFD24B08DFD%0544A1FD14FF93FD0668FD1CB08CFD07684444A8FFFD0668FD048CFD06B0%BDFD25B068FD0544FD15FFA1FD0768FD1BB0FD0768444444FFFFFD0568FD%068CFD04B0BDB6FD24B08DFD0544A1FD16FF76FD06688CFD1AB0FD076844%446FFFFF9AFD0568FD068CB0B0B6FD26B0FD0644A8FD17FF44FD06688CFD%18B0FD076844444476FFFFA1FD0568FD058CB0B0B6B6FD25B068FD054476%FD18FFCA44FD0668FD17B0FD0868444444CAFFFFFFFD0568FD068CB6B6FD%25B0FD0744FD1AFF6F444444FD0468FD15B0FD0868FD0444FD04FFA1FD05%68FD058C8DFD25B0FD0744A1FD1AFFA86F444444FD0468FD13B0FD0868FD%044476FD04FFA844FD0568FD068CFD21B08C8CFD07446FFD1CFF76FD0444%FD05688CFD0DB08CB0FD0868FD0544A8FD05FF76FD0468FD088CB0FCFD1D%B08C8CFD07444BA8FD1DFF6FFD0444FD0668FD0BB08CB0FD0868FD054476%FD07FF4444446868FD0A8CFC8CB08CFD15B0FD048CFD0844A1FD1FFFFD07%44FD08688C688CFD0C68FD0644A1FD07FFA14444446868FD108CB08CB08C%B08CB08CB0FCB08CB08CB0FD068CFD084476FD20FFCAFD0744FD1368FD08%444BFD09FF6F4444446844FD218C68FD09446FFD22FFA1FD0B44FD0B68FD%0B44CAFD0AFF4BFD0544FD1F8CFD0A444BFD24FFA1FD0D446844684468FD%0D44A1FD0BFFA84BFD074468448C68FD158CFD0C446FFD26FF76FD1D4476%FD0EFF6FFD0D448C448C688C688C688C688C688C688CFD0E4476FD28FFA1%FD1B4476FD10FFA1FD2844A1FD2AFFA1FD194476FD13FF764BFD234476FD%2EFF6FFD1644A8FD15FFCAA1FD20446FFD31FFA14BFD124476CAFD19FFA8%A1766FFD18444BA1CAFD34FFA14BFD0E4476A8FD20FFA1A176764B6FFD0D%446F76A1A8FD39FFA8A1766FFD05446F6F76A1FD0EFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0078 0.1961 0.9373 0 1 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 16) Pc0.0275 0.3922 0.9412 0.0039 1 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 22) Pc0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 25) Pc0.0078 0.8196 0.3137 0 1 0.2 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 31) Pc0.0078 0.9647 0.6078 0 1 0 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 38) Pc0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 76) Pc0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 112) Pc0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 148) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR275 444.5 m279.9551 444.4551 281 445.5 v282.0439 446.5439 282.9111 446.5 285 446.5 c287.0889 446.5 288 448.9111 288 451 c288 453.0889 285.6113 456 283 456 c279.8662 456 275 455.6553 275 452 c275 444.5 lf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa275 452 m275 444.5 L277.5 444.5 279.25 444.75 280.5 446 c281.5439 447.0439 282.4111 447.5 284.5 447.5 c286.5889 447.5 287 449.9111 287 452 c287 453.5 284.7192 456 283 456 c279.8662 456 275 455.6553 275 452 Cf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa276 452 m276 447.0757 276 445.5361 V277.9424 445.6187 279.0298 445.9438 279.793 446.707 c280.9556 447.8701 282.0503 448.5 284.5 448.5 c285.4951 448.5 286.5 450.1777 286.5 452.5 c286.5 454.5 285.5 455 284 455 c277.7256 455 276 453.2881 276 452 Cf0.0078 0.9647 0.6078 0 1 0 0.2 Xa278.0361 445.7886 m278.959 447.5586 279.5 450 283 452 C283 453.248 280.2856 454.4297 279.1011 454.4937 C277.3032 454.0283 276.4375 453.3081 276.1362 452.6104 C276.0029 452.1318 276 451.6973 276 451.5 C276 447.6299 276 446.1245 V276.2109 445.8501 276.4771 445.5654 V277.0806 445.6079 277.5947 445.6807 278.0361 445.7886 Cf0.0078 0.8196 0.3137 0 1 0.2 0.4 Xa282.2188 451.9199 m277.2188 451.9199 276 450 Y276 445.5361 L276.4297 445.5542 276.811 445.5869 277.1631 445.6309 C278.1069 448.4692 282.2188 451.9199 Yf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa275.5 447 m278.646 450.8818 282 452 v283.5 452.5 285 452 y282.6509 452.5605 280.3125 450.7949 v278.7813 449.6387 277 447.5 275.5 445.5 cF0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa276 444.5 m275.5 444.5 275.5 445.5283 275.5 442 c275.5 439.5 277.5 439 278.6113 437.1895 c279.833 435.1992 281 432 284 432 c286.6113 432 288.0117 434 288.0117 437.5 c288.0117 440.6328 286.4443 442.4111 284.3555 443.4561 c282.2666 444.5 279.1338 444.5 276 444.5 cf276 444.5 m271.0664 444.5 269.5 444.5 v267.9336 444.5 264 441.6338 264 438.5 c264 433.5 265 431.9668 270.5 431.9668 c275.2002 431.9668 276 437.1895 276 437.7109 c276 438.2334 276 444.5 yf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa275 438.7441 m275 439.1328 275 442.6987 275 444.5 C273.709 444.5 270.7627 444.5 269.5 444.5 c267.9336 444.5 264 441.6338 264 438.5 c264 436.9248 264.1001 435.6948 264.4082 434.7476 C265.2876 433.4746 266.9502 433 270 433 c274.7002 433 275 438.2227 275 438.7441 cf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa265 438.5 m265 436.1323 265.2271 434.543 266.0493 433.5254 C266.9971 433.1606 268.269 433 270 433 c274.7002 433 275 438.2227 275 438.7441 c275 439.1328 275 442.6987 275 444.5 C273.9673 444.5 272.0698 444.5 270.5 444.5 c268.9336 444.5 265 441.6338 265 438.5 cf0.0078 0.9647 0.6078 0 1 0 0.2 Xa267.3496 442.8403 m266.438 441.8149 265.75 440.5576 265.75 439.25 c265.75 436.8823 265.9771 435.293 266.7993 434.2754 C267.7471 433.9106 269.019 433.75 270.75 433.75 c272.1172 433.75 273.146 434.1982 273.9297 434.8374 C275.2007 436.397 275 438.4287 275 438.7441 c275 439.1328 275 442.6987 275 444.5 C273.9673 444.5 272.0698 444.5 270.5 444.5 c269.7578 444.5 268.4849 443.8516 267.3496 442.8403 Cf0.0078 0.8196 0.3137 0 1 0.2 0.4 Xa275 444.5 m272.5 444.5 l269.5 438 l275 441 l275 444.5 lf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa266.5 434.5 m274.5 444.5 l275.5 444 l266.5 434.5 lf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa284 433.4268 m286.4053 433.4268 287.7676 435.1401 287.9707 438.1426 C287.7656 440.8706 286.1045 442.9604 284.1665 443.9302 c282.0776 444.9741 279.1338 445.5 276 445.5 c275.5 445.5 275.5 445.5283 275.5 442 c275.5 439.5 277.5 439 278.6113 437.1895 c278.9189 436.6885 279.2227 436.1113 279.5537 435.5273 C280.8325 434.3584 282.3828 433.4268 284 433.4268 cf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa275.9883 443.002 m275.9883 443 L275.9883 441.8223 276.5459 441.2974 277.3901 440.5029 c277.9038 440.019 278.4863 439.4707 278.9517 438.7124 C279.5918 437.5942 L280.7559 435.4897 281.7163 434 283.4883 434 c285.4868 434 286.5 435.5142 286.5 438.5 c286.5 440.894 285.5137 442.5024 283.3965 443.5615 c281.6284 444.4453 277.875 445.0762 276.0073 444.7637 C275.9985 444.0771 275.9883 443.002 Yf0.0078 0.9647 0.6078 0 1 0 0.2 Xa276 442.5 m276 441.3223 277.0576 440.2974 277.9019 439.5029 c278.4155 439.019 279.5918 437.5942 Y280.7559 435.4897 281.7163 434 283.4883 434 c285.4868 434 286.5 435.5142 286.5 438.5 c286.5 439.3232 286.3745 440.0469 286.1353 440.6938 C286.1348 440.6948 286.1338 440.6958 286.1333 440.6968 C285.8799 441.0713 285.5723 441.4121 285.2061 441.7207 c285.1763 441.7451 284.7905 442.0435 284.6118 442.1597 c284.3921 442.3013 284.1592 442.436 283.9082 442.5615 c282.1401 443.4453 276.4771 445.5654 276.519 443.4966 C276.5264 444.0508 276 442.5 Yf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa276 444.5 m276 449.9336 276 451.5 v276 454.1113 275.2217 456 270 456 c265.8223 456 264 454.6338 264 451.5 c264 447.8447 266.3223 444.5 270.5 444.5 c274.6777 444.5 276 444.5 yf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa270 456 m268.0488 456 266.6309 455.688 265.6528 455.0513 C265.2246 454.3833 265 453.5488 265 452.5 c265 448.8447 267.3223 445.5 271.5 445.5 c273.751 445.5 275.167 445.5 276 445.5 C276 447.1436 276 450.3535 276 451.5 c276 454.1113 275.2217 456 270 456 cf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa265 451.5 m265 448.6104 266.7212 445.5 270.5 445.5 C273.6611 445.5 275 445.5 V275 446.9692 275 451.5 Y275 453.2207 275 455 270 455 c265.8364 455 265 453.6606 265 451.5 cf0.0078 0.9647 0.6078 0 1 0 0.2 Xa275 451.5 m275 452.4609 274.998 453.4395 274.1274 454.1167 C273.4014 454.3564 272.4023 454.5 271 454.5 c266.8364 454.5 266 453.1606 266 451 c266 449.0298 266.8018 446.959 268.5088 445.8394 C269.0957 445.624 269.7563 445.5 270.5 445.5 C273.6611 445.5 275 445.5 V275 446.9692 275 451.5 Yf0.0078 0.8196 0.3137 0 1 0.2 0.4 Xa270.5 445.5 m271.3081 445.5 272.918 445.5 274 445.5 C270.5 449 L270.5 445.5 Lf276.519 443.4966 m276.3965 443.5 276 443.5 Y276 443.4106 276.0171 442.3237 276.0288 442.2358 C276.0288 442.2358 L283 438.5 L278.0386 444.3633 L277.1357 444.4058 276.5049 444.1885 276.519 443.4966 Cf0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa286 436 m280.9658 440.6196 276.6743 443.9771 V276.5791 443.8496 276.5151 443.6982 276.519 443.4966 C276.5225 443.7446 276.418 443.5654 276.3027 443.2983 C279.9868 440.8691 283.0811 438.4326 286 436 Cfu0.0078 0.1961 0.9373 0 1 0.8 0 Xa266.75 450.2495 m267.2998 450.2495 268.0684 449.9312 268.457 449.5425 c273.75 444.2495 l275 442.9995 275.75 443.2495 276.25 443.7495 c276.75 444.2495 277 444.9995 275.75 446.2495 c270.457 451.5425 l270.0684 451.9312 269.75 452.7495 269.75 453.2495 c269.75 453.7495 269.25 454.2495 267.75 454.2495 c266.25 454.2495 265.75 453.2505 265.75 452.25 c265.75 450.7495 266.2002 450.2495 266.75 450.2495 c266.75 450.2495 lf/BBAccumRotation (-3.141593) XT0.0275 0.3922 0.9412 0.0039 1 0.6 0 Xa274.7031 445.2026 m269.4102 450.4956 L269.0215 450.8843 268.2529 451.2026 267.7031 451.2026 c267.1533 451.2026 266.7031 451.7026 266.7031 453.2031 c266.7031 453.5122 266.7583 453.8174 266.8687 454.0967 C266.0508 453.7822 265.75 453.019 265.75 452.25 c265.75 450.7495 266.2002 450.2495 266.75 450.2495 c267.2998 450.2495 268.0684 449.9312 268.457 449.5425 C273.75 444.2495 L275 442.9995 275.75 443.2495 276.25 443.7495 c276.4155 443.915 276.5464 444.1113 276.6118 444.3408 C276.1484 444.2085 275.5396 444.3662 274.7031 445.2026 Cf0 R0.3725 0.9451 0.9098 0.3608 0.4 0 0 XA266.75 450.2495 m267.2998 450.2495 268.0684 449.9312 268.457 449.5425 c273.75 444.2495 l275 442.9995 275.75 443.2495 276.25 443.7495 c276.75 444.2495 277 444.9995 275.75 446.2495 c270.457 451.5425 l270.0684 451.9312 269.75 452.7495 269.75 453.2495 c269.75 453.7495 269.25 454.2495 267.75 454.2495 c266.25 454.2495 265.75 453.2505 265.75 452.25 c265.75 450.7495 266.2002 450.2495 266.75 450.2495 c266.75 450.2495 ls/BBAccumRotation (-3.141593) XTULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF