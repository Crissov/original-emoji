%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (423\223\372\226{\222\203.ai)%%CreationDate: (7/17/03) (9:45 AM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 247 469.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 10800 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD2FFF7DA87D7D527D27522752FD0F27522752527D527D7DFD58FF%7D7D5252FD29277D7DA8FD4BFF7D7D2752FD33275252A8FD41FF7D7DFD3F%27527DFD3AFF7D7DFD45275252FD34FF7D52FD1D2752527DFD0B527D527D%27272752FD1B27A8FD2EFF7DFD152752527D7DA8A8FD09FFFD0BA8FD09FF%7D7D5252FD1527527DFD2AFFFD132752277D7DFD0FFFFD0BA8FD10FFA852%52FD1327527DFD24FFA852FD0F2752527DFD05A8FD11FFFD0BA8FD0FFFFD%06A85252FD102752FD22FFFD102752FD0AA8FD0FFFFD0BA8FD10FFFD0AA8%52FD0F27527DFD1DFF7DFD0D2752527D7DFD0AA8FD11FFFD0BA8FD0FFFFD%0BA87D7D7DFD0E2752FD1AFF7DFD0E27FD057DFD0BA8FD0FFFFD0BA8FD10%FFFD0BA8FD067DFD0D27FD18FF7DFD0A275252FD087DFD0AA8FD11FFFD0B%A8FD0FFFFD0BA8FD097DFD0B27FD16FF52FD0A27FD0B7DFD0BA8FD0FFFFD%0BA8FD10FFFD0BA8FD0A7DFD0B277DFD13FF7DFD0A27FD0C7DFD0AA8FD11%FFFD0BA8FD0FFFFD0BA8FD0D7DFD09277DFD11FF7DFD082752FD0E7DFD0B%A8FD0FFFFD0BA8FD10FFFD0BA8FD0E7DFD09277DFD10FF52FD0727FD107D%FD0AA8FD11FFFD0BA8FD0FFFFD0BA8FD107D52FD0727FD0FFF52FD0727FD%117DFD0BA8FD0FFFFD0BA8FD10FFFD0BA8FD117D52FD0727FD0DFFA8FD07%27FD127DFD0AA8FD0DFFA8AEA8CF7D837C837C837C837C8383CFA8AEFD0C%FFFD0BA8FD137DFD06277DFD0CFFFD0727FD137DFD0BA8FFFFFFA8AE8383%5782FD185758CFA7CFA8AEFFFFFFFD0BA8FD137D52FD052752FD0CFFFD06%27FD147DFD09A883AE8282FD1F57A7FD06FFA8FFA7FFFD09A8FD147D52FD%0527FD0BFF7DFD0527FD157DFD05A8A77C7CFD2457A8FD09FF828282AD7C%FD05A8FD147D52FD052752FD0AFF52FD042752FD157DA8A88358FD275758%FD09FFFD088283A8A8FD157DFD05277DFD0AFF52FD0527FD147D7CFD2B57%A8FD08FF83FD0B8257FD147D52FD0527FD0AFFFD052752FD127D58FD2C57%82FD08FFA7FD0D82577CFD127DFD052752FD0AFF52FD0527FD0F7D7C58FD%2E57A7FD07FFA8FD0D825DFD0457FD107D52FD0527FD0AFFFD052752FD0E%7DFD3157FD07FFA8FD0F82FD05577CFD0E7DFD052752FD0AFF52FD052752%FD0B7D7CFD3157AEFD06FF83FD0F82FD085758FD0B7D52FD0627FD0AFF52%FD04275252FD0A7D7CFD315783FD06FFA7FD0F82FD0B57FD097D5252FD05%2752FD0AFF52FD05275252FD077D7CFD3357FD05FFCFFD1082FD0D57FD07%7D525252FD0627FD0AFF52FD0527525252FD057D7CFD3357A8FD04FFAEFD%1082FD0F57FD057DFD0452FD052752FD0AFF52FD0527FD06527D7DFD3357%7CFFFFFFAE83FD1082FD11577D7D7DFD0552FD052752FD0AFF52FD0427FD%08527CFD325758FFFFFFA7FD1182FD13577DFD0652FD052752FD0AFF52FD%0527FD0852FD3257FFFFAEFD1282FD125751FD0852FD052752FD0AFF52FD%0427FD0B5251FD2E57FF83FD1382FD115758FD0A52FD052752FD0AFF52FD%05277DFD0A522DFD2C57FD1582FD105751FD0C52FD0627FD0AFF52FD0427%527D7DFD0C525158FD23578257FD1782FD0F5758FD0B527D7D7DFD052752%FD0AFF52FD05277D7D7DFD0E5251FD2057FD188281FD0C575158FD0D52FD%047DFD0627FD0AFF52FD042752FD067DFD0E525158FD17578281FD198257%5DFD0A575158FD0F52FD057DFD052752FD0AFF52FD0527FD077DFD105251%522DFD10578257FD1B82FD0A572DFD1052FD087D52FD042752FD0AFF52FD%042752FD0A7DFD12525158FD07578281FD1D825782FD0557585158FD1352%FD097DFD052752FD0AFF52FD0527FD0A7DA87DFD1552517C587C58FD1B82%57825757515851FD1652FD0C7D52FD042752FD0AFF52FD042752FD0B7DA8%A8A87D7DFD195258527C587C587C587C587C587C587C587C587C587C527C%FD1B527DFD04A8FD0A7DFD052752FD0AFF52FD0527FD0A7DFD07A87DFD46%527D7DFD05A8FD0B7DFD0627FD0AFF52FD042752FD0B7DFD09A87DA8FD3D%527D7DFD0BA8FD0A7DFD052752FD0AFF52FD0527FD0A7DFD0BA8FFFFFFA8%7D7DFD35527D7DFD0DA8FD0B7DFD0627FD0AFF52FD042752FD0B7DFD0AA8%FD09FFA8A87D7DFD27527D7DA87DFD13A8FD0A7DFD052752FD0AFF52FD05%27FD0A7DFD0BA8FD0FFFA8A8A8FD047D527DFD11527D52FD047DA87DFD19%A8FD0B7D52FD042752FD0AFF52FD042752FD0B7DFD0AA8FD25FFFD26A851%2C2C5158FD057DFD052752FD0AFF52FD0527FD0A7DFD0BA8FD25FFFD25A8%52FD052CFD057D52FD042752FD0AFF52FD042752FD0B7DFD0AA8FD25FFFD%25A87CFD052CFD057DFD052752FD0AFF52FD0527FD0A7DFD0BA8FD25FFFD%25A82DFD052CFD057DFD0627FD0AFF52FD042752FD0B7DFD0AA8FD25FFFD%25A87CFD052CFD057DFD052752FD0AFF52FD0527FD067D512C5758FD0BA8%FD25FFFD25A851FD052CFD057DFD0627FD0AFF52FD042752FD057D572C2C%2C2D7DFD0AA8FD25FFFD25A87CFD052CFD057DFD052752FD0AFF52FD0527%FD057DFD052C7CFD0AA8FD25FFFD25A851FD052CFD057D52FD042752FD0A%FF52FD042752FD057DFD052C51FD0AA8FD25FFFD25A87CFD052CFD057DFD%052752FD0AFF52FD0527FD057DFD052C7CFD0AA8FD25FFFD25A851FD052C%FD057D52FD042752FD0AFF52FD042752FD057DFD052C51FD0AA8FD13FFCF%AEA7CFFD0EFFFD04A87D837DFD1EA87CFD052CFD057DFD052752FD0AFF52%FD0527582C2C2C7DFD052C58FD0AA8FD12FFFD0682A7FD0CFFA8A883FD05%577C7DFD1BA82DFD052C522C2C2C51FD0627FD0AFF52FD042752FD0A2C51%FD0AA8FD11FFFD0882A7FD0BFFA883FD075782FD1BA87CFD052C51FD042C%FD052752FD0AFF52FD0527FD0A2C7CFD0AA8FD10FFA7FD0982A8FD0AFFA7%FD095782FD0DA8A7587C577C7DFD07A851FD0A2CFD0627FD0AFF52FD0427%2DFD0A2C51FD0AA8FD10FF83FD0982ADFD0AFF7CFD0A57FD0CA883FD0657%7CFD06A87CFD0A2CFD052752FD0AFF52FD0527FD0A2C7CFD0AA8FD10FFFD%0B82FD0AFF7CFD0A57FD0BA882FD08577CFD05A851FD0A2C2DFD042752FD%0AFF52FD042752FD0A2C51FD0AA8FD10FFFD0A82ADFD0AFF58FD0A57FD0B%A8FD0A57FD05A87CFD0A2CFD052752FD0AFF52FD0527FD0A2C7CFD0AA8FD%10FFFD0B82FD0AFF7CFD0A57FD0AA87DFD0A5783FD04A851FD0A2C2DFD04%2752FD0AFF52FD042752FD0A2C51FD09A87CAEAEFD0EFFFD0A82ADFD0AFF%FD0B57FD0AA883FD0A577CFD04A87CFD0A2CFD052752FD0AFF52FD042704%FD0A2C58FD06A87D575757828282CFFD0CFFFD0B82FD0AFF7CFD0A57FD0A%A87CFD0A5782FD04A82DFD0A2CFD0627FD0AFF52FD042752FD0A2C51FD05%A883FD0457FD0482FD0CFFFD0A82ADFD0AFF58FD0A57FD0AA883FD0A577C%FD04A87CFD0A2CFD052752FD0AFF52FD0527FD0A2C7CFD05A8FD0557FD05%82FD0BFFFD0B82FD0AFF7CFD0A57FD0AA87CFD0A5783FD04A851FD0A2CFD%0627FD0AFF52FD04272DFD0A2C51FD05A8FD0557FD0582AEFD0AFFFD0A82%ADFD0AFF58FD0A57FD0AA883FD0A577CFD04A87CFD0A2CFD052752FD0AFF%52FD0527FD0A2C7CFD04A87CFD0557FD0582AEFD0AFFFD0B82FD0AFF7CFD%0A57FD0AA87CFD0A5783FD04A851FD0A2C2DFD042752FD0AFF52FD042752%FD0A2C51FD04A883FD0557FD0582A7FD0AFFFD0A82ADFD0AFF58FD0A57FD%0AA883FD0A577CFD04A87CFD0A2CFD052752FD0AFF52FD0527FD0A2C7CFD%04A87CFD0557FD0582AEFD0AFFFD0B82FD0AFF7CFD0A57FD0AA87CFD0B57%FD04A8FD0B2C2DFD042752FD0AFF52FD042752FD0A2C51FD04A883FD0557%FD0582A7FD0AFFFD0A82ADFD0AFFFD0B57FD0AA883FD0C577C835757FD0A%2CFD052752FD0AFF52FD042704FD0A2C58FD04A87CFD0557FD0582ADFD0A%FFFD0B82FD0AFF7CFD0A57FD0AA87CFD0F57FD0B2CFD0627FD0AFF7DFD05%27FD0A2C51FD04A883FD0557FD0582A7FD0AFFFD0A82ADFD0AFF58FD0A57%FD0AA883FD1057FD0A2CFD05277DFD0AFF7DFD05272DFD092C7CFD04A87C%FD0557FD0582AEFD0AFFFD0B82FD0AFF7CFD0A57FD04A8587C58A8A8A87C%FD0F57FD0A2C26FD05277DFD0BFFFD052726FD092C51FD04A882FD0557FD%0582A7FD0AFFFD0A82ADFD0AFF58FD0A57A8A8A8FD0557A8A883FD1057FD%092C2DFD0527FD0CFF52FD052704FD082C5757A77D7CFD0657FD0582AEFD%0AFFFD0B82FD0AFF7CFD0A57A8A87CFD0557A8A87CFD0F57FD0A2CFD0527%52FD0CFFA8FD0627FD082CFD0B57FD0582A7FFFFFF828282CFFFFFFFFD0A%82ADFD0AFF58FD0A57A8A883FD0557A8A883FD1057FD082CFD0627A8FD0D%FF52FD0627FD072CFD0B57FD0582AEFFFFFD0582FFFFFFFD0B82FD0AFF7C%FD0A57A8A87CFD0557A8A87CFD0F57FD082C26FD0627FD0EFFA8FD06272D%FD062CFD0B57FD0582A7FFFFFD0582A7FFFFFD0A82ADFD0AFFFD0B57A8A8%83FD0557A8A883FD1057FD062C26FD0627A8FD0FFF52FD0727FD052CFD0B%57FD0582ADFFFFFD0582ADFFFFFD0B82FD0AFF7CFD0A57A8A87CFD05577D%A858FD0F57FD062C26FD06277DFD11FFFD07272DFD042CFD0B57FD0582A7%FFFFFD0582A7FFFFFD0A82ADFD0AFF58FD0A57A8A883FD05577C7CFD1157%FD042CFD072752FD12FFA8FD08272C2C2CFD0B57FD0582AEFFFFFD0582AE%FFFFFD0B82FD0AFF7CFD0A57A8A87CFD1757FD042C26FD0727A8FD13FFA8%FD08272C2CFD0B57FD0582A7FFFFFD0582A7FFFFFD0A82ADFD0AFF58FD0A%57A8A883FD18572C2CFD08277DFD15FF7DFD082704FD0B57FD0582AEFFFF%FD0582AEFFFFFD0B82FD0AFF7CFD0A57A8A87CFD17572C2C04FD07277DFD%17FFA8FD08272DFD0A57FD0582A7FFAEFD0582A7FFFFFD0A82ADFD0AFFFD%0B57A8A883FD175751FD08277DFD19FFA8FD0927FD0957FD058283A8A7FD%0582AEFFFFFD0B82FD09FFAE7CFD0B57A7FD16572D2DFD08277DFD19FFC9%9975FD092751FD0757FD0D82A7FFFFFD0B82A7FD08FFAEFD22572DFD0927%6FC2A7FD16FFA0FD0599FD0A272CFD0557FD0D82A7FFCFFD0C82A8FD07FF%827BFD1F575126FD09276FFD0499A0A8FD11FFC9FD08994BFD0A27FD0457%FD0E82AEFD0E82A7FD04FFAE8282FD1E57512DFD092751FD0899A1FD0EFF%A1FD0B994BFD0B272D57FD1F82A7FD05827BFD1C57FD0B2775FD0B99C9FD%0BFFA0FD0D997551FD0B277CFD2482FD1A572D2DFD0B27FD0E99C2CAFD07%FFCAFD119975FD0C2751FD22827CFD16572C51FD0C274BFD1199A8FD05FF%CAFD14994BFD0C275258FD1F82FD1657FD0D2775FD1499C9FFFFFFCFFD16%996F51FD0D275151FD1C8258FD115751FD0E274BFD1799CAFFFFFD18996E%6F4BFD0E275257FD1982FD0F5751FD0F274B6E6E93FD1699C2FFA1FD1599%FD066E4A4B20FD10275857FD1482FD09572C572D2D26FD0F2720FD066EFD%1699C9A0FD15996FFD076E6F4A4BFD11272D2D58518258FD0D82FD045751%512D51FD13276FFD096EFD2A9992FD0D6E26FD1A272D2751272D2751FD19%274B4AFD0C6EFD2999FD106E6F4BFD34274B4AFD106EFD2799FD156EF8FD%2F2744FD146EFD2699FD156EFD2A2752FD0527FD156EFD139944FD1199FD%166EFD0527527D7D5252FD1B27FD04527D52FD0527FD156EFD12996E4493%FD1199FD156E52FD042752FD097DFD0452275227522752275227FD04527D%52FD087D52FD04274BFD166EFD11994444446EFD0F99FD176EFD042752FD%247DFD0527FD166EFD1199FD04446FFD1099FD176E52272752FD247D5227%272775FD166EFD10996EFD05446EFD0F99FD176E4A522752FD247D522727%FD186EFD0F99FD0444764444446F6FFD0D9992FD186E7652FD247D524BFD%186EFD0F99FD04446FA1FD05446EFD0D99FD1A6E75FD217D7676FD196EFD%0D996E6FFD0544A8FF6FFD0644FD0D9992FD1A6E7576FD1C7D7C6FFD1A6E%FD0D996E6FFD054476FFFFFF4BFD07446EFD0B99FD1D6E7575FD157D7676%FD1D6EFD0B99936FFD07446FCAFD04FF4BFD08446F93FD0A9992FD1F6E75%7576767D767D767D767D767675766F6FFD1F6EFD0B996EFD08446FCAFD06%FF6FFD0A446FFD0A99FD4D6EFD09996E6EFD094476A8FD08FF7D6FFD0B44%FD0A9993FD476EFD09996E6FFD0B44A1FD0BFFA876FD0D446F6EFD0799FD%456EFD07996E6EFD0C446FCAFD0EFFCA6FFD0E446F6EFD0799FD3D6E936E%FD05996F6FFD0F446FA1FD12FFA176FD11446F6E996E999999FD396E9999%996E6FFD12444BA8FD17FF766FFD13446F6E6F6F999999FD2D6E996E9999%996E6FFD14444B9AA8FD1BFFA16FFD18446E446F6E6FFD236E996E6F6E6E%FD194476A1FD21FFA8766FFD1F446E446F446F446F6E6E6E6F6E6E6E6F6E%6E6E6F446F446F446EFD1F449AA1FD27FFCA7676FD50446FA1A8FD2EFFA8%A8766FFD46444B76A1FD38FFA1A1766FFD3C444B7676A8FD41FFCACAA1A1%7676FD2D446F4B7676A1A1FD50FFA1A87D7676764B6F4B6FFD14444B6F4B%6F6F7676A1A1A8A8FD2AFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0 0 0 0 1 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 5) Pc0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 47) Pc0.1608 0.5529 0.7216 0.0392 0.8 0.4 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 63) Pc0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 86) Pc0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 91) Pc0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 106) Pc0.5882 0.1529 0.8627 0.0314 0.4 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 129) Pc0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 134) Pc0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 148) Pc0.7765 0.2706 0.9922 0.1216 0.2 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 172) Pc0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 177) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 O0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 436.7813 m288 436.2979 288 435.7188 v288 433.665 282.6274 432 276 432 c269.3726 432 264 433.665 264 435.7188 c264 435.834 264 436.7813 y269.7432 439.4375 276 439.4375 v282.291 439.4375 288 436.7813 yf0.1608 0.5529 0.7216 0.0392 0.8 0.4 0.2 Xa288 436.7813 m288 434.7275 282.6274 433.0625 276 433.0625 c269.3726 433.0625 264 434.7275 264 436.7813 c264 438.835 269.3726 440.5 276 440.5 c282.6274 440.5 288 438.835 288 436.7813 cf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa284.5 436 m284.5 434.3433 280.6943 433 276 433 c271.3057 433 267.5 434.3433 267.5 436 c267.5 437.6567 271.3057 439 276 439 c280.6943 439 284.5 437.6567 284.5 436 cf0 Ap0 0 0 0 1 1 1 Xa276 455.5 m270.2012 455.5 265.5 453.709 265.5 451.5 C265.5 442 L265.5 439.791 270.2012 437 276 437 c281.7988 437 286.5 439.791 286.5 442 C286.5 451.5 L286.5 453.709 281.7988 455.5 276 455.5 cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa277 447.519 m277 436.5352 L279.5166 436.6987 281.7744 437.4614 283.457 438.4419 C283.7197 438.7378 283.916 438.9429 284 438.9922 C284 448.9131 L282.2769 448.1401 279.8003 447.6201 277 447.519 Cf1 Ap0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa271.5 438 m271.5 436.5 l271.5 435.3955 273.5146 434.5 276 434.5 c278.4854 434.5 280.5 435.3955 280.5 436.5 c280.5 438 lF0 Ap0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa271.5 438 m271.5 436.5 L271.5 436.0278 271.8838 435.5996 272.5 435.2573 C272.5 438 L271.5 438 Lf279.5 435.2573 m280.1162 435.5996 280.5 436.0278 280.5 436.5 C280.5 438 L279.5 438 L279.5 435.2573 Lf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa268 438.9922 m268.5854 438.6465 269.2573 438.3281 270 438.0508 C270 448.2202 L269.2573 448.4175 268.5854 448.6504 268 448.9131 C268 438.9922 Lf0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa284 448.9131 m284 438.9922 L285.5566 439.9106 286.5 441.0127 286.5 442 C286.5 451.5 L286.5 450.5127 285.5566 449.6104 284 448.9131 Cf265.5 451.5 m265.5 442 L265.5 441.0127 266.4434 439.9106 268 438.9922 C268 448.9131 L266.4434 449.6104 265.5 450.5127 265.5 451.5 Cf266 452.7188 m266 450.2813 L266.708 449.4375 268.1328 448.7168 270 448.2202 C270 454.7798 L268.1328 454.2832 266.708 453.5625 266 452.7188 Cf286 450.2813 m286 452.7188 L285.292 453.5625 283.8672 454.2832 282 454.7798 C282 448.2202 L283.8672 448.7168 285.292 449.4375 286 450.2813 Cf0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa270 454.7798 m270 448.2202 L270.6216 448.0547 271.29 447.9141 272 447.8022 C272 455.1978 L271.29 455.0864 270.6216 454.9453 270 454.7798 Cf280 455.1978 m280 447.8022 L280.71 447.9141 281.3784 448.0547 282 448.2202 C282 454.7798 L281.3784 454.9453 280.71 455.0864 280 455.1978 Cf277 455.481 m276.6704 455.4927 276.3374 455.5 276 455.5 c275.6626 455.5 275.3296 455.4927 275 455.481 C275 451.519 L277 451.519 L277 455.481 Lf0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa276 438.5 m275.4478 438.5 275 438.9478 275 439.5 C275 440 L275 444 L275 444.5522 274.5522 445 274 445 c273.4478 445 273 444.5522 273 444 C273 439.5488 273 439 v273 438.4512 272.5 438.5278 272.5 439 c272.5 439.4722 272.5 440.5 Y272.5 440.7764 272.2764 441 272 441 c271.7236 441 271.5 440.7764 271.5 440.5 C271.5 440.0073 271.5 439.5 v271.5 438.9927 271 439 271 439.5 c271 440 271 442.5 Y271 443.0522 270.5522 443.5 270 443.5 C270 437.8154 L271.2329 437.2295 272.7158 436.7808 274.353 436.5972 c274.4248 436.5894 274.4971 436.5815 274.5693 436.5747 c275.0366 436.5293 275.5127 436.5 276 436.5 c276.3403 436.5 276.6694 436.5278 277 436.5518 C277 439.5 L277 438.9478 276.5522 438.5 276 438.5 cf0.7765 0.2706 0.9922 0.1216 0.2 0.4 0 Xa267.5 446 m267.2236 446 267 445.7764 267 445.5 C267 444.4229 L267 444.6992 266.7764 444.9229 266.5 444.9229 c266.2236 444.9229 266 444.6992 266 444.4229 C266 440.6357 L266.2476 440.2715 266.5894 439.9038 267 439.5435 C267 440.126 L267.2461 439.7656 267.5908 439.4097 268 439.0674 C268 441.5 L268 445.5 L268 445.7764 267.7764 446 267.5 446 cf0.5882 0.1529 0.8627 0.0314 0.4 0.6 0.2 Xa269 442.5 m269 441.5 L269 441.2236 268.7764 441 268.5 441 c268.2236 441 268 441.2236 268 441.5 C268 439.0674 L268.5439 438.6118 269.2188 438.1865 270 437.8154 C270 443.5 L269.4478 443.5 269 443.0522 269 442.5 Cf277.6465 436.5967 m280.3193 436.8965 282.5957 437.8916 284 439.0649 C284 442.5 L284 442.2236 283.7764 442 283.5 442 c283.2236 442 283 442.2236 283 442.5 C283 443.5 L283 444.0522 282.5522 444.5 282 444.5 c281.4478 444.5 281 444.0522 281 443.5 C281 441.4863 281 440.5 v281 440 280.5 440 280.5 440.5 c280.5 441 280.5 441 Y280.5 441.2764 280.2764 441.5 280 441.5 c279.7236 441.5 279.5 441.2764 279.5 441 C279.5 440.0073 279.5 439.5 v279.5 438.9927 279 439 279 439.5 c279 440 279 444 Y279 444.5522 278.5522 445 278 445 c277.4478 445 277 444.5522 277 444 C277 440 L277 439.5 L277 436.5518 L277.1416 436.5625 277.2886 436.5605 277.4287 436.5742 c277.5015 436.5811 277.5737 436.5894 277.6465 436.5967 cf0.7765 0.2706 0.9922 0.1216 0.2 0.4 0 Xa284 439.0649 m284.4087 439.4063 284.7534 439.7607 285 440.1201 C285 439.5435 L285.4106 439.9038 285.7524 440.2715 286 440.6357 C286 444.4229 L286 444.6992 285.7764 444.9229 285.5 444.9229 c285.2236 444.9229 285 444.6992 285 444.4229 C285 446.5 L285 446.7764 284.7764 447 284.5 447 c284.2236 447 284 446.7764 284 446.5 C284 442.5 L284 439.0649 Lf0.5882 0.1529 0.8627 0.0314 0.4 0.6 0.2 Xa276 447.5 m279.6895 447.5 282.9287 448.2266 284.8008 449.3228 C284.3887 451.1045 280.6084 452.5 276 452.5 c271.3916 452.5 267.6113 451.1045 267.1992 449.3228 C269.0713 448.2266 272.3105 447.5 276 447.5 cf0 0 0 0 1 1 1 Xa281.1519 451.8403 m280.3438 452.0708 279.437 452.2505 278.4561 452.3623 C278.2607 451.7788 277.3857 449.4673 275.5 448.5 C278.7407 449.3911 281.1519 451.8403 Vf0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa280 449 m281.3223 449.8813 281.9512 450.7622 282.2427 451.4727 C281.6499 451.7075 280.9746 451.9087 280.2329 452.0698 C279.8921 451.5776 279.1987 450.7446 278 450 c276.167 448.8613 271.4375 448 Y275.9199 447.502 L275.9282 447.502 275.936 447.5015 275.9443 447.5015 C276.0156 447.5156 278.5459 448.0303 280 449 cf1 Ap0 R0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 XA286.5 451.5 m286.5 449.291 281.7988 447.5 276 447.5 c270.2012 447.5 265.5 449.291 265.5 451.5 c265.5 453.709 270.2012 455.5 276 455.5 c281.7988 455.5 286.5 453.709 286.5 451.5 cs0 Ap0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 XA276 455.5 m270.2012 455.5 265.5 453.709 265.5 451.5 C265.5 442 L265.5 439.791 270.2012 436.5 276 436.5 c281.7988 436.5 286.5 439.791 286.5 442 C286.5 451.5 L286.5 453.709 281.7988 455.5 276 455.5 csLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF