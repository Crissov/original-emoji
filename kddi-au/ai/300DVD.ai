%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (300_CD/DVD.ai)%%CreationDate: (7/7/03) (5:59 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 243 471.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 10162 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA87E53532928FD0B0153297E53A9A8FD64FF7E7E28FD1A01%2953A8FD5DFF7D53FD2201287EA9FD55FFA95329FD2801287EA8FD50FF7E%53FD2E0129A8FD4BFFA97EFD1301292829FD0853282928FD12012853FD48%FF5329FD0F0153537EA8FFFD10A87D7D2829FD0F017EFD43FFA87EFD0E01%287E7EFD1BA85353FD0E0153FD40FF7E29FD0B012953FD0AA8FFFD18A87E%7D28FD0C01A8FD3DFF28FD0B01297EFD28A87D53FD0B0129A8FD39FF7EFD%0B017DA7FD2DA85328FD0A0153FD36FFA829FD0901287CCECECEFD2CA87D%7D7D53FD0A0128A9FD33FF7E29FD0801287DFD05CECFFD1BA8FFFD0EA8FD%067D5328FD0901A8FD31FF53FD090152FD07CEA7FD2AA8FD087D53FD0901%53FD2FFF28FD080153A7FD09CEA7FD1AA8FFFD0EA8FD0A7DFD090129FD2C%FFA9FD09017DFD0CCEFD28A8FD0C7D52FD080128A8FD2AFFFD080128FD0E%CECFFD27A8FD0E7D29FD070128A8FD27FFA8FD080152FD0FCEA7FD27A8FD%0F7D53FD08017EFD25FF7EFD0701297EFFFD10CEFD26A8FD107DFFA8FD08%017EFD23FFA8FD070128A8FFFFCFFD0FCEFD25A8FD107DA8FFFFA8FD0801%7EFD21FFA9FD070129FD05FFCFFD0FCEFD0CA8FFFD18A8FD0E7DA8FD05FF%28FD060129A8FD1FFFA9FD070129A9FD06FFCFFD0ECEA7FD23A8FD0F7DFD%07FF28FD0701A8FD1EFFFD070129A9FD07FFCFFD0ECECFFD0BA8FFFD16A8%FD0F7DFD09FF28FD060129FD1DFF28FD060129A8FD09FFCFFD0ECEFD22A8%FD0E7DA8FD0AFF28FD060129FD1BFF53FD060129FD0CFFCFFD0DCEA7FD21%A8FD0D7DA8FD0CFF28FD060153FD19FF7DFD060128A8FD0DFFFD0ECEFD20%A8FD0D7DA8FD0EFFFD07017EFD17FFA928FD050129A8FD0FFFFD0DCECFFD%1FA8FD0D7DFD0FFFA9FD0701FD17FF29FD06017EFD11FFFD0CCEA7FD1EA8%FD0D7DA8FD10FF7EFD060128FD15FF7EFD060129FD12FFCFFD0CCEFD13A8%FFFD09A8FFFD0C7DA8FD11FFCB78FD060153FD13FFA9FD07017979A9FD11%FFCFFD0BCECFFD1CA8FD0D7DFD11FFCBBFBF29FD0601A8FD12FF29FD0601%FD0479A3FD11FFFD0CCEFD12A8FFFD09A8FD0C7DFD11FFC5BFBFBF9623FD%050129FD11FF7DFD06014EFD05797FA9FD0FFFCFFD0BCEA7FD1BA8FD0B7D%FD11FFFD06BF72FD06017EFD10FF29FD050129FD0879A9FD0FFFCFFD0ACE%CFFD11A8FFFD08A8FD0B7DFD11FFFD08BF23FD0601FD0FFF7EFD06014EFD%09797FFD0FFFFD0BCEFD19A8FD0B7DA8FD0FFFCBFD0ABFFD060153FD0EFF%FD060129FD0C79FD0FFFFD0BCEFD19A8FD097DA8FD0FFFC5FD0BBF72FD05%0128A9FD0CFF53FD0601FD0E79CBFD0EFFFD0ACEFD18A8FD0A7DA8FD0DFF%CBFD0EBF22FD050153FD0CFF29FD050154FD0F79A9FD0EFFFD09CECFFD07%A8FFFD0FA8FD097DA8FD0DFFCBFD0FBF72FD0601FD0BFF7EFD050123FD11%79A3A9FD0CFFCFFD09CEFD0EA8FFFD07A8FD097DA8FD0DFFFD12BFFD0601%53FD0AFFFD06014EFD12797FA9FD0CFFCFFD08CEFD07A8FFFD0EA8FD097D%FD0DFFFD13BF78FD050129FD09FF7EFD0601FD1579A3FD0BFFCFFD08CECF%FD14A8FD097DFD0CFFCBFD15BF22FD05017EFD08FF53FD050154FD1679A3%FD0BFFCFFD08CEA8A8A87E7E545BFD07305B5AFD04A8FD087DFD0CFFC5FD%16BF72FD050129FD07FFA9FD0601FD1979CBFD0AFFCFFD07CE7D5AFD1030%5484FD077DA8FD0AFFCBC5FD17BF9DFD0601A8FD06FF7EFD05014DBFBFA3%FD1779CBFD0AFFFD05CEA854FD14305A59FD047DA8FD0AFFCBFD17BF9D79%794EFD05017EFD06FF29FD05019CFD04BF9D9DFD1579A3FD0AFFCECEA75A%FD18302F7D7D7DA8FD09FFC5FD15BF9D9DFD04794EFD050128FD06FFFD05%0129FD07BFC59D9DFD1379A3FD0AFFA75AFD1B307EFD0AFFFD15BFC5FD08%79FD0601A8FD04FF53FD05014DFD0ABFC5FD1479A9FD07FF5AFD0C305A5A%7F5A7F545AFD0B307FFD07FFCBFD14BFFD0B794EFD05017EFD04FF29FD05%01FD0EBF9DFD1279A3FD05FF5AFD09305A85FD0AA97F5BFD09307FFD05FF%CBFD12BF9D9DFD0C794EFD050129FD04FFFD050122FD10BF97FD11797FFF%FFFF5AFD08305A7EFD0FA954FD08307FFFFFCBC5FD10BF9D9DFD1079FD06%01FFFFFFA8FD05014DFD12BFC5FD1179FF7EFD073054FD14A95BFD073085%CBC5FD10BF9DFD12794EFD0501A9FFFF7EFD050172FD14BF9DA3FD0E7954%FD073054FD16A95BFD07309DFD0EBF9DFD15794EFD050153FFFF28FD0501%FD18BF9D9DFD0B79FD07307FFD18A97FFD0730FD0BBF9DA3FD1879FD0501%53FFFFFD0601FD1BBF73FD087954FD06305AFD1AA97FFD063054FD07BF9D%9DFD1B7923FD0501FFFFFD05014EFD1DBFC5FD0679FD06305AFD1CA97FFD%06309DFD05BF9DFD1D7929FD0501A97EFD05014DFD1FBF9D9D7979FD0730%FD1EA95AFD053054BFBF9D9DFD1F794EFD0501A87EFD05019CFD21BFC579%FD0630FD1FA985FD0630A3FD22794EFD05015353FD050196FD22BF79FD05%305AFD20A954FD0630FD2379FD05015353FD0501CBA2CBBFC5FD1EBFFD06%3085FD21A9FD0630FD2179A379FD05012928FD040129FD08A8A2CB9CC5FD%16BF9CFD053054FD22A95BFD0530FD1A79A3FD0879FD05012928FD040128%FD10A8CBA2C5FD0FBF79FD053085FD22A97EFD053054FD1079A379A3FD0F%7929FD0A0129FD16A8A2A8A2C59CFD07BF54FD05307EFD0FA97E54547FFD%10A9FD053054FD06797379797F797FFD167923FD0A0153FD1EA8CBA2CBC5%54FD0530FD0FA929FD04022AFD0FA95BFD05307979A3797FFD1D794EFD0A%0153FD22A8FD05305AFD0EA929FD06022AFD0EA954FD0530FD227929FD0A%0153FD22A8FD05305AFD0DA97EFD0802FD0EA97FFD0530FD22794EFD0A01%53FD22A8FD05307FFD0DA954FD080229FD0DA95AFD0530FD227929FD0A01%53FD22A8FD05305AFD0DA954FD080254FD0DA97FFD0530FD22794EFD0A01%53FD22A8FD05307FFD0DA97FFD08027EFD0DA95AFD0530FD227929FD0A01%53FD22A8FD053054FD0EA92AFD060229FD0EA95BFD0530FD22794EFD0A01%53FD1CA884AF848B848BFD053054FD0EA97E29FD0502FD0FA9FD0630FD04%7FFD1E7923FD0A0128FD14A8AFA8AF84AFFD098B5BFD0530FD11A954547E%FD10A9FD053036FD078B85A97FA37FFD167929FD0A0129FD0CA884AF84AF%84AFFD108B5AFD05307EFD22A97FFD053061FD0E8B85857F7F797FFD0E79%FD060153FD040128FD06A8AF84AF8BAFFD188BFD05305BFD22A95AFD0530%61FD168B857FA97FA3FD077929FD04012828FD0501848B84FD208BFD0630%FD21A97EFD0630FD1E8B85857F7F7FFD0501297EFD0501FD238B5AFD0530%5AFD20A97FFD05305BFD238BFD05015353FD05015AFD218B8585FD06307E%FD1FA9FD06305AFD228B60FD05017EA8FD05015AFD1F8BAF7F797955FD05%305BFD1EA954FD0630A9A9AFFD208B35FD0501A8A8FD050129FD1D8B7FFD%05794EFD06305BFD1CA95AFD063085FD04A985AFFD1D8B2FFD0501FFFFFD%050129FD1A8B85A9FD0879FD073085FD1AA97EFD06305BFD08A985AFFD1A%8B06FD040129FFFF29FD0501FD188BA9FD0C79FD07307FFD18A97EFD0730%7FFD0AA9AF85FD178B85FD050128FFFF53FD05015AFD158B7FFD0F79FD07%307FFD16A95AFD07307EFD0EA9AFFD158B60FD05017EFFFFA8FD05012FFD%128B857FFD1079A97FFD07305A7FFD13A9FD08305AFFFD10A985AFFD128B%2FFD05017EFFFFFFFD0601FD108BAFFD1179A3FFFFFF7FFD08305AFD0FA9%857FFD08305AFFFFFFFD11A9AF85AFFD0F8B29FD0501FD04FF28FD050160%FD0D8B7FFD1279A9FD05FF5AFD09305B7EFD09A97F8554FD09305AFD05FF%FD13A9AFFD0D8B85FD050129FD04FF7EFD05015AFD0A8B857FFD1379CBFD%07FF85FD0B305A547F5A7F5A5BFD0C307EFD08FFFD14A9AFFD0A8B5AFD05%017DFD04FFA8FD050106FD078B857FFD1579FD09FFA87EFD1C305AFD0AFF%FD15A985FD088B29FD0501A9FD05FF28FD050160FD048BAF7FFD1579A3FD%0AFFA8A8A95AFD18305B85A9A9FD0BFFFD15A9AFFD068BFD050129FD06FF%7EFD05012F8B8B7FFD1779A9FD0BFFFD04A87E5AFD153085FD05A9FD0BFF%FD16A985AF8B8B29FD050153FD06FFA8FD06017FFD1779A3A9FD0BFFFD07%A8A3FD11305B5BFD08A9FD0BFFFD19A906FD0501FD08FF28FD050129FD16%79A3A9FD0BFFFD08A8FD047954302AFD083061608B8B8BFD09A9FD0BFFFD%17A97EFD050153FD08FFA9FD050129FD1579CBFD0CFFFD08A8A2FD0679A3%A3A37FA3A3A385FD068BAFFD08A9FD0CFFA9FFFD14A9FD06017EFD09FF29%FD05014EFD1379CBFD0CFFFD09A8A3FD0779FD06A3A9FD068B85FD09A9FD%0CFFFD14A953FD0601FD0AFF53FD0601FD11797FFD0DFFFD0AA8FD0779FD%07A3A9FD078BFD09A9FD0FFFFD11A929FD05017EFD0BFFFD060129FD0F79%A3FD0DFFFD0AA878FD0779FD07A3A9FD078BAFFD09A9FD0FFFFD0FA97EFD%0601A8FD0BFF7EFD050129FD0D79A3A9FD0FFFFD09A8FD0879FD08A3FD08%8BFD0AA9FD0FFFFD0EA9FD060153FD0CFFA8FD06014EFD0B79A3A9FD0EFF%FD0AA8A3FD0879FD08A3FD088B85FD0AA9FD0FFFFD0CA953FD0601FD0EFF%53FD0601FD0A79A9FD10FFFD0AA8FD0979FD08A3AFFD078BAFFD0BA9FD0F%FFFD0AA97FFD06017EFD0FFFFD0701FD0879A9FD10FFFD0AA87EFD0979FD%08A385FD088BFD0CA9FD0FFFFD09A929FD050128A8FD0FFFA8FD06014EFD%0679FD11FFFD0BA8A3FD0979FD08A3AFFD098BFD0AA9FD13FFFD05A97FFD%06017EFD11FF29FD06014E7979797FFD11FFFD0CA8FD0979FD09A385FD09%8BFD0CA9FD11FFFD05A9FD060128FD12FFA8FD060129797FA9FD11FFFD0C%A87EFD0979FD09A3A9FD098BAFFD0BA9FD13FFA9A929FD0601FD14FF53FD%060129A9FD11FFFD0DA8FD0A79FD0AA3FD098B85FD0CA9FD13FF29FD0601%53FD15FF28FD0601A9FD11FFFD0CA8A9FD0A79FD0AA3FD0A8BFD0DA9FD11%FF7EFD060129FD17FFFD0701A9FD0FFFFD0DA878FD0A79FD0AA3FD0A8BAF%FD0DA9FD0FFFA8FD0701A8FD17FF7EFD0701FD0FFFFD0DA8FD0A79FD0BA3%85FD0A8BAFFD0DA9FD0DFFA929FD06017EFD19FF53FD0701FD0DFFFD0DA8%7FFD0B79FD0AA3FD0B8B85FD0EA9FD0BFFA829FD060129FD1BFF29FD0601%28FD0BFFFD0EA8FD0B79FD0BA385FD0A8BAFFD0EA9FD0BFF29FD060128FD%1CFFA928FD060128FD09FFFD0EA87EFD0C79FD0AA3A9FD0B8BAFFD0FA9FD%07FFA829FD0701FD1EFFA828FD060128FD07FFFD0FA8A3FD0B79A9FD0BA3%FD0C8BFD0FA9FD07FF29FD0701A9FD1FFFA8FD070128FD05FFFD10A8FD0C%79FD0CA3FD0C8B85FD0FA9FD04FFA829FD0701A9FD21FFA8FD0801FFFFFF%FD10A87EFD0C79FD0CA3FD0C8BAFFD0FA9FFFFFFA829FD0701A9FD23FF7D%FD0801A8FFFD10A8FD0D79FD0CA385FD0C8BFD10A9FF7EFD08017EFD25FF%7E29FD07017EFD0FA8A9FD0D79FD0CA3AFFD0C8B85FD0FA953FD0801A9FD%27FFA8FD0801297DFD0DA878FD0C79FD0DA385FD0D8BFD0EA928FD0801A8%FD29FFA829FD0701287DFD0BA8A2FD0D797FFD0CA3A9FD0D8BAFFD0BA97F%FD080128A9FD2BFFA929FD080128FD0AA87FFD0D79FD0DA37FFD0D8B85FD%09A97E29FD0901FD2FFF53FD090153FD07A8A9FD0E79FD0DA3A9FD0E8BFD%08A95329FD080153FD31FF7EFD09012853FD05A87EFD0E79FD0EA3FD0E8B%AFFD05A97EFD0A017DFD34FF28FD0A017EA8A8A8A3FD0E79FD0EA3FD0F8B%A9A9A95429FD090129A8FD36FF53FD0A012853A2FD0F79FD0EA3FD0F8B5A%7EFD0B017EFD39FFA929FD0B01294EFD0C79FD0FA385FD0C8B852F06FD0A%0129FD3DFF7EFD0D014E4EFD0A79FD0EA3A9FD0A8B2F29FD0B01287EFD40%FF5328FD0D014E4EFD0679FD0FA385FD068B602F29FD0D017EFD43FFA97E%FD0F0123234E4E79FD0FA3A960602F2FFD100153FD48FF5329FD12012229%29544D544D544D544D4D2229FD13017EFD4CFF7E29FD2E01537EFD50FFA8%7E28FD2801297DFD56FFA87E28FD22012953FD5DFFA95329FD190129297E%7EFD64FFA8A853532829FD0C012829537E7EA9FD33FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0 0 0 0 1 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 5) Pc0.0314 0.0118 0.3961 0 1 1 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 7) Pc0.0078 0.6196 0 0 1 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 23) Pc0.1882 0.1451 0 0 0.8 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 46) Pc0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 47) Pc0.1804 0.3647 0 0 0.8 0.6 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 53) Pc0.3843 0 0.0353 0 0.6 1 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 77) Pc0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 91) Pc0.4 0.549 0 0 0.6 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 95) Pc0.8431 0.4353 0 0 0.2 0.4 0.8 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 168) Pc0.9647 0.9451 0 0 0 0 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 217) Pc0.9725 0.9569 0.1569 0.0471 0 0 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 218) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0 0 0 0 1 1 1 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR276 444 m268.9995 453.123 L268.2056 452.5137 267.4985 451.7939 266.8843 450.9951 C276 444 Lf/BBAccumRotation (-0.130900) XT0.4 0.549 0 0 0.6 0.4 1 Xa265.3857 448.3965 m276 444 L266.8843 450.9951 L266.2788 450.208 265.7749 449.3369 265.3857 448.3965 Cf/BBAccumRotation (-0.130900) XT0.0078 0.6196 0 0 1 0.4 1 Xa264.5986 445.501 m276 444 L265.3857 448.3965 L265.0098 447.4883 264.7329 446.5215 264.5986 445.501 Cf/BBAccumRotation (-0.130900) XT0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa264.6094 442.5 m276 444 L264.5986 445.501 L264.4639 444.4795 264.4814 443.4746 264.6094 442.5 Cf/BBAccumRotation (-0.130900) XT0 0 0 0 1 1 1 Xa276 444 m285.124 451 L284.5142 451.7939 283.7949 452.501 282.9961 453.1152 C276 444 Lf/BBAccumRotation (-1.701696) XT0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa280.3979 454.6143 m276 444 L282.9961 453.1152 L282.2085 453.7207 281.3374 454.2246 280.3979 454.6143 Cf/BBAccumRotation (-1.701696) XT0.0314 0.0118 0.3961 0 1 1 0.6 Xa271.603 454.6162 m270.6724 454.2295 269.7939 453.7324 268.9995 453.123 C276 444 L271.603 454.6162 Lf/BBAccumRotation (-1.701696) XT0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa271.603 454.6162 m276 444 L274.501 455.3906 L273.4927 455.2578 272.5205 454.9971 271.603 454.6162 Cf/BBAccumRotation (-1.701696) XT277.501 455.4014 m276 444 L280.3979 454.6143 L279.4888 454.9902 278.5225 455.2666 277.501 455.4014 Cf/BBAccumRotation (-1.701696) XT274.501 455.3906 m276 444 L277.501 455.4014 L276.48 455.5352 275.4756 455.5186 274.501 455.3906 Cf/BBAccumRotation (-1.701696) XT0 0 0 0 1 1 1 Xa276 444 m283.001 434.876 L283.7949 435.4854 284.502 436.2051 285.1162 437.0039 C276 444 Lf/BBAccumRotation (-3.272491) XT0.1882 0.1451 0 0 0.8 0.8 1 Xa286.6147 439.6016 m276 444 L285.1162 437.0039 L285.7217 437.791 286.2256 438.6621 286.6147 439.6016 Cf/BBAccumRotation (-3.272491) XT0.0078 0.6196 0 0 1 0.4 1 Xa286.6167 448.3965 m286.23 449.3281 285.7334 450.2061 285.124 451 C276 444 L286.6167 448.3965 Lf/BBAccumRotation (-3.272491) XT0.4 0.549 0 0 0.6 0.4 1 Xa286.6167 448.3965 m276 444 L287.3911 445.498 L287.2588 446.5068 286.9976 447.4795 286.6167 448.3965 Cf/BBAccumRotation (-3.272491) XT0.3843 0 0.0353 0 0.6 1 1 Xa287.4019 442.499 m276 444 L286.6147 439.6016 L286.9902 440.5107 287.2671 441.4775 287.4019 442.499 Cf/BBAccumRotation (-3.272491) XT0.4 0.549 0 0 0.6 0.4 1 Xa287.3911 445.498 m276 444 L287.4019 442.499 L287.5361 443.5195 287.5186 444.5234 287.3911 445.498 Cf/BBAccumRotation (-3.272491) XT0 0 0 0 1 1 1 Xa276 444 m266.8765 436.999 L267.4863 436.2041 268.2056 435.498 269.0044 434.8838 C276 444 Lf/BBAccumRotation (-4.843287) XT0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa271.6025 433.3848 m276 444 L269.0044 434.8838 L269.792 434.2783 270.6631 433.7744 271.6025 433.3848 Cf/BBAccumRotation (-4.843287) XT0.1882 0.1451 0 0 0.8 0.8 1 Xa280.3975 433.3828 m281.3281 433.7695 282.2065 434.2656 283.001 434.876 C276 444 L280.3975 433.3828 Lf/BBAccumRotation (-4.843287) XT0.3843 0 0.0353 0 0.6 1 1 Xa280.3975 433.3828 m276 444 L277.4995 432.6084 L278.5078 432.7402 279.4795 433.002 280.3975 433.3828 Cf/BBAccumRotation (-4.843287) XT0.4 0.549 0 0 0.6 0.4 1 Xa274.499 432.5977 m276 444 L271.6025 433.3848 L272.5112 433.0088 273.4775 432.7324 274.499 432.5977 Cf/BBAccumRotation (-4.843287) XT0.1804 0.3647 0 0 0.8 0.6 1 Xa277.4995 432.6084 m276 444 L274.499 432.5977 L275.5205 432.4629 276.5249 432.4805 277.4995 432.6084 Cf/BBAccumRotation (-4.843287) XT0.4 0.549 0 0 0.6 0.4 1 Xa265.3838 439.6025 m265.7705 438.6709 266.2671 437.793 266.8765 436.999 C276 444 L265.3838 439.6025 Lf/BBAccumRotation (-0.130900) XT0.3843 0 0.0353 0 0.6 1 1 Xa265.3838 439.6025 m276 444 L264.6094 442.5 L264.7417 441.4922 265.0029 440.5195 265.3838 439.6025 Cf/BBAccumRotation (-0.130900) XTu1 Ap0.1882 0.1451 0 0 0.8 0.8 1 Xa280 444 m280 441.791 278.209 440 276 440 c273.791 440 272 441.791 272 444 c272 446.209 273.791 448 276 448 c278.209 448 280 446.209 280 444 cf0.9647 0.9451 0 0 0 0 0.6 Xa276.8101 444 m276.8101 443.5527 276.4473 443.1899 275.9995 443.1899 c275.5527 443.1899 275.1899 443.5527 275.1899 444 c275.1899 444.4473 275.5527 444.8101 275.9995 444.8101 c276.4473 444.8101 276.8101 444.4473 276.8101 444 cf0 R0.8431 0.4353 0 0 0.2 0.4 0.8 XA280 444 m280 441.791 278.209 440 276 440 c273.791 440 272 441.791 272 444 c272 446.209 273.791 448 276 448 c278.209 448 280 446.209 280 444 cs0.9725 0.9569 0.1569 0.0471 0 0 0.4 XA287.5 444 m287.5 437.6489 282.3511 432.5 276 432.5 c269.6489 432.5 264.5 437.6489 264.5 444 c264.5 450.3511 269.6489 455.5 276 455.5 c282.3511 455.5 287.5 450.3511 287.5 444 csULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF