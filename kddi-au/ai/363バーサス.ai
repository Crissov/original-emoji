%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (363\203o\201[\203T\203X.ai)%%CreationDate: (7/15/03) (9:08 AM)%%BoundingBox: 264 431 288 456%%HiResBoundingBox: 264 431.9775 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 231 471.8887 12 1009 717 18 0 0 7 43 0 0%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 14172 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0CFFC9FD30FFCCFD3AFFCFCAFD12FFC9C8FD2FFFCDCCFD1CFFCE%CEFD1BFFCAC1CFFD11FFC9C1CFFD2EFFCDFECEFD1BFFCDCCFD1BFFCFC1C9%FD11FFC9C1C1FD2EFFCDFECCCFFD1AFFCEFECEFD1AFFCAC1C1FD11FFC8C1%C1CFFD2DFFCDFEFECEFD1AFFCDFEFEFD1AFFCFC1C1C9FD10FFBBC1C1C9FD%2DFFCCFEFEFEFD1AFFCDFEFECFFD19FFC2C1C1C2FD10FFBBC1C1C2FD2DFF%CCFEFEFECEFD19FFCCFEFECFFD19FFC2BAC1C1FD10FFB4C1C1C2FD2DFFCC%FEFEFECCFD19FFFEFEFECFFD19FFB4BBC1C1FD0FFFC3B4BBC1C9FD2DFFFD%05FECFFD17FFCEFEFECCFD1AFFBBBAC1C1FD0FFFBBB4C1C1CFFD1DFFCFFD%0FFFC6FD04FECDFD17FFCDFEFECCFFFFCCFD16FFC3B4BBC1C9FD0FFFB4B4%BAC1CFFFFFC9FD1AFFC9FD0EFFC9BAFD04FECEFD17FFCDFEFEFECDFEFEFD%16FFBBB4BAC1C9FFFFCFCFFD0BFFB4B4BBC1C9CAC8BACFFD19FFC2FD0EFF%C1B4C6FEFEFECCFD17FFCCFD06FEFD16FFBBB4BAC1C2CAC9C1C9FD0BFFB4%B4B4FD04C1BBC3FD19FFC1FD0EFFBBB4C6FEFEFECEFD17FFCDFD05FECCFD%16FFB4B4B4FD04C1BBBBFD0BFFFD04B4C1BAB4B4FD19FFC9C1FD0EFFB4B4%B4FEFEFECEFD17FFCEFD05FECEFD16FFBBB4B4B4BBBABAB4C2FD0BFFFD08%B4FD19FFC9C1FD0DFFC8B4B4B4FEFEFEFD19FFCCFEFEFECDFD17FFBBFD07%B4C3FD0BFFBBFD06B4BBFD19FFC1C1CAFD0CFFC2B4B4B4FEFECCFD1AFFC8%C7C8FD18FFC3FD07B4FD0CFFC9BBFD04B4BBFD19FFCFC1C1CFFD0CFFC1B4%B4BAFEFECCFFFFCFC1FD0CFFCAA1FD08FFC9C1C8FD19FFBBFD05B4FD0EFF%C3BBB4BBBBFD1AFFC9C1C1C9FD0CFFC2B4B4BAFEFEFECFCEB4C2FD0DFF93%A1FD05FFC2FFC1C1C1FD19FFC3C2B4BBBBFD2EFFC2C1C1C9FD0CFFC1B4B4%BAFD04FEBAB4C1FD0DFF9A93CAFD04FFBBC9C1C1C1CAFD36FFCFCDFD13FF%BBC1C1C1FD0CFFC8B4B4B4C0C6C6BAB4B4C9FD0DFFCA8C93FD04FFB4C2C1%C1C1C8FD36FFCCCEFD12FFCFB4C1C1C8FD0CFFC9FD09B4C9FD0DFFCA8C8C%CAFFFFCAB4BBFD04C1FD35FFCCFEFD13FFBBB4C1C1C1FD0DFFFD09B4FD0E%FFCA8C8C93FFFFC3B4BBFD04C1C9FD33FFCEFECCFD13FFBBB4C1C1C1CAFD%0CFFC2FD07B4C2FD0EFFC38C8C8CCAFFBAB4B4FD04C1C2FD32FFCFFEFECC%FD12FFC9B4B4BAC1C1CAFD0CFFC9BAFD05B4BAC9FFCAFD0CFFC38C8C8CC3%C1BAB4B4FD05C1C9FD31FFCDFEFEFEFD12FFC1B4B4C1C1C1C9FD0EFFC8BA%BBBBC8FFFFFFC2FD0CFF9A8C8C8C92C1B4B4B4FD06C1FD19FFCAFD17FFFD%04FECEFD10FFC9C1B4B4BAC1C1C8FD0FFFC2C1CFFD04FFB4FD0BFFCAFD04%8CBBC1B4B4B4BAFD05C1C2FD17FFCAC8FD16FFCFFD04FECCFD10FFC2B4B4%B4C1C1C1C2FD0FFFC1C1C1FFFFFFCAB4CAFD09FFCA93FD048CC1C1B4B4B4%BBFD06C1C9FD0CFFCFCFFD08FFC8C1FD16FFCEFD05FECFFD0EFFCAC1B4B4%B4BAC1C1C1FD0EFFC2FD04C1CFFFC3B4CAFD08FFCA93FD058CC1BAFD04B4%FD07C1C9FD0BFFCDCDFD07FFC9C1C1CAFD16FFFD05FECFFD0EFFC1C1B4B4%B4BBC1C1C1CFFD0DFFC8FD05C1C8BBB4C2FD05FFC9C9C2C1FD058CC1C1C1%FD04B4BAFD07C1C9FD0AFFCDFEFD07FFC1C1C1CFFD16FFCCFEFEFECCFD0E%FFC2C1BAFD04B4C1C1C1C9FD0CFFC9FD04C1C0C1C1B4B4BBC2C2FD06C1BB%FD048CBBC1C1BAFD05B4FD08C1C9FD09FFFEFECEFD04FFCFFD04C1CAFD16%FFCFCDFECDCFFD0DFFC9C1C1BBFD04B4C1C1C1C9FD0CFFFD04C1C7FEC0C1%B4B4B4FD09C1BBB492FD04C1BBFD05B4FD09C1C2FD07FFCEFEFECDFFFFFF%CFFD05C1CFFD18FFC9C1C9FD0CFFC9C1C1C1FD05B4BBC1C1C1FD0BFFC9C1%C1C1C0FEFEC7BAB4B4B4BAFD0FC1FD07B4FD0AC1C9CAFD04FFCCFEFEFEFF%FFCAFD06C1C9FD0DFFCEFD0AFFCAC1C1C8CFFD09FFC9C1C1C7C1BBFD04B4%BAC1C1C1C2FD0AFFC8C1C1C1FEFEFEC6BBB4B4B4BBFD0FC1BBFD07B4FD0C%C1C9C9CFFD04FEC8C8FD07C1CFFD0DFFCCCEFD09FFCFFD04C1C2FD06FFCF%C2C1C1C1FEC7FD06B4BAC1B4C2FD09FFC9C1C1C1FD04FEC6FD05B4FD0FC1%FD09B4FD0DC1C6FD04FEC7FD08C1CAFD0DFFCCCCFD0AFFFD06C1C8C2C9C8%C8FD04C1C6FEFEFD09B4BBFD09FFC1C1C1CCFD04FEC6BAFD05B4FD0EC1BA%FD09B4FD0BC1C6FD05FEC6FD08C1FD0DFFCFFEFECFFD09FFFD0EC1C0FEFE%FEFD09B4C1CAFD07FFC2C1C1C1FD06FEFD06B4BAFD0BC1C6C7FD0BB4FD09%C1C0FD07FEFD07C1C9FD0DFFCEFEFECDFD08FFCAFD0EC1CCFEFEFEC7FD08%B4C1C9FD06FFCAC1C1C1C6FD06FEBAFD05B4BBFD0BC1C7FECCBAFD0AB4BB%FD07C1FD07FEC6FD07C1CAFD04FFC8FD08FFCDFEFEFECFFD07FFCFFD0DC1%C7FD04FEC6FD08B4C1C1FD05FFCAFD04C1FD07FEBAFD06B4BBFD0AC1C6FE%FEFEC0BAFD0AB4FD04C1C0FD09FEFD04C1B4C1C1FD05FFC1C2CFFD06FFCC%FEFEFECCFD07FFC9FD0CC1CCFD06FEBAFD06B4C1C1C1C8FFFFFFCAC2C1C1%C1CCFD07FEC0FD07B4BBFD09C1FD06FEC6BAFD08B4C1C1C7C6FD09FEC6C1%C1C1BAB4BBCFFD05FFC1C1C1C9FD05FFFD05FECDFD06FFC2FD0BC1C6FD07%FEC1BAB4B4BAB4C1C1C1C0FEC2CFC9FD05C1FD08FEC6FD0AB4BAB4BBBABA%B4B4FD09FEC6C0C0BABAB4BAC0C6C6FD0AFEC7C1C1BAB4B4C1FD06FFFD04%C1C8C9FFFFFFFD05FECCCFFD04FFCFFD0BC1CCFD08FEFD09C1FEFEC7FD06%C1C6FD09FEFD10B4BAFD1DFEC1C1BBB4B4B4C2FD06FFFD07C1C9C9FD07FE%CFFFFFFFFD0AC1C0FD0AFEC7FD07C1C7FEFEC6FD06C1FD0AFEBAFD0FB4C0%FD1CFEC6C1FD05B4C3FD06FFC8FD07C1C7FD07FECCCECFC2FD08C1C7C6FD%0BFEC0FD06C1C7FD04FEFD05C1C7FD0AFEC0FD0FB4C6FD1BFEC6FD07B4C2%FD06FFC2FD07C1C0FD09FEC6FD07C1C0C6FD0DFEC7FD06C1C6FD04FEC7FD%04C1C6FD0BFEFD0FB4FD1CFEC0FD07B4C2FD06FFC9FD07C1C7FD0BFECCC6%C7C1C7C6FD0FFEFD07C1FD05FEC6C1C1C1C6FD0CFEC0FD0DB4C0FD1CFEFD%08B4C2FD06FFC9FD07C1C6FD20FEFD07C1FD06FEC0C1C1FD0DFEC6FD0DB4%FD1CFEC0FD08B4C3FD07FFFD07C1C7FD05FECCFD1AFEFD06C1C6FD07FEC6%FD0FFEBAFD0BB4C0FD1CFEC0FD08B4C3FD07FFC8FD06C1C6FD04FECCCCFD%19FEC6FD06C1C6FD18FEFD0AB4BAFD1DFEFD09B4CAFD07FFC9FD06C1C7FD%04FECDCDFD19FECCFD06C1C6FD19FEFD08B4BAFD1EFEFD09B4CAFD04FFC9%BBFFFFFD06C1C6FD04FECECDFD19FEC6FD06C1FD1BFEBAFD05B4C0FD1FFE%FD09B4C3FFFFC9BBB4BBFFFFC9FD05C1C7FD04FECECEFD04FEA57D527D52%7D7BFD0EFEC7FD06C1FD0FFEA5527D527D52A6FD06FEC6C0C0C6FD0FFEA5%A57D527D527D7CA6A5FD08FEBAFD09B4C2FD04B4C2FFFFCAFD05C1C0FD04%FECECECCFEFEFEA6FD05F954FD0EFEC0FD06C1FD0FFE29FD05F97CFD16FE%7C29FD0BF903547BFD05FEBAFD0EB4C3FFFFFFC9FD04C1C7FEFEFECCCECE%CDFD04FE2BFD05F9CCFD0DFEFD07C1FD0FFE2BFD05F9CCFD13FECC522BFD%11F953A4FEFEFEFD07B4BABAFD05B4C3FD04FFC2C1C1C1C0FD04FECECECE%FD04FE53FD05F952FD0DFEFD06C1C0FD0EFEA5FD05F954FD13FEA503FD15%F952FEFEC6FD05B4C0C6C6FD05B4CAFD05FFC1C1C1C7FEFEFECDCECECECD%FEFEFEA6FD05F92AFD0DFEFD06C1C7FD0EFE53FD05F97CFD12FE53FD18F9%2ACCFEFEC0C0C0FEFEFEC6FD05B4CAFD05FFCFC1C1C1FEFEFECCFD04CECC%FEFEFEFD06F9A5FD0CFEC0FD05C1C6FD0EFE2BFD05F9A5FD11FE53FD1AF9%03FD08FEC0FD04B4B5FD07FFCFC1C1FEFEFECCFD04CECDFEFEFE53FD05F9%7CFD0CFECCFD05C1FD0EFECCFD05F92AFD11FE54FD09F9537CA6FEFEFECC%A57C532BFD08F929FD07FEBAFD04B4C2FD08FFC9C1FD04FEFD05CEFEFEFE%A5FD05F92BFD0CFEC6C7C1C1C1CCFD0EFE52FD05F953FD10FE7CFD07F92B%7BFD0CFEA52AFD07F952FD06FEBAFD04B4C3FD09FFC9C6FEFEFECDCECECE%CCFD04FE2BFD05F9A5FD0DFECCC6FD10FE2AFD05F9A5FD0FFECCFD07F97D%FD10FE7C2BFD05F92BFD06FEFD05B4FD0AFFCAC7FEFEFECCCCCDFD06FE52%FD05F952FD1EFECCFD05F92AFD10FE29FD06F97CFD12FEA5FD06F97DFD04%FEC0FD04B4BCFD0BFFC8FD0CFECCFD05F92BFD1EFE7CFD05F953FD0FFEA5%FD06F97DFD14FE7CFD06F9FD04FEBAFD04B4CAFD0CFFFD0DFE2BFD05F9A5%FD1DFE2AFD05F97CFD0FFE54FD05F92AFD16FE03FD05F97BFEFEFEFD05B4%FD0DFFCCFD0CFE53FD05F953FD1CFECCFD06F9FD0FFECCFD06F9A4FD16FE%7CFD05F97DFEFEBAFD04B4C9FD0DFFC7FD0CFEA5FD06F9FD1CFE7CFD05F9%29FD0FFE7BFD05F929FD18FEFD05F903FEC6FD05B4C1FD0DFFCEFD0DFE2B%FD05F9A6FD1BFE54FD05F9A6FD0FFE54FD05F9A5FD18FE2AFD05F9FEC6FD%04B4C1C1CFFD0CFFC2FD0DFE52FD05F953FD1AFECCFD06F9A4FD0FFE03FD%04F92BFD19FE7DFD05F9CCFD04B4BAC1C1C9FD0CFFC8C6FD0CFECCFD05F9%2BFD1AFE7BFD05F92AFD10FEFD05F929FD19FE7CFD05F97BFD04B4FD04C1%FD0BFFCAC1C1FD0DFE2AFD05F97CFD19FE53FD05F97CFD0FFECCFD05F953%FD19FEA5FD05F99FB4B4B4FD05C1CAFD0AFFC1C1C1CCFD0CFE7CFD05F929%FD19FEFD06F9A5FD0FFEA5FD05F952FD19FEA5FD05F999B4B4BBFD05C1CF%FD09FFC9C1C1C1C0FD0CFEA5FD06F9A4FD17FE7BFD05F903FD10FEA5FD05%F97DFD19FECC527D527D5299B4BAFD06C1C9FD08FFCAFD05C1FD0DFE2AFD%05F97CFD17FE54FD05F953FD10FE7BFD05F952FD1FFEBAB4FD07C1C8FFFF%FFCAFFFFFFCAFD06C1C7FD0CFE52FD05F903FD17FE03FD05F97BFD10FEA5%FD05F97DFD1FFEC0BAFD08C1FFFFC3C9FFFFFFC8FD07C1FD0CFECCFD06F9%A5FD15FEA5FD06F9FD0CFECCFD05FEFD05F953FD1FFEC0FD09C1CAFFC2BC%FFCAC8FD08C1C0FD0CFE2AFD05F97CFD15FE53FD05F953FD0CFEC0FD05FE%03FD04F92AFD1FFEC7FD09C1C2FFBBBBFFC9FD0AC1C6FD0BFE7CFD05F92A%FD15FE03FD05F97BFD0CFEC7C1FD04FE54FD05F9CCFD1EFEC6FD09C1B4FF%B4B4C9FD0BC1C7FD0CFEFD06F9A4FD13FEA4FD06F9FD0DFEC0C1C6FEFEFE%52FD05F952FD1FFEFD08C1BAB4FFB4B4BBFD0CC1CCFD0BFE54FD05F97DFD%13FE7DFD05F954FD0DFEC7C1C1FEFEFECCFD05F92BFD1EFEC6FD08C1B5B4%C9B4B4BBFD0CC1C0FD0BFE7CFD05F903FD13FE03FD05F97CFD0DFEC6C1C1%C7FEFEFE2AFD05F92AA4FD1DFEFD07C1BAB4B4C9B4B4B4FD0DC1C6FD0AFE%CCFD06F9A5FD11FEA5FD06F9CCFECCFD0BFECCC1C1C1FEFEFEA5FD06F92B%A5FD1CFEFD07C1B4B4B4BBB4B4B4BAFD0CC1C7FD0BFE54FD05F953FD11FE%7CFD05F92AFEFECDFD0BFEC6C1C1C1C6FEFEFE29FD07F952FD1BFEC0FD04%C1BBFD04B4BBB4B4B4FD0EC1CCFD0AFE7CFD05F903FD11FE29FD05F952FE%FECEFD0CFEFD04C1FEFEFECCFD08F9037DFD19FEC7C1C1C1BBFD0AB4FD0D%C1C0FD0AFECC03FD05F97BFD0FFEA4FD06F9A5FEFECECDFD0BFEFD04C1C6%FEFEFEA503FD09F9297CA4FD15FEC0FD0EB4FD0EC1FD0BFE54FD05F953FD%0FFEA6FD05F92BFEFEFECECEFD0BFEFD05C1FD04FEA5FD0CF903547CA6FD%12FEFD0EB4BBFD0DC1C7FD0AFE7BFD05F903FD0FFE29FD05F952FEFECCCE%CEFD0BFEC7FD04C1C6FD04FEA529FD0FF9297CA4FD0EFEFD0FB4FD0EC1FD%0BFEFD06F97BFD0EFE2BFD05F9A6FEFECCCECECDFD0AFEFD05C1C7FD06FE%7C2BFD10F92AA6FD0CFEBAFD0EB4BAFD0DC1C6FD0AFE53FD05F953FD0DFE%A6FD06F9FEFEFECDCECECDFD0AFEC7FD05C1FD08FE7C03FD11F952FD0AFE%C6FD05B4BAFD09B4FD0DC1C7FD0AFE7BFD06F9CCFD0CFE53FD05F929FEFE%FECDCECECEFD0AFEFD06C1FD0AFEA55403FD10F9A6FD09FEBAB4B4B4BAFE%FD0AB4BAFD0CC1FD0BFE03FD05F97CFD0CFE2AFD05F97CFEFEFEFD04CECC%FD09FEFD06C1FD0DFEA57C29FD0EF953A4FD07FEC0B4B4B4C0FEC0B4BBFD%07B4B5B4BBBAFD09C1C6FD0AFE54FD05F954FD0BFEA5FD06F9FEFEFECCFD%04CECCFD08FECCFD06C1C6FD10FECC7B7D2AFD0AF92BFD08FEBABAC0FEFE%FEFD10B4FD06C1C7FD0AFE7BFD06F9FD0BFE52FD05F929FEFEFECCFD04CE%CDFD08FEC6FD06C1FD15FEA47D03FD08F92AFD0DFEBAC2FD0FB4BBFD05C1%FD0BFE03FD05F97CFD0AFE2BFD05F97CFEFEFEFD05CECDFEFEFEC6FEFEFE%C6FD07C1FD18FE7C2BFD07F97DFD0CFEBABBFD11B4BAC1C1C1C6FD0AFE53%FD05F954FD09FEA5FD06F9A4FEFECCFD06CEFEFEFEC7C1C7C0FD08C1FD1A%FE7CFD07F9CCFD0BFEC0FFFD11B4BBC1C1C1C7FD0AFEA5FD06F9CCFD08FE%7CFD05F92AFEFEFECDFD06CEFEFEFEC6FD0AC1C7FD1BFEA5FD06F929FD0B%FEC6FFFD0BB48CFD06B4BAC1C1C1FD0BFE03FD05F97CFD08FE54FD05F953%FEFEFEFD07CEFD04FEFD0AC1C0FD1CFEA5FD06F9A4FD0AFEC6FFBBFD0AB4%8CFD07B4BBC1C1C6FD0AFE53FD05F92BFD07FECCFD06F9A5FEFECDFD07CE%CCFEFEFEC7FD09C1CCFD1DFE53FD05F97DFD0BFEFFC9FD0AB48C8CFD07B4%BBC1C6FD0AFEA5FD06F9CCFD06FE7BFD05F903FEFEFEFD08CEBAC6FEFEC6%FD09C1C6FD1DFEA4FD05F929FD0BFEFFFFBBFD0AB48CFD08B4C1C6FD0BFE%03FD05F97CFD06FE54FD05F953FEFECCFD08CEBBB4C6FEFEC6FD07C1C6FD%1FFE2AFD05F9FD0BFEFFFFBBFD09B4FD048CFD06B4BAC7FD0BFE53FD05F9%2AFD06FE03FD05F97BFEFEFD09CEBAB4B4C6FEFEC0FD06C1FD20FE7DFD05%F9CCFD0AFEFFFFFFFD0AB48C8C8CFD07B4C1FD0BFEA5FD06F9CCFD04FEA5%FD06F9FEFECDFD09CEBBB4B4B4C0FEFEFD05C1C8FD20FE7CFD05F97BFD0A%FEFFFFFFBBFD09B4FD058CFD05B4BBFD0CFE2AFD05F952FD04FE53FD05F9%54FEFEFD0ACEFD05B4C0FEFEC6C7C1C8CECDFD1FFEA5FD05F9A5FD0AFEFF%FFFFC9FD09B4FD058CFD06B4FD0CFE7DFD05F92BFD04FE2AFD05F97CFECC%FD0ACEBBFD05B4C0FEFECCFD04CECCFD1EFEA5FD05F9A5FD0AFEFD04FFFD%0AB4FD058CC0BAB4B4C0FD0CFEA4FD06F9CCFEFEA4FD06F9FEFECDFD0ACE%FD07B4C0FECCCECECEA8FD05F97DFD19FEA5FD05F9A5FD0AFEFD04FFC9FD%0AB4FD048C98FEC6C0FD0EFE2AFD05F97CFEFE7CFD05F92BFEFECDFD0ACE%FD08B4C0FECECECE7DFD05F952FD19FE7BFD05F9A5FD0AFEFD05FFBBFD09%B4FD058CA4FD10FE7CFD05F92AFEFE29FD05F952FEFECDFD09CEC8FD09B4%C0CCCECEA7FD05F97DFD19FEA5FD05F9A5FD0AFEFD05FFC9FD0BB48C8C8C%C6FD10FEA5FD06F9CCFEFD06F9CCFECCCDFD09CEC8C1FD09B4CCCECECEFD%05F954CCFD18FE52FD05F9A5FD09FEC6FD06FFBBFD09B4FD048C92FD11FE%2AFD05F9527CFD05F92BFEFECCCDFD09CEC1C1BBFD09B4CDCECE03FD04F9%2BCECECCCCFD15FE53FD05F9FD0AFEC6FD07FFFD0AB4FD048CC6FD10FE7D%FD05F92A53FD05F953FEFECECCFD08CEC8C1C1C1BBFD09B4CECE2BFD05F9%FD05CECCFD13FE03FD04F92BFD0AFEBAFD07FFC9FD0AB48C8C8C98FD10FE%A4FD0CF9A5FECCCDFECDFD07CEFD05C1BBFD09B4CE54FD05F97DFD05CECC%FD11FEA4FD05F929FD0AFEC1FD08FFBBFD0AB48C8C8CFD11FE29FD0AF92B%FEFECCCECCFECCCDCDCEC8C8FD07C1BBFD08B4C7A8FD05F955FD06CECCFD%10FE7DFD05F97DFD0AFEB4FD08FFC9FD0BB48C8C98FD10FE7CFD0AF929FE%FECDCECDFEFEFEFD0BC1BAFD08B4BACCFD06F9A8FD05CECDFD0FFEA503FD%05F9A4FD09FEC0BBFD09FFC3FD0BB48C92FD10FEA4FD0AF97CFEFECECECD%FEFEFEFD0CC1BAFD08B4FE54FD06F9CFFD04CECDFD0FFE2AFD05F92AFD0A%FEBABBFD0AFFFD0AB48C8C8CC0FD10FE29FD09F9A4FEFECECECEFEFEC6FD%0DC1FD07B4BAFECCFD06F903FD04CECCFD0EFE29FD06F9A5FD09FEC6B4C2%FD0BFFFD0AB48C8C8CFD10FEA6FD08F929FEFEFECECECECDFEC7FD0DC1BB%B4B4C6C6C6FD04FE53FD07F9A8CECEFD0DFEA62AFD06F954FD0AFEBAB4C3%FD0CFFFD09B48C8C8C9EFD0FFEA4FD08F97CFEFEFEFD04CECCC1C198FD0B%C1B4B4B4C0FD06FEA42BFD07F92B52CCFD09FEA57B2AFD08F9A4FD09FEC6%B4B4FD0EFFFD08B48C8C8C92FD10FE29FD07F9A4FEFEFEFD04CEC8C1C192%FD08C1BABBFD05B4FD07FEA52BFD09F92B2A54527D52542A2BFD0AF97BFD%0AFEBAB4BBFD0FFFFD07B4FC8C8C8CC0FD0FFE7CFD06F92AFD04FEFD05CE%C1928CFD08C1BAFD06B4C0FD07FEA5FD1BF97CFD0AFEC0B4B4B4FD10FFFD%07B4FD048CFD10FE2BFD05F97DFD04FECDFD04CEBB8CB5FD09C1B5FD05B4%BAFD08FEA52BFD17F92BA5FD0BFEB4B4B4FD12FFFD06B4FD048C92FD0FFE%29FD05F9A5FD04FECCCECECEC88C8C92FD09C1BAFD06B4C0FD08FEA47D03%FD14F953A4FD0BFEFD04B4FD13FFB5FD05B4FD048CC6FD0EFEA6FD04F903%FD06FECCC7C1928C8CBBFD0AC1FD07B4C6FD09FECC522BFD0FF92B53CCFD%0CFEBAB4B4B4C2FD14FFFD04B4FD068CA4FD0EFEFD04F953FD07FEC798FD%048CFD0BC1FD07B4C6FD0BFEA55253292AFD06F9295352A5FD0EFEC0FD04%B4FD16FFC2BBB4B4FD058CBAFD19FECCC1B58C8C8CB5FD0CC1FD07B4FD27%FEC0FD04B4C9FD17FFC3BBB4B4FD058CC0FD18FEBABBFD058CBBFD0BC1BB%FD07B4C6FD24FEC0FD04B4BBFD1AFFC9B4FD068CC6FD16FEBAC192FD058C%92FD0CC1BBFD07B4C0FD22FEC0FD04B4BBFD1DFFB5FD068CC6FD14FEC0BA%C192FD058C92FD0DC1BBFD08B4C0FD1FFEBAFD04B4BBC3FD1FFFBC8C8CFC%B4B4C6FD12FEC0B4C1C1FD068C92FD0FC1FD08B4BAC6FD1BFEC6FD05B4C9%FD23FFC2BBB4B4B4BAC6FD0FFEC0B4BAC1C192FD058CBBFD10C1FD09B4BA%C0FD17FEC6BAB4B4B4B5BBFD28FFC3C2B5B4C0FD0CFEC6BAB4B4C1C1C198%FD048CB5FD12C1BABBFD09B4BAC0FD12FEC6BAB4B4BBC2FD2FFFCFC2C7C0%C6C6FEFEFEC6C6C0FD04B4FD05C198B58CBB98FD15C1BABAFD0AB4BAC0C0%C6C6FD05FEC6C6C0C1B4C2BBC3C3FD0EFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0314 0.0118 0.3961 0 1 1 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 7) Pc0.0314 0.0196 0.9137 0 1 1 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 10) Pc0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 21) Pc0.0235 0.8078 0.9176 0 1 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 33) Pc0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 76) Pc0.9569 0.9294 0 0 0 0 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 215) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR266.3398 455.9629 m266.418 454.8975 266.1855 454.2881 v265.9531 453.6787 266.0303 452.6895 266.7275 452.6895 c267.4248 452.6895 267.7354 453.5264 267.5029 454.0596 C267.0381 453.4502 266.6504 453.8311 266.8828 454.4404 c267.1152 455.0498 266.3398 455.9629 yf0.0314 0.0196 0.9137 0 1 1 0 Xa275.5303 455.9883 m275.627 454.4893 275.3379 453.6328 v275.0498 452.7754 275.1455 451.3838 276.0117 451.3838 c276.877 451.3838 277 451.9199 277.0313 453.0449 C276.4541 452.1885 276.1484 452.7188 276.4375 453.5762 c276.7256 454.4326 275.5303 455.9883 yf0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa272.5 432 m269 432 267.5 433.5 266.5 434.5 c265.5 435.5 264 438 264 440 c264 442 266 442.5 266 444 c266 445.5 264 445.5 264 449 C265.0625 448.2012 265.7734 447.8887 267.1875 447.8887 c267.9385 447.8887 268.375 448.9512 268 450.3887 C271.5 447.0762 272.5415 454.1802 y273 448.5 274 448.5 v275 448.5 276 451.5137 y276.5 450.5 277.5 450.5 v279.5 450.5 281.5 451.5 281.5 454 c281.8789 450.707 284 450 v285.5 449.5 286.3335 449.8052 287.1665 451.3887 C287.9165 448.2222 285.5 448.5 286.5 446.5 c287.1323 445.2349 288 442.5 288 441 c288 439.9321 288 438.5 288 437 c288 436.1372 288 434 287 433 c285.7412 431.7412 282.5 432 280.5 432 c278.5 432 272.5 432 yf0.0235 0.8078 0.9176 0 1 0.2 0 Xa287 433 m288.0059 433.9937 288 436.1372 288 437 c288 437.5503 288 441.7466 288 442.2637 C287.125 440.2012 286.1177 440.6572 285.625 441.2637 c284.9688 442.0713 287.9375 443.4512 287.9375 446.9512 C285.9375 445.7012 287.1665 447.3472 286.6665 449.0552 C286.1665 448.2222 285.6846 447.9785 285 448.0762 c283.25 448.3262 276 439.3262 Y271.0625 436.2012 L271.9644 432.0293 L272.1445 432.0205 272.3081 432 272.5 432 C272.8413 432 273.3779 432 V273.8652 432.4097 274.3389 433.1958 274.5 434.7012 c274.875 438.2012 275.5625 437.2012 Y278.9375 434.7012 277 434.4512 V278.4375 431.6699 280.25 432.0137 281.1475 431.9775 C283.125 431.9775 285.875 431.8887 287 433 cf268.5 436.7637 m268.3125 437.9512 267.2085 439.3887 265.8335 439.3887 c264.9312 439.3887 264.5742 441.9585 264.375 442.5137 C264.2549 442.2217 264 440.3857 264 440 c264 438 265.5 435.5 266.5 434.5 c267.4678 433.5322 268.9219 432.1079 272.1875 432.0171 C272.1875 432.8887 L271.25 432.3262 268.6875 435.5762 268.5 436.7637 cf0.0314 0.0196 0.9137 0 1 1 0 Xa268.4712 452.4253 m267.355 451.5166 267.5713 450.625 v267.75 449.8887 268.771 450.3252 268.4712 450.9253 c268.1709 451.5254 268.1709 451.8252 268.4712 452.4253 cf0.0235 0.8078 0.9176 0 1 0.2 0 Xa273.25 450.0137 m272.625 448.9722 272.4761 450.1304 272.375 450.4302 C272.2358 450.8413 272.2607 452.2471 272.25 452.3887 C271.7085 450.9302 270.9585 448.5972 272.3335 448.5552 c273.0112 448.5347 273.2915 448.9722 273.25 450.0137 Cf277.2915 451.5137 m276.5415 449.3472 276.479 446.9722 278.2915 446.4722 c280.104 445.9722 281.5 448.4863 280.9375 449 C278.7085 447.8472 277.9585 449.2222 v277.2085 450.5972 277.2915 451.5137 yf280.5835 449.291 m280.542 450.4297 281 452.8047 V281.292 450.7212 281.667 449.8462 282.667 449.2632 c284.3955 448.2554 281.146 447.5898 280.5835 449.291 cf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa267.7915 435.4302 m268.125 434.6387 268.0625 432.7637 269.3125 432.5762 c270.1665 432.8472 269.6875 434.2012 v268.8027 436.7021 267.5835 436.4722 266.25 438.5552 C266.5415 436.2222 267.458 436.2217 267.7915 435.4302 cf0.0314 0.0196 0.9137 0 1 1 0 Xa266.0313 449.9512 m266.625 447.5762 268.375 447.5762 v268.7158 447.5762 270.6563 448.2637 271.25 449.9302 C271.998 448.6465 271.6592 447.292 271.522 446.3223 c271.4238 445.6313 271.5625 445.0801 272 445 c272.4375 444.9199 272.7979 445.3408 272.8418 446.1104 C272.8857 446.8799 272.9268 447.8994 273.6665 448.7222 C274.75 445.0137 274.875 449.2637 276.5625 450.4512 C276.7085 449.3052 277 446.5 278.5 446.5 c279.5586 446.5 280.25 447.9302 280.25 449.4302 C281.5415 448.4302 282.7056 448.5 283 448.5 c284 448.5 285 449.6387 285.1665 451.0552 C285.6665 450.0552 285.9375 449.0137 285.4375 448.2012 c284.4795 446.644 285.1665 444.9722 286.8335 446.1387 C286.8335 444.7637 286 443.8018 286 443 c286 441.8301 286.3945 437.7402 287.5625 439.8887 C288.0249 439.0142 288 438.0757 288 437 c288 435.3193 286.918 433.6406 285.6875 432.7637 c284.7222 432.0752 283.6597 432 283 432 c281.4189 432 278.6875 432.7773 278.125 434.9512 C281.125 434.4512 276 438.6387 y275.4448 437.0498 275.2085 436.0137 v274.7368 433.9482 273.9375 432 272 432 c270.373 432 269.125 432.9512 267.625 437.0137 C269.125 435.8398 268.5 438.5762 267.5 440.8052 c266.6563 442.686 265.625 443.6074 265.625 447.2324 c265.625 448.7324 266.0313 449.9512 yf0.0314 0.0118 0.3961 0 1 1 0.6 Xa281.5444 435.3008 m281.7319 435.9629 280.3071 436.2383 279.7446 436.501 c279.1821 436.7627 278.1694 438.1885 278.2446 438.9004 c277.9077 437.7217 278.395 436.5674 v278.8823 435.4131 280.9819 433.3135 281.5444 435.3008 cf0.9569 0.9294 0 0 0 0 1 Xa279 443 m279 441.0044 279.9854 439.9932 282.4019 439.5098 c284.8086 439.0283 285 438.1274 285 437 c285 435.271 284.229 434.5 282.5 434.5 c280.771 434.5 280 435.271 280 437 C279 437 L279 434.7104 280.2104 433.5 282.5 433.5 c284.7896 433.5 286 434.7104 286 437 c286 438.9956 285.0146 440.0068 282.5981 440.4902 c280.1914 440.9717 280 441.8726 280 443 c280 444.2041 280.7822 445.5 282.5 445.5 c284.229 445.5 285 444.729 285 443 C286 443 L286 445.2896 284.7896 446.5 282.5 446.5 c280.2021 446.5 279 444.7393 279 443 cf275.7935 446.5 m275.0864 444.2661 273.0308 437.7505 272.4683 435.7402 C271.833 437.7246 269.542 444.2217 268.7368 446.5 C267.6719 446.5 L272.1348 433.5 L272.8789 433.5 L276.8472 446.5 L275.7935 446.5 Lf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa274.8125 432.0762 m274.1563 432.2012 274.3096 432.9204 274.6563 433.5449 c274.9688 434.1074 275.4375 434.7012 y275.2188 433.6699 275.4688 433.2324 v275.7188 432.7949 275.4878 431.9478 274.8125 432.0762 cf0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa277.0415 438.9722 m278.25 438.4302 278.3125 439.6597 277.9165 442.3887 C278.2705 441.9927 279 440.6387 279.1665 439.8052 c279.3091 439.0903 279.0625 437.7637 278.5625 437.3887 c278.0625 437.0137 277.125 437.8887 277.0415 438.9722 Cf0.0314 0.0118 0.3961 0 1 1 0.6 Xa274.4429 435.2217 m274.2349 435.8477 274.2075 436.3252 y273.4155 433.335 274.6128 433.9014 v275.1841 434.1719 274.6362 434.6353 274.4429 435.2217 cf/BBAccumRotation (0.293173) XT266.8804 446.2217 m266.6724 446.8477 266.645 447.3252 y265.853 444.335 267.0503 444.9014 v267.6216 445.1719 267.0737 445.6353 266.8804 446.2217 cf/BBAccumRotation (0.293173) XT0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa279.25 450.3887 m278.957 450.7793 279.5996 451.0122 279.6875 451.4512 c279.7813 451.9199 279.7915 452.5137 279.5415 452.9722 C280.542 451.9932 280.375 451.2012 v280.2119 450.4277 279.5313 450.0137 279.25 450.3887 cf0.0314 0.0196 0.9137 0 1 1 0 Xa281.1875 455.8262 m281.25 454.9512 281.0625 454.4512 v280.875 453.9512 280.9375 453.1387 281.5 453.1387 c282.0625 453.1387 282.3125 453.8262 282.125 454.2637 C281.75 453.7637 281.4375 454.0762 281.625 454.5762 c281.8125 455.0762 281.1875 455.8262 yf0.0235 0.8078 0.9176 0 1 0.2 0 Xa276.0117 451.3838 m276.877 451.3838 277 451.9199 277.0313 453.0449 C276.521 451.9097 275.604 452.0552 275.771 452.9097 c275.8706 453.4194 275.583 453.8706 275.4761 454.2764 C275.4448 454.0464 275.4019 453.8228 275.3379 453.6328 c275.0498 452.7754 275.1455 451.3838 276.0117 451.3838 cf266.7275 452.6895 m267.3281 452.6895 267.6392 453.3096 267.5664 453.8223 C266.9844 452.873 266.5 453.7637 v266.3569 454.0264 266.606 454.6582 266.3252 454.9756 C266.3018 454.7329 266.2612 454.4863 266.1855 454.2881 c265.9531 453.6787 266.0303 452.6895 266.7275 452.6895 cf0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa286.6733 455.9629 m286.7515 454.8975 286.519 454.2881 v286.2866 453.6787 286.3638 452.6895 287.061 452.6895 c287.7583 452.6895 288.0688 453.5264 287.8364 454.0596 C287.3716 453.4502 286.9839 453.8311 287.2163 454.4404 c287.4487 455.0498 286.6733 455.9629 yf0.0235 0.8078 0.9176 0 1 0.2 0 Xa287.061 452.6895 m287.6616 452.6895 287.9727 453.3096 287.8999 453.8223 C287.3179 452.873 286.8335 453.7637 v286.6904 454.0264 286.9395 454.6582 286.6587 454.9756 C286.6353 454.7329 286.5947 454.4863 286.519 454.2881 c286.2866 453.6787 286.3638 452.6895 287.061 452.6895 cf0.0314 0.0118 0.3961 0 1 1 0.6 Xa275.479 435.6177 m274.0903 435.4634 274.2295 436.8677 274.8125 437.8677 c275.3955 438.8677 275.7285 440.2017 275.6455 441.2847 C276.3955 439.8677 276.979 435.7842 275.479 435.6177 cfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF