%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (479\223\374\212w\216\256.ai)%%CreationDate: (7/28/03) (11:08 PM)%%BoundingBox: 264 431 288 456%%HiResBoundingBox: 264 431.75 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 241 471.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 12634 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD13FFA87D4B4BFD19204B4B7676A8FD14FFA87D4B4BFD07205276%A1A8FD38FF7D76FD2420277DA8FD0DFFA87DFD1120A1A8FD32FFA87DFD2A%2052FD0BFF764BFD13204B76FD30FF7DFD2E2076A8FD06FFA8FD182027A8%FD2DFF4BFD30204BA8FD04FF76FD1B20FD2BFF7DFD0D20FD076844684468%4468446844684468446844684444FD0E207DFFA827FD0B20684468446844%44FD0B20A8FD28FF76FD09204444B5B5B5FD09FCFD138C6868FD0A20524B%FD08204468FD0A8C6868FD0920FD27FF52FD092093FD06B5FD08FCFD168C%6844FD0820F8FD06204468FD0E8C6844FD072052FD25FF76FD082076C3FD%08B5FD09FCFD178CFD0D2068FD0E8CFD056844FD05204BFD24FF76FD0720%4BA1C3C3C3FD08B5FD09FCFD178C44FD0A20FD0F8CFD0768FD0620A8FD22%FFA1FD07206FFD06C3FD08B5FD09FCFD178C44FD0820FD0F8CFD086844FD%052076FD21FFA8FD072093B5B5BCFD05C3FD08B5FD08FCFD188C44FD0720%44FD0C8CFD0B68FD052052FD21FF4BFD062093B5B5B5BCFD06C3FD08B5FD%0AFCFD168C44FD072068FD0B8CFD0B6844FD04204BFD20FF7DFD06206FFD%05B5BCFD06C3FD08B5FD08FCFD188C44FD072044FD078CFD0E68FD05204B%FD20FF4BFD052068FD07B5BCFD06C3FD08B5FD09FCFD178C44FD072068FD%068CFD0E6844FD04204BFD1FFFA1FD06208CFCFCFD07B5FD06C3FD08B5FD%08FCFD188C44FD0720448C8C8CFD066844684468446844684468F8202020%F84BFD1FFF4BFD052068FD04FCFD06B5BCFD06C3FD08B5FD09FCFD178C44%FD0720688CFD04684444FD11204B52A8A8FD1AFFA8FD0620FD06FCFD07B5%FD06C3FD08B5FD09FCFD178C44FD082044FD1A20277DA8FD17FFA1FD0520%688CFD06FCFD06B5BCFD06C3FD08B5FD09FCFD178C44FD252052FD16FF4B%FD0520688CFD07FCFD07B5BCFD05C3FD08B5FD08FCFD188C44FD26207DA8%FD13FF4BFD05208C8CFD07FCFD07B5BCFD06C3FD08B5FD0AFCFD168C44FD%26204BA8FD12FFFD0520448C8C8CFD08FCFD06B5BCFD06C3FD08B5FD08FC%FD188C44FD0A204468938C938C938C938C938C93686F4444FD0C2052FD11%FFFD052044FD048CFD07FCFD07B5BCFD06C3FD08B5FD09FCFD178C44FD07%2068FD13B58C6FFD0A2027FD10FFFD052068FD048CFD09FCFD07B5FD06C3%FD08B5FD08FCFD188C44FD072068FD15B56844FD0920FD0FFFFD052044FD%048CFD0AFCFD06B5BCFD06C3FD08B5FD09FCFD178C44FD07206FFD16B593%44FD07204BFD0EFFFD052068FD058CFD0AFCFD07B5FD06C3FD08B5FD09FC%FD178C44FD07208CFD17B568FD072027FD0DFFFD052044FD068CFD0AFCFD%06B5BCFD06C3FD08B5FD09FCFD178C44FD06204493FD17B59344FD06204B%FD0CFFFD052044FD068CFD0BFCFD07B5BCFD05C3FD08B5FD08FCFD188C44%FD072093FD17B59344FD062052FD0BFFFD052044FD068CFD0BFCFD07B5BC%FD06C3FD08B5FD0AFCFD168C44FD06204BFD19B54BFD0620A8FD0AFFFD05%2068FD078CFD0CFCFD06B5BCFD06C3FD08B5FD08FCFD0A8C6868FD092044%4468FD072044FD18B58C44FD0620A8FD09FFFD052044FD088CFD0BFCFD07%B5BCFD06C3FD08B5FD09FCFD058C6844FD172093FD18B59344FD052076FD%09FFFD052068FD088CFD0DFCFD07B5FD06C3FD08B5FD08FC8C8C6844FD1B%2093689393FD15B568FD0620A8FD08FFFD052044FD088CFD0EFCFD06B5BC%FD06C3FD08B5FD08FC68FD22204B446F68FD11B544FD05204BFD08FFFD05%2068FD098CFD0EFCFD07B5FD06C3FD08B5FD05FC8CFD2920444493FD0EB5%FD0620A1FD07FFFD052044FD0A8CFD0EFCFD06B5BCFD06C3FD08B5FCFCFC%68FD0D20FD0744FD1920448CFD0CB56FFD05204BFD07FFFD052044FD0A8C%FD0FFCFD07B5BCFD05C3FD08B58C44FD0A2044FD0B684444FD0820F8FD10%20B58CFD09B58CFD0620A8FD06FFFD052044FD0A8CFD0FFCFD07B5BCFD06%C3FD07B54BFD082044FD116844FD1820688CFD09B568FD052052FD06FFFD%052068FD0B8CFD10FCFD06B5BCFD06C3FD05B544FD07204444FD1468FD0A%20764BFD0C20688C8C8CFD07B5FD0620A8FD05FFFD052044FD0C8CFD0FFC%FD07B5BCFD06C3B5B5B56FFD072044FD176844FD0820A8FFFFFF7D76FD09%20688C8C8CFD06B56FFD05207DFD05FFFD05204468FD0B8CFD11FCFD07B5%FD06C3B56FFD072044FD0B688C688C688CFD0968FD08207DFD06FF76FD08%20688C8C8CFD05B58CFD052027FD05FFFD052044FD0C8CFD12FCFD06B5BC%FD06C3FD0720FD0868FD0F8C688C686868FD07204BFD08FF76FD0720FD04%8CFD05B544FD0520A8FD04FFFD05204468FD0C8CFD12FCFD07B5FD04C3FD%0720FD0868FD138C686844FD0720FD09FF7DFD0720FD048CFD04B56FFD05%207DFD04FFFD0520446868FD0B8CFD13FCFD06B5BCC3C376FD0620FD0868%FD158C6868FD0720A8FD09FFA1FD062068FD048CB5B5B593FD05204BFD04%FFFD052044686868FD0B8CFD13FCFD07B5BC44FD052044FD0768FD178C68%44FD062076FD0AFF52FD052044FD058CB5B5B5FD0620A8FFFFFFFD052044%6868FD0C8CFD13FCFD07B59AFD0620FD0568FD1B8C68FD06207DFD0BFF27%FD0520FD068CB5B56FFD0520A8FFFFFFFD052044686868FD0C8CFD14FCFD%05B5FD062044FD0668FD1B8CFD062076FD0BFF76FD052044FD068CB568FD%052052FFFFFFFD052044FD0468FD0B8CFD14FCFD04B593FD0620FD0668FD%1C8C44FD05207DFD0CFFFD0620FD058CFCB5B5FD052052FFFFFFFD052044%FD0568FD0B8CFD15FCB5B56FFD052044FD0568FD1D8C44FD052027FD0CFF%76FD052068FD058CB5B544FD0520FFFFFFFD052044FD0468FD0C8CFD16FC%B544FD0520FD0568FD1E8C68FD05207DFD0CFFA1FD052044FD068CB544FD%0520A8FFFFFD052044FD0568FD0C8CFD16FCFD0620FD0568FD1E8C68FD05%204BFD0DFFFD052044FD078C6FFD0520A1FFFFFD052044FD0668FD0B8CFD%16FCFD052044FD0568FD1D8C6868FD052052FD0DFF76FD0520FD078C93FD%052076FFFFFD052044FD0768FD0B8CFD14FC8CFD052044FD0468FD198C68%68FD0544FD05204BFD0DFF52FD052068FD068CB5FD05204BFFFFFD052044%FD0668FD0C8CFD14FC8CFD0520FD0568FD148C68684468FD0844FD052052%FD0DFFA8FD052068FD078CFD0620FFFFFD052044FD0768FD0C8CFD13FC8C%FD052044FD0468FD0F8C686868FD0E44FD05204BFD0DFFA8FD052044FD07%8C44FD0520FFFFFD052044FD0868FD0B8CFD13FC8CFD0520FD0568FD0C8C%6868FD1244FD052052FD0EFFFD052044FD078C6FFD0520FFFFFD052044FD%0868FD0C8CFD12FC68FD052044FD0468FD078C6868FD1744FD0620FD0EFF%4BFD0520FD078C44FD0520A1FFFD052044FD0868FD0C8CFD12FC8CFD0520%FD05688C8C6868FD194468688CFD052052FD0EFF52FD0520FD078C68FD05%20A8FFFD052044FD0968FD0C8CFD11FC8CFD052044684468FD19446868FC%FD058CFD05204BFD0EFF7DFD0520FD078C68FD052076FFFD052044FD0A68%FD0B8CFD11FC8CFD0520FD184468688CFD06FCFD048CFD052052FD0EFF76%FD052068FD078CFD05207DFFFD052044FD0A68FD0C8CFD10FC8CFD0620FD%124468688C8CFD09FCFD058CFD05204BFD0EFFA8FD052068FD068C68FD05%2052FFFD052044FD0A68FD0C8CFD10FC8CFD0520FD0E4468688C8CFD0FFC%FD048CFD052052FD0EFFA8FD052068FD078CFD052076FFFD052044FD0B68%FD0C8CFD0FFC8CFD0620FD0A448C8CFD13FCFD048C68FD05204BFD0EFFA8%FD052068FD078CFD052027FFFD052044FD0C68FD0B8CFD0FFC8CFD0520FD%064468688C8CFD15FC8C8CFD0444FD052052FD0EFFA8FD052044FD078CFD%05204BFFFD052044FD0C68FD0C8CFD0EFC68FD062044446868FD068CFD0F%FC8C8CFD0944FD0620FD0FFFFD052068FD078C44FD04204BFFFD052044FD%0C68FD0C8CFD0EFC8CFD0520FD0568FD058CFD0BFC8C8C6868FD0C44FD05%2052FD0FFFFD052044FD078C44FD042052FFFD052044FD0D68FD0C8CFD0D%FC8CFD052044FD0468FD068CFD05FC8C8C6868FD1144FD05204BFD0FFFFD%052068FD078C44FD04204BFFFD052044FD0E68FD0B8CFD0DFC8CFD0520FD%0568FD058CFCFCFC6868FD1644FD052052FD0FFFFD052044FD078CFD0520%52FFFD052044FD0E68FD0B8CFD0DFC8CFD052044FD04688C8C8C6868FD19%446868FD05204BFD0FFFFD052044FD078C44FD042027FFFD052044FD0E68%FD0C8CFD0CFC8CFD05206868684468FD1844688C8CFCFD048CFD052052FD%0FFFFD052044FD078C44FD042052FFFD052044FD0F68FD0C8CFD0BFC8CFD%0620FD184468688CFD04FCFD058CFD05204BFD0FFFFD052068FD078C44FD%042027FFFD052044FD1068FD0B8CFD0BFC8CFD0520FD14446868FD0BFCFD%048CFD052052FD0FFFFD052044FD078C44FD04204BFFFD052044FD1068FD%0B8CFD0BFC68FD0620FD0E4468688C8CFD0DFCFD058CFD0620FD0FFFFD05%2044FD078C44FD04204BFFFD052044FD1068FD0C8CFD0AFC8CFD0520FD0A%4468688C8CFD13FCFD048CFD052052FD0FFFFD052044FD078C44FD042052%FFFD052044FD1168FD0C8CFD09FC8CFD0620FD064468688C8CFD15FCFD05%8CFD05204BFD0FFFFD052044FD078CFD05204BFFFD052044FD1268FD0B8C%FD09FC8CFD05204444684468FD058CFD17FCFD048CFD052052FD0FFFFD06%20FD078CFD052052FFFD052044FD1268FD0B8CFD09FC8CFD052044FD0468%FD068CFD15FCFD058CFD05204BFD0FFFFD052044FD078CFD052027FFFD05%2044FD1268FD0C8CFD08FC8CFD0520FD0568FD058CFD17FCFD048CFD0520%52FD0EFFA8FD052044FD078CFD052076FFFD052044FD1368FD0C8CFD07FC%8CFD052044FD0468FD068CFD15FCFD058CFD05204BFD0EFFA8FD052068FD%068C68FD052076FFFD052044FD1368FD0C8CFD07FC8CFD0520FD0568FD05%8CFD17FCFD048CFD052052FD0EFF7DFD052044FD078CFD05207DFFFD0520%44FD1468FD0B8CFD07FC68FD052044FD0468FD068CFD15FCFD058CFD0620%FD0EFF76FD052068FD068C68FD05207DFFFD052044FD1468FD0C8CFD06FC%8CFD0520FD0568FD058CFD17FCFD048CFD052052FD0EFF76FD052068FD06%8C68FD0520A8FFFD052044FD1568FD0C8CFD05FC8CFD052044FD0468FD06%8CFD15FCFD058CFD05204BFD0EFF4BFD052068FD068C44FD0520A1FFFD05%2044FD1568FD0C8CFD05FC8CFD0520FD0568FD058CFD17FCFD048CFD0520%52FD0EFF4BFD052068FD068C44FD0520FFFFFD052044FD1668FD0B8CFD05%FC8CFD052044FD0468FD068CFD15FCFD058CFD05204BFD0EFFFD0620FD07%8CFD0620FFFFFD062044FD1568FD0C8CFD04FC8CFD0520FD0568FD058CFD%17FCFD048CFD052052FD0EFFFD052044FD078CFD05204BFFFFFD072044FD%1568FD0C8CFCFCFC8CFD052044FD0468FD068CFD15FCFD058CFD05204BFD%0DFF7DFD0620FD068C68FD052076FFFFA1FD072044FD1468FD0C8CFCFCFC%8CFD0520FD0568FD058CFD17FCFD048CFD052052FD0DFF76FD052068FD06%8C44FD05207DFFFFFFA1FD072044FD1468FD0B8CFCFCFC68FD052044FD04%68FD068CFD15FCFD058CFD0620FD0DFF27FD052044FD068C44FD0520A8FD%04FFA1FD072044FD1368FD0C8CFCFC8CFD0520FD0568FD058CFD17FCFD04%8CFD052052FD0DFFFD062068FD068CFD0620FD06FF7DFD072044FD1368FD%0C8CFC8CFD052044FD0468FD068CFD15FCFD058CFD05204BFD0CFFA1FD05%204468FD068CFD0620FD07FFA1FD072044FD1268FD0B8CFCFC8CFD0520FD%0568FD058CFD17FCFD048CFD052052FD0CFF4BFD05204468FD058C68FD05%2076FD08FF7DFD072044FD1268FD0B8CFC8CFD052044FD0468FD068CFD15%FCFD058CFD05204BFD0BFFA8FD06206868FD058C44FD05207DFD09FFA8FD%072044FD1168FD0D8CFD0520FD0568FD058CFD17FCFD048CFD052052FD0B%FF7DFD052044686868FD048C44FD0520FD0BFFA1FD072044FD1168FD0B8C%68FD052044FD0468FD068CFD15FCFD058CFD05204BFD0BFFFD0620446868%68FD048CFD05204BFD0CFFA1FD072044FD1068FD0C8CFD0520FD0568FD05%8CFD17FCFD048CFD052052FD0AFF52FD0620FD04688C8C8C44FD05207DFD%0DFFA1FD072044FD1068FD0A8C68FD052044FD0468FD068CFD15FCFD058C%FD0620FD09FFA1FD0620FD05688C8C8CFD0620CAFD0EFFA1FD072044FD0F%68FD0B8CFD0520FD0568FD058CFD17FCFD048CFD052052FD08FFA827FD05%2044FD05688C8C68FD05204BFD10FF7DFD072044FD0F68FD098C68FD0520%44FD0468FD068CFD15FCFD058CFD05204BFD07FFA1FD072044FD05688C8C%FD06207DFD11FFA1FD072044FD0E68FD0A8CFD0520FD0568FD058CFD17FC%FD048CFD052052FD06FF52FD072044FD06688C8CFD0620FD13FF7DFD0720%44FD0D68FD098C68FD052044FD0468FD068CFD15FCFD058CFD05204BFF7D%A8764BFD0920FD086844FD052052FD14FFA8FD072044FD0D68FD098CFD05%20FD0568FD058CFD17FCFD048CFD122044FD08688CFD0620A8FD15FFA1FD%072044FD0D68FD078C68FD052044FD0468FD068CFD15FCFD058CFD112044%FD0968FD062052FD17FFA1FD072044FD0C68FD088CFD0520FD0568FD058C%FD17FCFD048CFD102044FD096844FD0620FD19FFA1FD072044FD0B68FD07%8C68FD052044FD0468FD068CFD15FCFD058CFD0520F8FD082044FD0A6844%FD062052FD1AFFA1FD072044FD0B68FD078CFD0520FD0568FD058CFD17FC%FD048CFD0B204444FD0C6844FD052027A8FD1BFF7DFD072044FD0B68FD05%8C68FD052044FD0468FD068CFD15FCFD058CFD062044204444FD0E6844FD%062076FD1DFFA1FD072044FD0A68FD068CFD0520FD0568FD058CFD17FCFD%048CFD052044FD1268FD062027FD1FFF7DFD072044FD0968FD058C68FD05%2044FD0468FD068CFD15FCFD058CFD0620FD1168FD0720CAFD20FFA8FD07%2044FD0968FD058CFD0520FD0568FD058CFD17FCFD048CFD052044FD1068%FD0720A1FD22FFA1FD072044FD09688C8C8C68FD052044FD0468FD068CFD%15FC8C8C686868FD0620FD0F68FD072076FD24FFA1FD072044FD0868FD04%8CFD0520FD0568FD058CFD13FC8CFCFD0668FD052044FD0D6844FD072076%FD26FFA1FD072044FD07688C8C8C68FD052044FD0468FD068CFD0DFC8CFC%688CFD0968FD0520F8FD0B684444FD07204BA8FD27FFA1FD072044FD0768%8C8C8CFD0520FD0568FD058CFD0BFC8CFCFD0E68FD052044FD0A6844FD08%204BFD2AFF7DFD072044FD07688C68FD052044FD0468FD068CFD05FC8C8C%FD1368FD0620FD07684444FD092052FD2CFFA1FD072044FD06688C8CFD05%20FD0568FD058CFC8CFCFD14684444FD072044FD0668FD0B207DFD2EFF7D%FD072044FD05688C68FD052044FD04688C688CFD14684444FD0D20682044%FD0D20A8FD30FFA8FD072044FD05688CFD0520FD19684444FD1E2052FD33%FFA1FD072044FD046844FD052044FD13684444FD21204BA1FD35FFA1FD07%2044FD0468FD0520FD11684444FD22204BA8FD38FFA1FD072044686844FD%052044FD0B684444FD1820F8FD0C2076A8FD3BFFA1FD0720446868FD0520%FD07684444FD26204B7DA8FD3FFF7DFD07204444FD05204468446844FD18%204B207D767D767D767D767D767D767DA1A8FD44FFA1FD072044FD052044%FD17205276FD59FF7DFD21207DFD5EFFA8FD1A2027767DFD63FFA1FD1520%4B4BFD69FFA1FD0F204B4BA1A8FD6DFFA12020F8FD08205276FD48FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.0157 0.4039 0.2471 0 1 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 19) Pc0.0196 0.8118 0.6588 0 1 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 32) Pc0.0118 0.9608 0.9137 0 1 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 39) Pc0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 76) Pc0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 112) Pc0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 148) Pc0.4431 0.9569 0.8588 0.6431 0.2 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 184) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 Ap0 O0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR275.5 453.5 m276.25 454.25 277.5 455.5 279 455.5 c280.5 455.5 282 455 282 453.5 c282 452 282 450 y276 450 l275.5 453.5 lf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa278 452.5 m276 450 L282 450 L282 450 282 451.5 v282 455 281.5 456 278 452.5 Cf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA275.5 453.5 m276.25 454.25 277.5 455.5 279 455.5 c280.5 455.5 282 455 282 453.5 c282 452 282 450 y276 450 l275.5 453.5 ls0 O0.0196 0.8118 0.6588 0 1 0.2 0.2 Xa276 452.5 m279 452.5 280 452.5 281.5 452.5 c284 452.5 287.5 451 287.5 443 c287.5 435 283.5 433.5 281 433.5 c278.5 433.5 276.5 433.5 y276.5 436.5 l279.5 436.5 281 436.5 v282.5 436.5 285 436.5 285 442.5 c285 448.5 283.8125 449.5 279.5 449.5 c276 452.5 lf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa287.4365 441.4995 m287.4365 445.5 286 449.5 282 449.5 c280.8398 449.5 279.5 449.5 Y283.8125 449.5 285 448.5 285 442.5 c285 436.5 282.5 436.5 281 436.5 c279.5 436.5 276.5 436.5 Y276.5 435 L276.5 433.5 L278.5 433.5 281 433.5 v283.333 433.5 286.9609 434.8232 287.4365 441.4995 Cf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa285.7666 435.9834 m285 442.5 L285 436.5 282.5 436.5 281 436.5 c279.5 436.5 276.5 436.5 Y276.5 435 L276.5 433.5 L278.5 433.5 281 433.5 v282.4448 433.5 284.3848 434.0112 285.7666 435.9834 Cf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA276.5 451.5 m279.1538 452.5 280 452.5 v280.7241 452.5 280.8086 452.5 281.5 452.5 c284 452.5 287.5 451 287.5 443 c287.5 435 283.5 433.5 281 433.5 c278.5 433.5 276.5 433.5 y276.5 436.5 l279.5 436.5 281 436.5 v282.5 436.5 285 436.5 285 442.5 c285 448.5 283.8125 449.5 279.5 449.5 c276.5 451.5 ls0 O0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa264.5 440 m272.25 432.25 l273.5 432.25 l281 434 l281 446.5 281 447.5 v281 448.5 280 450 279 451 c278.25 451.75 276.25 453.75 275.5 454.5 c274.5 455.5 273 455.5 271.5 455.5 c270.5 455.5 270 455.5 269 455.5 c266.5 455.5 264.5 453.5 264.5 451.5 c264.5 451 264.5 440 yf0.0118 0.9608 0.9137 0 1 0 0 Xa273.5 432.25 m281 434 L281 439.7383 281 443.75 V269.25 455.5 L269.165 455.5 269.0928 455.5 269 455.5 c266.5 455.5 264.5 453.5 264.5 451.5 c264.5 451 264.5 440 Y272.25 432.25 L273.5 432.25 Lf0.0196 0.8118 0.6588 0 1 0.2 0.2 Xa273.5 432.25 m281 434 L281 438.2559 281 442 V267.7051 455.2949 L265.8481 454.7544 264.5 453.1367 264.5 451.5 c264.5 451 264.5 440 Y272.25 432.25 L273.5 432.25 Lf0.0118 0.9608 0.9137 0 1 0 0 Xa264.5 451.5 m264.5 451 264.5 440 Y272.25 432.25 L273 432.25 L273 446 L265.3076 453.6924 L264.8008 453.0366 264.5 452.2695 264.5 451.5 cf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa264.5 451.5 m264.5 451 264.5 440 Y272.25 432.25 L273 432.25 L273 437 L265.0371 453.272 L264.7051 452.7173 264.5 452.1123 264.5 451.5 cf0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa264.5 440 m272.25 432.25 L273 432.25 L273 432.5 L264.5 449.8696 L264.5 446.686 264.5 440 Yf0.0157 0.4039 0.2471 0 1 0.6 0.6 Xa266.0576 454.439 m274.4971 446 L275.0273 446.5303 L266.6875 454.8701 L266.4629 454.7422 266.2544 454.5977 266.0576 454.439 Cf0 R0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA264.5 440 m272.25 432.25 l273.5 432.25 l281 434 l281 446.5 281 447.5 v281 448.5 280 450 279 451 c278.25 451.75 276.25 453.75 275.5 454.5 c274.5 455.5 273 455.5 271.5 455.5 c270.5 455.5 270 455.5 269 455.5 c266.5 455.5 264.5 453.5 264.5 451.5 c264.5 451 264.5 440 ysu0 O0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa273 446 m273 444.7173 273 435.0308 273 432.25 C273.5 432.25 L281 434 L281 442.4355 281 446 v281 447.5 280.5 450 277.5 450 c274.5 450 273 447.5 273 446 cf0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa274.5 446 m274.5 434.0234 l281 435.5 l281 444 L281 446.5 280.8125 448.5 277.5 448.5 c275.3633 448.5 274.5 446.7358 274.5 446 Cf0.0118 0.9608 0.9137 0 1 0 0 Xa275.5 445 m275.5 434.2637 l279.5869 435.1699 l279.5869 446 l275.5 445 lf0 R0.3725 0.9451 0.9098 0.3608 0.4 0 0 XA273.3125 444.3887 m280.8125 446 lS273.3125 442.2773 m280.8125 443.8887 lS0.4431 0.9569 0.8588 0.6431 0.2 0 0 XA273 446 m273 444.7173 273 435.0308 273 432.25 C273.5 432.25 L281 434 L281 442.4355 281 446 v281 447.5 280.5 450 277.5 450 c274.5 450 273 447.5 273 446 csULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF