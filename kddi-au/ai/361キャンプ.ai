%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (OKADA KOJI) (cromagnon)%%Title: (361\203L\203\203\203\223\203v.ai)%%CreationDate: (7/15/03) (11:01 PM)%%BoundingBox: 264 432 288 456%%HiResBoundingBox: 264 432 288 456%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 9.5 40.3896 585.5 832.3896%AI3_DocumentPreview: None%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: 247 471.8887 12 1009 717 18 0 0 7 43 0 1%AI5_OpenViewLayers: 73%%PageOrigin:9.5 40.3896%%AI3_PaperRect:-9 832 586 -9%%AI3_Margin:9 -40 -9 9%AI7_GridSettings: 24 48 24 48 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 8156 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3D613634FD410AFD3C6135FD430AFD3B6136FD440AFD3B6133FD%440AFD3B61FD450AFD3B61FD450AFD3A6160FD450AFD3A6134FD450AFD3A%6133FD2D0AFD0532FD130AFD38613634FD2F0AFD0532FD120AFD35613660%350BFD130A320A32FD190AFD0832FD100AFD3361600BFD160AFD0532FD18%0AFD0832FD100AFD3361FD170AFD0732FD170AFD0B32FD0D0AFD32610CFD%180AFD0732FD190AFD0932FD0C0AFD326133FD180AFD0832FD190AFD0932%FD0B0AFD3261FD190AFD0932FD190AFD0832FD0B0AFD316135FD1A0AFD09%32FD190AFD0932FD090AFD306134FD1C0AFD0832FD1A0AFD0832FD090AFD%21613560366035603660356036603535FD1F0AFD0732FD1B0AFD0832FD08%0AFD1F6134FD2F0AFD0632FD1C0AFD0732FD080AFD1E6134FD310AFD0532%FD1D0AFD0732FD070AFD1D6135FD350A32FD1F0AFD0632FD070AFD1D61FD%570AFD0632FD060AFD1D61FD580AFD0532FD060AFD1D61FD570AFD0732FD%050AFD1C6135FD580AFD0532FD060AFD1C6133FD1D0A32FD110A57507B26%502650265026502650265026502650265026502650265026502650265026%502650265026502CFD05502650265026FD1B6135FD1D0A323232FD0F0A7B%9F9F9F99FD306EFD1A6135FD1D0AFD0532FD0D0A57FD059FFD306EFD0D61%6034330B330B330B330B330BFD1F0AFD0632FD0C0A50FD059FFD306EFD0B%616034FD2B0AFD0532FD0D0A33FD059FFD306EFD0B6134FD2C0AFD0632FD%0D0A509F9F98FD316EFD0A6160FD110A323232FD190AFD0532FD090A7B9F%9F754AFD054499FD049FFD2B98FD0A610CFD100AFD0532FD180AFD0632FD%070A7BFD049F74FD054498FD049FFD2B98FD0A6134FD0F0AFD0632FD180A%FD0532FD080A7AFD059FFD0544FD059FFD2B98FD0A61FD110AFD0532FD18%0AFD0532FD080A7BFD049F74FD0544FD059FFD2B98FD0A61FD100AFD0632%FD180AFD0532FD080A2CFD049F6FFD054499FD049FFD2B98FD096135FD11%0AFD0532FD090A321038FD0F0A32FD050A7B749F204A446EFD08446E6E74%9F9898989F7474FD266EFD08615FFD110AFD0632FD080AFD0538FD130A7B%FD049FFD05446EFD0B98FD049F99FD256EFD06613634FD130AFD0532FD08%0AFD053832FD120AFD059F6FFD0544FD0A98FD059F74FD256E6161600B33%FD150AFD0632FD080AFD053810FD120AFD059F6EFD04446EFD0A98FD069F%FD256E6135FD190AFD0532FD080AFD053832FD120A749F9F9F994AFD0544%FD0A98FD059FFD266E60FD190AFD0632FD080AFD053810FD0E0A57505126%4A4A754A6EFD05446EFD0B989F9F9F6E6E6E99749F6E986E986E986E986E%986E986E986E986E986E986E986E986E986E986E986E986E0BFD1A0AFD05%32FD080AFD053832FD0D0A7B9F9F9F6FFD054468FD156EFD059FFD2098FD%1A0AFD0632FD080AFD053810FD0C0A57FD059FFD0644FD146E99FD059FFD%2098FD1B0AFD0532FD080AFD053832FD0C0A50FD059FFD0544FD156E74FD%059FFD2098FD1A0AFD0632FD080AFD0538FD0D0A2CFD049F99FD0644FD14%6E99FD059FFD2098FD1B0AFD0532FD090A383838FD0F0A509F9F744AFD05%44FD166E749F9F9EFD2198FD1A0AFD06322CFD150A7B9F9F754AFD0544FD%2098C19F9F9F99FD1B6EFD190AFD0732FD150A7BFD049F74FD0544FD2198%FD049F74FD1A6EFD160AFD0932FD160A7AFD059FFD0544FD2098FD059F74%FD1A6EFD170AFD0732FD170A7BFD049F74FD0544FD2098FD059F74FD1A6E%FD150A10FD0932FD160A2CFD049F6FFD0544FD2098FD059FFD1B6EFD150A%FD0732FD150A7B749F2044446EFD0844FD229874996E6E6E9F74986E986E%986E986E986E986E986E986E986E986E986E98FD150AFD0632FD150A7BFD%049FFD0644FD2A6E74FD059FFD1598FD170A323232FD160AFD059F6FFD05%44FD2A6EFD059FFD1698FD300AFD059F6EFD0444FD2B6E99FD059FFD1598%FD300A749F9F9F994AFD0544FD2A6E99FD049FFD1698FD0A0A32FD210A57%5051264A4A754A6EFD0544FD2C6E99999F9898989F749F6E986E986E986E%986E986E986E986E986EFD090A323232FD1F0A7B9F9F9F6FFD05446EFD35%98FD049F99FD106EFD080AFD0532FD1D0A57FD059FFD05446EFD3498FD06%9FFD106EFD070AFD0632FD1D0A50FD059FFD05446EFD3598FD059FFD106E%FD080AFD0532FD1D0A2CFD049F99FD05446EFD3498FD069FFD106EFD070A%FD0632FD1E0A509F9F744AFD05446EFD36989F9F98FD116EFD080AFD0532%FD190A7B9F9F754AFD0544FD186EA0A0FD07A7A099FD1D6E99FD049FFD0B%98FD070AFD0632FD180A7BFD049F74FD0544FD156E757CFD0DA775FD1B6E%98FD049FFD0B98FD080AFD0532FD180A7AFD059FFD0544FD146EA0FD10A7%A099FD196EFD059FFD0B98FD070AFD0632FD180A7BFD049F74FD0544FD13%6EA0FD13A799FD186EFD059FFD0B98FD080AFD0532FD180A2CFD049F6FFD%0544FD126EFD16A799FD176E99FD049FFD0B98FD210A7B749F204A446EFD%0844FD116EA0FD17A775FD186E749F9898989F7474FD066EFD200A7BFD04%9FFD05446EFD1598A0FD19A79FFD1A9874FD049F99FD056EFD200AFD059F%6FFD0544FD1598A0FD19A7A0FD1A98FD059F74FD056EFD200AFD059F6EFD%04446EFD1498A0FD1BA799FD199899FD059FFD056EFD200A749F9F9F994A%FD0544FD1498FD1CA7A0FD199899FD049FFD066EFD1C0A575051264A749F%756EFD05446E6E986E986E986E986E986E986E986E986E986EA0FD09A7FD%0A5A84FD09A79F6E986E986E986E986E986E986E986E986E986E986E986E%986E99999F6E6E6E99749F6EFD1B0A7B9F9F9F6FFD054468FD186E7CFD09%A7FD0A0F0EFD09A775FD186EFD0698FD059FFD1A0A57FD059FFD0644FD18%6EFD0AA7FD0A0F37FD09A7A0FD186E74FD0498FD069FFD1A0A50FD059FFD%0544FD186E75FD0AA7FD0A0F30FD0AA7FD186EFD0698FD059FFD1A0A2CFD%049F99FD0644FD176E75FD0AA7FD0A0F37FD0AA7FD186E74FD0498FD069F%FD1B0A509F9F744AFD0544FD186EA0FD0AA7FD0A0F30FD0AA775FD176EFD%07989F9F9E98FD253874FD1798A0FD0AA7FD0A0F37FD0AA79FFD1798FD0B%6EFD25389EFD1798FD0BA7FD0A0F30FD0AA7A0FD179899FD0A6EFD253874%FD1798A0FD0AA7FD0A0F37FD0AA79FFD1798FD0B6EFD25387AFD1798A6FD%0AA7FD0A0F0EFD0AA7A0FD17986FFD0A6EFD253874FD1798A0FD0AA7FD0A%0F37FD0AA79FFD1798FD0B6EFD253874FD176EA0FD0AA7FD0A0F30FD0AA7%A0FD176E986E986E986E986E986E98FD253850FD176EA0FD1FA775FD176E%FD0B98FD253874FD176EA0FD1FA7A0FD176E99FD0A98FD253850FD176EA0%FD1FA775FD176EFD0B98FD253874FD176EFD20A7A0FD176E99FD0A98FD25%386E986E986E986E986E986E986E986E986E986E986E986E98A0FD1FA775%986E986E986E986E986E986E986E986E986E986E986E986E986E986E986E%986E986EFD25387AFD1798A6FD1FA7A0FD17986FFD0A6EFD253874FD1798%A0FD1FA79FFD1798FD0B6EFD25387AFD1798A6FD1FA7A0FD179899FD0A6E%FD253874FD1798A0FD1FA79FFD1798FD0B6EFD25387AFD1798A6FD1FA7A0%FD179899FD0A6EFD253850FD176EA0FD1FA775FD176EFD0B98FD253874FD%176EFD20A7A0FD176E99FD0A98FD25384AFD176EA0FD1FA775FD176EFD0B%98FD253874FD176EA0FD1FA7A0FD176E99FD0A98FD253850FD176EA0FD1F%A775FD176EFD0B98FD2538986E986E986E986E986E986E986E986E986E98%6E986E986EA6FD1FA7A06E986E986E986E986E986E986E986E986E986E98%6E98FD0C6EFD253874FD1798A0FD1FA79FFD1798FD0B6EFD25387AFD1798%A6FD1FA7A0FD179899FD0A6EFD253874FD1798A0FD1FA79FFD1798FD0B6E%FD25389EFD1798FD20A7A0FD179899FD0A6EFD25386E986E986E986E986E%986E986E986E986E986E986E986E98A0FD1FA775986E986E986E986E986E%986E986E986E986E986E986E986E986E986E986E986E986EFD253874FD17%6EA0FD1FA7A0FD176E99FD0A98FD253850FD176EA0FD1FA775FD176EFD0B%98FD253874FD176EA0FD1FA7A0FD176E99FD0A98FD253850FD176EA0FD1F%A775FD176EFD0B98FD253874FD176EA0FD1FA7A0FD176E99FD0A98FD2538%74FD1798A0FD1FA79FFD1798FD0B6EFD25389EFD1798FD20A7A0FD179899%FD0A6EFD253874FD1798A0FD1FA79FFD1798FD0B6EFD25387AFD1798A6FD%1FA7A0FD17986FFD0A6EFD253874FD1798A0FD1FA79FFD1798FD0B6EFD25%3874FD176EA0FD1FA7A0FD176E986E986E986E986E986E98FD253850FD17%6EA0FD1FA775FD176EFD0B98FD253874FD176EA0FD1FA7A0FD176E99FD0A%98FD253850FD176EA0FD1FA775FD176EFD0B98FD253874FD176EFD20A7A0%FD176E99FD0A98FD1A385D335733573357335733574AFD176E75A7A0A7A0%A7A0A7A0A7A0A7A0A7A0A7A0A7A0A7A0A7A0A7A0A7A0A7A0A7A0A775FD17%6EFD0B98FD1A3833FD1A52FD237DFD0527FD1D52FD0627FD1A3857FD1A52%FD237DFD0627FD1D52FD0527FD1A3833FD1A52FD237DFD0527FD1D52FD06%27FD1A3857FD1A52FD237DFD0627FD1D52FD0527FD1A3833FD1A52FD237D%FD0527FD1D52FD052727%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 Pb0 0 0 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc0.1882 0.1216 0.3372 0.0157 0.8 0.8 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 48) Pc0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 57) Pc0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 64) Pc0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 91) Pc0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 106) Pc0.6118 0.0078 0 0 0.4 0.8 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 119) Pc0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 134) Pc0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 148) Pc0.8314 0 1 0 0.2 0.8 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 160) Pc0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 166) Pc0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 177) Pc0.9176 0.4353 0 0 0 0.4 1 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 203) Pc0.9333 0.2078 1 0.0745 0 0.4 0 Xa(\220V\213K\203J\203\211\201[\203X\203E\203H\203b\203` 208) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(NSD-FiT3 Galaxy class) (FILTERiT3 \203\211\203C\203u \203M\203\203\203\211\203N\203V\201[) (FiT3_21_Live Galaxy)%AI8_PluginGroupInfo(NSD-FiT3 Explosion class) (FILTERiT3 \203\211\203C\203u \203G\203N\203X\203v\203\215\201[\203W\203\207\203\223) (FiT3_22_Live Explosion)%AI8_PluginGroupInfo(NSD-FiT3 Generation class) (FILTERiT3 \203\211\203C\203u \203W\203F\203l\203\214\201[\203V\203\207\203\223) (FiT3_23_Live Generation)%AI8_PluginGroupInfo(NSD-FiT3 Reflections class) (FILTERiT3 \203\211\203C\203u \203\212\203t\203\214\203N\203V\203\207\203\223) (FiT3_24_Live Reflections)%AI8_PluginGroupInfo(NSD-FiT3 Frame class) (FILTERiT3 \203\211\203C\203u \203t\203\214\201[\203\200) (FiT3_25_Live Frame)%AI8_PluginGroupInfo(NSD-FiT3 Tiling class) (FILTERiT3 \203\211\203C\203u \203^\203C\203\212\203\223\203O) (FiT3_26_Live Tiling)%AI8_PluginGroupInfo(NSD-FiT3 Circle class) (FILTERiT3 \203\211\203C\203u \203T\201[\203N\203\213) (FiT3_27_Live Circle)%AI8_PluginGroupInfo(NSD-FiT3 DropShadow class) (FILTERiT3 \203\211\203C\203u \203V\203\203\203h\203E) (FiT3_28_Live DropShadow)%AI8_PluginGroupInfo(NSD-FiT3 Emboss class) (FILTERiT3 \203\211\203C\203u \203G\203\223\203{\203X) (FiT3_29_Live Emboss)%AI8_PluginGroupInfo(NSD-FiT3 Border class) (FILTERiT3 \203\211\203C\203u \203{\201[\203_\201[) (FiT3_30_Live Border)%AI8_PluginGroupInfo(NSD-FiT3 Neon class) (FILTERiT3 \203\211\203C\203u \203l\203I\203\223) (FiT3_31_Live Neon)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (\220V\213K\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\202\314\216\346\202\350\217\301\202\265) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203u\203\214\203\223\203h)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 8 0 0 0 0 50 Lb(\203K\203C\203h) Ln0 A1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 432 m264 432 L264 456 L288 456 L288 432 LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 3) Ln0 A0 O0.6118 0.0078 0 0 0.4 0.8 1 Xa800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR288 441 m264 441 L264 456 L288 456 L288 441 Lf0 Ap0.9333 0.2078 1 0.0745 0 0.4 0 Xa287.9941 455.9756 m276.0693 455.9756 L275.5195 455.9756 275.0693 455.5254 275.0693 454.9756 c275.0693 454.4258 274.7036 453.9756 274.2568 453.9756 c273.8101 453.9756 273.4443 453.6382 273.4443 453.2256 c273.4443 452.813 272.9941 452.4756 272.4443 452.4756 C270.4443 452.4756 L269.8945 452.4756 269.4443 452.0254 269.4443 451.4756 c269.4443 450.9258 268.9941 450.4756 268.4443 450.4756 C266.9443 450.4756 L266.3945 450.4756 265.9443 450.0254 265.9443 449.4756 c265.9443 448.9258 265.5225 448.4756 265.0068 448.4756 c264.4912 448.4756 264 448.0254 264 447.4756 C264 441 L287.9941 441 L287.9941 455.9756 Lf0 R0.8157 0.0431 1 0.0039 0.2 0.6 0 XA1 J269.5 449.5 m269.5 449 269.5 447.5 269.5 447 c269.5 446.5 269 446.5 268.5 446 cS275 450.5 m275 449.5 lS0.8314 0 1 0 0.2 0.8 0 XA272 448.5 m272 447.5 lS0.8157 0.0431 1 0.0039 0.2 0.6 0 XA278.5 453.5 m279.5 452.5 279 453 279.5 452.5 cS284 454 m285 453.5 286.5 452 286.5 451 c286.5 450 286.5 449 yS1 Ap0 O0.8314 0 1 0 0.2 0.8 0 Xa0 J275 441 m264 441 L264 432 L275 432 L275 441 Lf0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 Xa288 433 m269 433 L269 432 L288 432 L288 433 Lf0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa274 433 m281.5 433 L281.5 432 L274 432 L274 433 Lf0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa287 433 m288 433 L288 432 L287 432 L287 433 Lf280.5 433 m281.5 433 L281.5 432 L280.5 432 L280.5 433 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 443 m271 443 L271 442 L286 442 L286 443 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 444 m272 444 L272 443 L286 443 L286 444 Lf286 442 m270 442 L270 441 L286 441 L286 442 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 441 m271 441 L271 440 L286 440 L286 441 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 440 m271 440 L271 439 L286 439 L286 440 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 439 m271 439 L271 438 L286 438 L286 439 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 438 m271 438 L271 437 L286 437 L286 438 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 437 m271 437 L271 436 L286 436 L286 437 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 436 m271 436 L271 435 L286 435 L286 436 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 435 m271 435 L271 434 L286 434 L286 435 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 434 m271 434 L271 433 L286 433 L286 434 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 442 m288 442 L288 441 L286 441 L286 442 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 443 m288 443 L288 442 L286 442 L286 443 Lf286 441 m288 441 L288 440 L286 440 L286 441 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 445 m273 445 L273 444 L286 444 L286 445 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 446 m274 446 L274 445 L286 445 L286 446 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 447 m275 447 L275 446 L286 446 L286 447 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 448 m276 448 L276 447 L286 447 L286 448 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa280.5 449 m277 449 L277 448 L280.5 448 L280.5 449 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa280.5 450 m278 450 L278 449 L280.5 449 L280.5 450 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 440 m288 440 L288 439 L286 439 L286 440 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 439 m288 439 L288 438 L286 438 L286 439 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 438 m288 438 L288 437 L286 437 L286 438 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 437 m288 437 L288 436 L286 436 L286 437 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 436 m288 436 L288 435 L286 435 L286 436 Lf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa286 435 m288 435 L288 434 L286 434 L286 435 Lf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa286 434 m288 434 L288 433 L286 433 L286 434 Lf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa277.5 449 m279 449 L279 450 L277.5 450 L277.5 449 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa277 449.5 m277 449.2236 277.2236 449 277.5 449 c277.7764 449 278 449.2236 278 449.5 c278 449.7764 277.7764 450 277.5 450 c277.2236 450 277 449.7764 277 449.5 cf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa276.5 448 m278 448 L278 449 L276.5 449 L276.5 448 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa276 448.5 m276 448.2236 276.2236 448 276.5 448 c276.7764 448 277 448.2236 277 448.5 c277 448.7764 276.7764 449 276.5 449 c276.2236 449 276 448.7764 276 448.5 cf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa275.5 447 m277 447 L277 448 L275.5 448 L275.5 447 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa275 447.5 m275 447.2236 275.2236 447 275.5 447 c275.7764 447 276 447.2236 276 447.5 c276 447.7764 275.7764 448 275.5 448 c275.2236 448 275 447.7764 275 447.5 cf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa274.5 446 m276 446 L276 447 L274.5 447 L274.5 446 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa274 446.5 m274 446.2236 274.2236 446 274.5 446 c274.7764 446 275 446.2236 275 446.5 c275 446.7764 274.7764 447 274.5 447 c274.2236 447 274 446.7764 274 446.5 cf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa273.5 445 m275 445 L275 446 L273.5 446 L273.5 445 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa273 445.5 m273 445.2236 273.2236 445 273.5 445 c273.7764 445 274 445.2236 274 445.5 c274 445.7764 273.7764 446 273.5 446 c273.2236 446 273 445.7764 273 445.5 cf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa272.5 444 m274 444 L274 445 L272.5 445 L272.5 444 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa272 444.5 m272 444.2236 272.2236 444 272.5 444 c272.7764 444 273 444.2236 273 444.5 c273 444.7764 272.7764 445 272.5 445 c272.2236 445 272 444.7764 272 444.5 cf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa271.5 443 m273 443 L273 444 L271.5 444 L271.5 443 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa271 443.5 m271 443.2236 271.2236 443 271.5 443 c271.7764 443 272 443.2236 272 443.5 c272 443.7764 271.7764 444 271.5 444 c271.2236 444 271 443.7764 271 443.5 cf0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa270.5 442 m272 442 L272 443 L270.5 443 L270.5 442 Lf269.5 441 m271 441 L271 442 L269.5 442 L269.5 441 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa270 442.5 m270 442.2236 270.2236 442 270.5 442 c270.7764 442 271 442.2236 271 442.5 c271 442.7764 270.7764 443 270.5 443 c270.2236 443 270 442.7764 270 442.5 cf0 Ap0.1882 0.1216 0.3372 0.0157 0.8 0.8 0.6 Xa281.5 433 m281.5 440.4824 L281.5 442.4072 280.4248 443.9824 278.5 443.9824 c276.5752 443.9824 275.5 442.4072 275.5 440.4824 C275.5 433 L281.5 433 Lf1 Ap0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa269 441.5 m269 441.2236 269.2236 441 269.5 441 c269.7764 441 270 441.2236 270 441.5 c270 441.7764 269.7764 442 269.5 442 c269.2236 442 269 441.7764 269 441.5 cf0.9176 0.4353 0 0 0 0.4 1 Xa279.5 440 m277.5 440 L277.5 442 L279.5 442 L279.5 440 Lfu0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa288 450 m278.5 450 L278.5 451 L288 451 L288 450 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa279 450.5 m279 450.2236 278.7764 450 278.5 450 c278.2236 450 278 450.2236 278 450.5 c278 450.7764 278.2236 451 278.5 451 c278.7764 451 279 450.7764 279 450.5 cf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa288 449 m279.5 449 L279.5 450 L288 450 L288 449 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa280 449.5 m280 449.2236 279.7764 449 279.5 449 c279.2236 449 279 449.2236 279 449.5 c279 449.7764 279.2236 450 279.5 450 c279.7764 450 280 449.7764 280 449.5 cf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa288 448 m280.5 448 L280.5 449 L288 449 L288 448 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa281 448.5 m281 448.2236 280.7764 448 280.5 448 c280.2236 448 280 448.2236 280 448.5 c280 448.7764 280.2236 449 280.5 449 c280.7764 449 281 448.7764 281 448.5 cf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa288 447 m281.5 447 L281.5 448 L288 448 L288 447 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa282 447.5 m282 447.2236 281.7764 447 281.5 447 c281.2236 447 281 447.2236 281 447.5 c281 447.7764 281.2236 448 281.5 448 c281.7764 448 282 447.7764 282 447.5 cf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa288 446 m282.5 446 L282.5 447 L288 447 L288 446 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa283 446.5 m283 446.2236 282.7764 446 282.5 446 c282.2236 446 282 446.2236 282 446.5 c282 446.7764 282.2236 447 282.5 447 c282.7764 447 283 446.7764 283 446.5 cf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa288 445 m283.5 445 L283.5 446 L288 446 L288 445 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa284 445.5 m284 445.2236 283.7764 445 283.5 445 c283.2236 445 283 445.2236 283 445.5 c283 445.7764 283.2236 446 283.5 446 c283.7764 446 284 445.7764 284 445.5 cf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa288 444 m284.5 444 L284.5 445 L288 445 L288 444 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa285 444.5 m285 444.2236 284.7764 444 284.5 444 c284.2236 444 284 444.2236 284 444.5 c284 444.7764 284.2236 445 284.5 445 c284.7764 445 285 444.7764 285 444.5 cf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa288 443 m285.5 443 L285.5 444 L288 444 L288 443 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa286 443.5 m286 443.2236 285.7764 443 285.5 443 c285.2236 443 285 443.2236 285 443.5 c285 443.7764 285.2236 444 285.5 444 c285.7764 444 286 443.7764 286 443.5 cf0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa288 442 m286.5 442 L286.5 443 L288 443 L288 442 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa287 442.5 m287 442.2236 286.7764 442 286.5 442 c286.2236 442 286 442.2236 286 442.5 c286 442.7764 286.2236 443 286.5 443 c286.7764 443 287 442.7764 287 442.5 cf0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa288 441 m287.5 441 L287.5 442 L288 442 L288 441 Lf0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa288 441.5 m288 441.2236 287.7764 441 287.5 441 c287.2236 441 287 441.2236 287 441.5 c287 441.7764 287.2236 442 287.5 442 c287.7764 442 288 441.7764 288 441.5 cfU0 Ap0 R0.8157 0.0431 1 0.0039 0.2 0.6 0 XA1 J265.9165 444.5 m265.9165 443.5 lSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF